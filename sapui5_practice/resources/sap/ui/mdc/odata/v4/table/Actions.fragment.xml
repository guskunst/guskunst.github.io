<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core" xmlns="sap.m"
	template:require="{
		ID: 'sap/ui/mdc/odata/v4/StableIdHelper',
		COMMON: 'sap/ui/mdc/odata/v4/CommonHelper'
	}"
>
	<template:with path="collection>" helper="COMMON.getTargetCollection" var="targetCollection">

		<template:if test="{= ${this>onCallAction} &amp;&amp; ${this>selectedContextsModel} &amp;&amp; ${this>id}}">
			<template:repeat list="{targetCollection>./@com.sap.vocabularies.UI.v1.LineItem}" var="dataField">
				<template:if test="{= !(${dataField>./@com.sap.vocabularies.UI.v1.Hidden} === true)}">
					<template:if
						test="{= ${dataField>$Type} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' &amp;&amp; ${dataField>Inline} !== true &amp;&amp; !(${dataField>Determining} === true ) }">
						<Button
							text="{dataField>Label}"
							press="{= ${this>onCallAction} + '(\'' + ${dataField>Action} + '\' ,
							${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/selectedContexts},
							{ invocationGrouping : \'' + (${dataField>InvocationGrouping/$EnumMember} === 'com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet' ?'ChangeSet' : 'Isolated') + '\',
							label: \'' + ${dataField>Label} + '\'})'}"
							enabled="{= ${dataField>Action@Org.OData.Core.V1.OperationAvailable} === null
							? (${dataField>Action/0/$IsBound} !== true
							? 'true'
							: '{= %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/' + ${dataField>Action} + '}
							? %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/' + ${dataField>Action} + '}
							:false}')
							: ${dataField>Action/0/$IsBound} !== true
							? 'true'
							: '{= %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/numberOfSelectedContexts} > 0}' }"
							visible="{= ${dataField>Action@Org.OData.Core.V1.OperationAvailable} === false ? 'false' :'true'}"
							>
						</Button>
					</template:if>
				</template:if>
			</template:repeat>
		</template:if>

		<template:if test="{= ${this>onCreate} &amp;&amp; ${this>creationMode} !== 'CreationRow' &amp;&amp; (${this>showCreate} !== undefined &amp;&amp; ${this>showCreate} !== null) ? ${this>showCreate} : (${targetCollection>@com.sap.vocabularies.Session.v1.StickySessionSupported/NewAction} ? (${targetCollection>@com.sap.vocabularies.Session.v1.StickySessionSupported/NewAction@Org.OData.Core.V1.OperationAvailable} !== false) :  (${targetCollection>@com.sap.vocabularies.Common.v1.DraftRoot/NewAction} ? (${targetCollection>@com.sap.vocabularies.Common.v1.DraftRoot/NewAction@Org.OData.Core.V1.OperationAvailable} !== false) : (${targetCollection>@Org.OData.Capabilities.V1.InsertRestrictions/Insertable} !== false)))}">
			<!-- temporary check to disable create document option in non-draft -->
			<!-- template:if test="{= ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} || ${collection>@com.sap.vocabularies.Common.v1.DraftNode} }" -->
			<Button
				id="{= ID.generate([${this>id},'Create'])}"
				text="{this.i18n>table.CREATE}"
				press="{= ${this>onCreate} + '(\'' + ${this>id} +'\', {creationMode: ${$source>}.getParent().getParent().getParent().data(\'creationMode\'), createAtEnd: ${$source>}.getParent().getParent().getParent().data(\'createAtEnd\')})' }"
				type="Transparent"
				visible="{= ${this>showCreate} || true }"
				/>
				<!-- /template:if -->
		</template:if>
		<template:if test="{= !(${targetCollection>@Org.OData.Capabilities.V1.DeleteRestrictions/Deletable} === false)}">
			<template:if test="{= ${this>selectedContextsModel} &amp;&amp; ${this>id} &amp;&amp; ${this>onDelete} }">
				<Button
					text="{this.i18n>table.DELETE}"
					press="{= ${this>onDelete} + '(${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts},{id:\'' + ${this>id} +'\', numberOfSelectedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/selectedContexts}.length , unSavedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts} , lockedContexts:${' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/lockedContexts}})'}"
					type="Transparent"
					visible="{this>showDelete}"
					enabled="{= '{= ((%{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts} &amp;&amp; %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deletableContexts}.length > 0) || (%{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts} &amp;&amp; %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/unSavedContexts}.length > 0)) ? %{' + ${this>selectedContextsModel} + '>/$contexts/' + ${this>id} + '/deleteEnabled} : false}' }"
				/>
			</template:if>
		</template:if>
	</template:with>
</core:FragmentDefinition>
