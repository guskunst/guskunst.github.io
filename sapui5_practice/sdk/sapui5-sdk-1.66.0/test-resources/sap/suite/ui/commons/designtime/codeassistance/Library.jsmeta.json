{"!define":{"sap.suite.ui.commons.ProcessFlowZoomLevel":{"!description":"The zoom level defines level of details for the node and how much space the process flow requires.","!category":"static class","Three":{"!description":"The details are the icon, title text and no additional texts.","!type":"String","!category":"enum"},"One":{"!description":"The full details with normal font size.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Two":{"!description":"The full detail view of the node but with smaller font size.","!type":"String","!category":"enum"},"Four":{"!description":"Zoom level for least details - only icon is displayed.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.HeaderCell":{"setNorth":{"!description":"Sets the aggregated {@link #getNorth north}.","!type":"fn(oNorth: sap.suite.ui.commons.HeaderCellItem) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"oNorth":"type: sap.suite.ui.commons.HeaderCellItem, description: The north to set"},"!static":false},"getEast":{"!description":"Gets content of aggregation {@link #getEast east}.\n\nObject that contains control to render in east area of the HeaderCell.","!type":"fn() -> sap.suite.ui.commons.HeaderCellItem","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getWest":{"!description":"Gets content of aggregation {@link #getWest west}.\n\nObject that contains control to render in west area of the HeaderCell.","!type":"fn() -> sap.suite.ui.commons.HeaderCellItem","!category":"function","!static":false},"getNorth":{"!description":"Gets content of aggregation {@link #getNorth north}.\n\nObject that contains control to render in north area of the HeaderCell.","!type":"fn() -> sap.suite.ui.commons.HeaderCellItem","!category":"function","!static":false},"setEast":{"!description":"Sets the aggregated {@link #getEast east}.","!type":"fn(oEast: sap.suite.ui.commons.HeaderCellItem) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"oEast":"type: sap.suite.ui.commons.HeaderCellItem, description: The east to set"},"!static":false},"!constructorDescription":"Constructor for a new HeaderCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeigth heigth} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 106px)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getWest west} : sap.suite.ui.commons.HeaderCellItem<\/li>\n<li>{@link #getNorth north} : sap.suite.ui.commons.HeaderCellItem<\/li>\n<li>{@link #getEast east} : sap.suite.ui.commons.HeaderCellItem<\/li>\n<li>{@link #getSouth south} : sap.suite.ui.commons.HeaderCellItem<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/HeaderCell","getHeigth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.2 Wrong property name<br>Gets current value of property {@link #getHeigth heigth}.\n\nHeight of the HeaderCell control.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"destroyNorth":{"!description":"Destroys the north in the aggregation {@link #getNorth north}.","!type":"fn() -> sap.suite.ui.commons.HeaderCell","!category":"function","!static":false},"destroyWest":{"!description":"Destroys the west in the aggregation {@link #getWest west}.","!type":"fn() -> sap.suite.ui.commons.HeaderCell","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the HeaderCell control.\n\nDefault value is <code>106px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44.0 HeaderCell control is no longer used. Please use other container controls instead (like sap.m.VBox or sap.m.HBox).<br>This control contains 4 cells (West, North, East, South). It can display one or more controls in different layouts. Each aggregation must contain only one instance of HeaderCellItem.","setHeigth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.2 Wrong property name<br>Sets a new value for property {@link #getHeigth heigth}.\n\nHeight of the HeaderCell control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sHeigth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"sHeigth":"type: sap.ui.core.CSSSize, description: New value for property <code>heigth<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the HeaderCell control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>106px<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getSouth":{"!description":"Gets content of aggregation {@link #getSouth south}.\n\nObject that contains control to render in south area of the HeaderCell.","!type":"fn() -> sap.suite.ui.commons.HeaderCellItem","!category":"function","!static":false},"destroySouth":{"!description":"Destroys the south in the aggregation {@link #getSouth south}.","!type":"fn() -> sap.suite.ui.commons.HeaderCell","!category":"function","!static":false},"setWest":{"!description":"Sets the aggregated {@link #getWest west}.","!type":"fn(oWest: sap.suite.ui.commons.HeaderCellItem) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"oWest":"type: sap.suite.ui.commons.HeaderCellItem, description: The west to set"},"!static":false},"destroyEast":{"!description":"Destroys the east in the aggregation {@link #getEast east}.","!type":"fn() -> sap.suite.ui.commons.HeaderCell","!category":"function","!static":false},"setSouth":{"!description":"Sets the aggregated {@link #getSouth south}.","!type":"fn(oSouth: sap.suite.ui.commons.HeaderCellItem) -> sap.suite.ui.commons.HeaderCell","!category":"function","parameters":{"oSouth":"type: sap.suite.ui.commons.HeaderCellItem, description: The south to set"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.HeaderCell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44.0 HeaderCell control is no longer used. Please use other container controls instead (like sap.m.VBox or sap.m.HBox).<br>This control contains 4 cells (West, North, East, South). It can display one or more controls in different layouts. Each aggregation must contain only one instance of HeaderCellItem.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.ThreePanelThingInspector":{"indexOfMenuContent":{"!description":"Checks for the provided <code>sap.ui.commons.Link<\/code> in the aggregation {@link #getMenuContent menuContent}. and returns its index if found or -1 otherwise.","!type":"fn(oMenuContent: sap.ui.commons.Link) -> Number","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent whose index is looked for"},"!static":false},"setLogo":{"!description":"Sets a new value for property {@link #getLogo logo}.\n\nA URL of the source of the ThingViewer's key visual image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLogo: sap.ui.core.URI) -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","parameters":{"sLogo":"type: sap.ui.core.URI, description: New value for property <code>logo<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingInspector.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"removeMenuContent":{"!description":"Removes a menuContent from the aggregation {@link #getMenuContent menuContent}.","!type":"fn(vMenuContent: Number | String | sap.ui.commons.Link) -> sap.ui.commons.Link","!category":"function","parameters":{"vMenuContent":"type: int|string|sap.ui.commons.Link, description: The menuContent to remove or its index or id"},"!static":false},"setShowHeader":{"!description":"Sets a new value for property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel of the ThingViewer named Header that contains general information.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeader: Boolean) -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ThreePanelThingInspector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getLogo logo} : sap.ui.core.URI<\/li>\n<li>{@link #getSidebarWidth sidebarWidth} : sap.ui.core.CSSSize (default: 224px)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenuContent menuContent} : sap.ui.commons.Link[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.ThingInspector#constructor sap.ui.ux3.ThingInspector}\ncan be used as well.","destroyMenuContent":{"!description":"Destroys all the menuContent in the aggregation {@link #getMenuContent menuContent}.","!type":"fn() -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","!static":false},"!module":"sap/suite/ui/commons/ThreePanelThingInspector","getSidebarWidth":{"!description":"Gets current value of property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the ThingViewer's navigation panel.\n\nDefault value is <code>224px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getShowHeader":{"!description":"Gets current value of property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel of the ThingViewer named Header that contains general information.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control extends the sap.ui.ux3.ThingInspector control. It displays the sap.suite.ui.commons.ThreePanelThingViewer control in the sap.ui.ux3.Overlay control.","getLogo":{"!description":"Gets current value of property {@link #getLogo logo}.\n\nA URL of the source of the ThingViewer's key visual image.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"insertMenuContent":{"!description":"Inserts a menuContent into the aggregation {@link #getMenuContent menuContent}.","!type":"fn(oMenuContent: sap.ui.commons.Link, iIndex: Number) -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the menuContent should be inserted at; for a negative value of <code>iIndex<\/code>, the menuContent is inserted at position 0; for a value greater than the current size of the aggregation, the menuContent is inserted at the last position"},"!static":false},"setSidebarWidth":{"!description":"Sets a new value for property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the ThingViewer's navigation panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>224px<\/code>.","!type":"fn(sSidebarWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","parameters":{"sSidebarWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>sidebarWidth<\/code>"},"!static":false},"!category":"class","getMenuContent":{"!description":"Gets content of aggregation {@link #getMenuContent menuContent}.\n\nThe items of the ThingViewer's Action Menu.","!type":"fn() -> [sap.ui.commons.Link]","!category":"function","!static":false},"removeAllMenuContent":{"!description":"Removes all the controls from the aggregation {@link #getMenuContent menuContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Link]","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control extends the sap.ui.ux3.ThingInspector control. It displays the sap.suite.ui.commons.ThreePanelThingViewer control in the sap.ui.ux3.Overlay control.","!proto":"sap.ui.ux3.ThingInspector","addMenuContent":{"!description":"Adds some menuContent to the aggregation {@link #getMenuContent menuContent}.","!type":"fn(oMenuContent: sap.ui.commons.Link) -> sap.suite.ui.commons.ThreePanelThingInspector","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent to add; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingInspector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.CalculationBuilder_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.CalculationBuilder"},"sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem"},"sap.suite.ui.commons.CalculationBuilderFunction_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderFunction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.CalculationBuilderFunction"},"sap.suite.ui.commons.networkgraph.util.Dijkstra_obj":{"!type":"fn(oGraph: sap.suite.ui.commons.networkgraph.Graph, oSourceNode: sap.suite.ui.commons.networkgraph.Node, oSettings?: Object)","prototype":"sap.suite.ui.commons.networkgraph.util.Dijkstra"},"sap.suite.ui.commons.ProcessFlowConnection":{"getState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 State is deprecated because of no usages. There will be no replacement.<br>Gets current value of property {@link #getState state}.\n\nState of the connection.\n\nDefault value is <code>Regular<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowConnectionState","!category":"function","!static":false},"setType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Type is deprecated because of no usages. There will be no replacement.<br>Sets a new value for property {@link #getType type}.\n\nType of the connection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Normal<\/code>.","!type":"fn(sType: sap.suite.ui.commons.ProcessFlowConnectionType) -> sap.suite.ui.commons.ProcessFlowConnection","!category":"function","parameters":{"sType":"type: sap.suite.ui.commons.ProcessFlowConnectionType, description: New value for property <code>type<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setZoomLevel":{"!description":"Sets a new value for property {@link #getZoomLevel zoomLevel}.\n\nThis is a current zoom level for the connection. The point of connection to the node is derived from zoom level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Two<\/code>.","!type":"fn(sZoomLevel: sap.suite.ui.commons.ProcessFlowZoomLevel) -> sap.suite.ui.commons.ProcessFlowConnection","!category":"function","parameters":{"sZoomLevel":"type: sap.suite.ui.commons.ProcessFlowZoomLevel, description: New value for property <code>zoomLevel<\/code>"},"!static":false},"getZoomLevel":{"!description":"Gets current value of property {@link #getZoomLevel zoomLevel}.\n\nThis is a current zoom level for the connection. The point of connection to the node is derived from zoom level.\n\nDefault value is <code>Two<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowZoomLevel","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ProcessFlowConnection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDrawData drawData} : object[]<\/li>\n<li>{@link #getZoomLevel zoomLevel} : sap.suite.ui.commons.ProcessFlowZoomLevel (default: Two)<\/li>\n<li>{@link #getType type} : sap.suite.ui.commons.ProcessFlowConnectionType (default: Normal)<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowConnectionState (default: Regular)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/ProcessFlowConnection","getType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Type is deprecated because of no usages. There will be no replacement.<br>Gets current value of property {@link #getType type}.\n\nType of the connection.\n\nDefault value is <code>Normal<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowConnectionType","!category":"function","!static":false},"!description":"This control is used inside the ProcessFlow control to connect process flow node A with process flow node B in respect to the style(x) chosen by the application.","!category":"class","setState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 State is deprecated because of no usages. There will be no replacement.<br>Sets a new value for property {@link #getState state}.\n\nState of the connection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Regular<\/code>.","!type":"fn(sState: sap.suite.ui.commons.ProcessFlowConnectionState) -> sap.suite.ui.commons.ProcessFlowConnection","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.ProcessFlowConnectionState, description: New value for property <code>state<\/code>"},"!static":false},"setDrawData":{"!description":"Sets a new value for property {@link #getDrawData drawData}.\n\nThis is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDrawData: [Object]) -> sap.suite.ui.commons.ProcessFlowConnection","!category":"function","parameters":{"sDrawData":"type: object[], description: New value for property <code>drawData<\/code>"},"!static":false},"getDrawData":{"!description":"Gets current value of property {@link #getDrawData drawData}.\n\nThis is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.","!type":"fn() -> [Object]","!category":"function","!static":false},"!helpDescription":"This control is used inside the ProcessFlow control to connect process flow node A with process flow node B in respect to the style(x) chosen by the application.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.layout.TwoColumnsLayout_obj":{"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.TwoColumnsLayout"},"sap.suite.ui.commons.TargetFilterColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilterColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TargetFilterColumn"},"sap.suite.ui.commons.DeltaMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.DeltaMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.DeltaMicroChart"},"sap.suite.ui.commons.networkgraph.layout.TwoColumnsLayout":{"!description":"This algorithm rearranges the graph into two columns.","layout":{"!description":"Executes the layout algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new TwoColumnsLayout.","getLayoutRenderType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/layout/TwoColumnsLayout","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","!helpDescription":"This algorithm rearranges the graph into two columns."},"sap.suite.ui.commons.FeedItemHeader":{"setLink":{"!description":"Sets a new value for property {@link #getLink link}.\n\nThe target location of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLink: sap.ui.core.URI) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"sLink":"type: sap.ui.core.URI, description: New value for property <code>link<\/code>"},"!static":false},"setImage":{"!description":"Sets a new value for property {@link #getImage image}.\n\nThe image associated with the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImage: sap.ui.core.URI) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"sImage":"type: sap.ui.core.URI, description: New value for property <code>image<\/code>"},"!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nThe description of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedItemHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getPublicationDate":{"!description":"Gets current value of property {@link #getPublicationDate publicationDate}.\n\nThe date the feed item was published.","!type":"fn() -> Object","!category":"function","!static":false},"getLink":{"!description":"Gets current value of property {@link #getLink link}.\n\nThe target location of the feed item.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!constructorDescription":"Constructor for a new FeedItemHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getImage image} : sap.ui.core.URI<\/li>\n<li>{@link #getLink link} : sap.ui.core.URI<\/li>\n<li>{@link #getSource source} : string<\/li>\n<li>{@link #getPublicationDate publicationDate} : object<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/suite/ui/commons/FeedItemHeader","getSource":{"!description":"Gets current value of property {@link #getSource source}.\n\nThe source of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control displays feed item header information.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setSource":{"!description":"Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSource: String) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"sSource":"type: string, description: New value for property <code>source<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nThe description of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"getImage":{"!description":"Gets current value of property {@link #getImage image}.\n\nThe image associated with the feed item.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setPublicationDate":{"!description":"Sets a new value for property {@link #getPublicationDate publicationDate}.\n\nThe date the feed item was published.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oPublicationDate: Object) -> sap.suite.ui.commons.FeedItemHeader","!category":"function","parameters":{"oPublicationDate":"type: object, description: New value for property <code>publicationDate<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control displays feed item header information.","!proto":"sap.m.ListItemBase","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.FeedItemHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm"},"sap.suite.ui.commons.MicroProcessFlowItem":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nState associated with this node.<br>The state defines the semantic color applied to the node. Available states include <code>Standard<\/code> (neutral), <code>Error<\/code> (negative), <code>Success<\/code> (positive), and <code>Warning<\/code> (critical).\n\nDefault value is <code>Standard<\/code>.","!type":"fn() -> sap.ui.core.ValueState","!category":"function","!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the node.","!type":"fn() -> String","!category":"function","!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getCustomControl":{"!description":"Gets content of aggregation {@link #getCustomControl customControl}.\n\nHolds custom controls to be used as process flow nodes.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/suite/ui/commons/MicroProcessFlowItem","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon that is displayed inside the node. <br>By default, an icon that corresponds to the node's <code>state<\/code> is used.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the node.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"getStepWidth":{"!description":"Gets current value of property {@link #getStepWidth stepWidth}.\n\nDistance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getShowSeparator":{"!description":"Gets current value of property {@link #getShowSeparator showSeparator}.\n\nDefines whether a connector line should be displayed between this node and the node that follows it.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowSeparator":{"!description":"Sets a new value for property {@link #getShowSeparator showSeparator}.\n\nDefines whether a connector line should be displayed between this node and the node that follows it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSeparator: Boolean) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"bShowSeparator":"type: boolean, description: New value for property <code>showSeparator<\/code>"},"!static":false},"setShowIntermediary":{"!description":"Sets a new value for property {@link #getShowIntermediary showIntermediary}.\n\nDefines whether an object should be displayed between this node and the following node. <br>When set to <code>true<\/code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowIntermediary: Boolean) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"bShowIntermediary":"type: boolean, description: New value for property <code>showIntermediary<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle associated with this node. <br>The title is displayed as a tooltip when the user hovers over the node. This title can also be used by screen reader software.","!type":"fn() -> String","!category":"function","!static":false},"setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nState associated with this node.<br>The state defines the semantic color applied to the node. Available states include <code>Standard<\/code> (neutral), <code>Error<\/code> (negative), <code>Success<\/code> (positive), and <code>Warning<\/code> (critical).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!type":"fn(sState: sap.ui.core.ValueState) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"sState":"type: sap.ui.core.ValueState, description: New value for property <code>state<\/code>"},"!static":false},"destroyIntermediary":{"!description":"Destroys the intermediary in the aggregation {@link #getIntermediary intermediary}.","!type":"fn() -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","!static":false},"setCustomControl":{"!description":"Sets the aggregated {@link #getCustomControl customControl}.","!type":"fn(oCustomControl: sap.ui.core.Control) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"oCustomControl":"type: sap.ui.core.Control, description: The customControl to set"},"!static":false},"getIntermediary":{"!description":"Gets content of aggregation {@link #getIntermediary intermediary}.\n\nHolds objects to be displayed between the process flow nodes.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlowItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getShowIntermediary":{"!description":"Gets current value of property {@link #getShowIntermediary showIntermediary}.\n\nDefines whether an object should be displayed between this node and the following node. <br>When set to <code>true<\/code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary<\/code> aggregation.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyCustomControl":{"!description":"Destroys the customControl in the aggregation {@link #getCustomControl customControl}.","!type":"fn() -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MicroProcessFlowItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: Standard)<\/li>\n<li>{@link #getShowIntermediary showIntermediary} : boolean (default: false)<\/li>\n<li>{@link #getStepWidth stepWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowSeparator showSeparator} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<li>{@link #getIntermediary intermediary} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.MicroProcessFlowItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.MicroProcessFlowItem<\/code> itself.\n\nThis event is fired when the user clicks or taps a node.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MicroProcessFlowItem<\/code> itself"},"!static":false},"setIntermediary":{"!description":"Sets the aggregated {@link #getIntermediary intermediary}.","!type":"fn(oIntermediary: sap.ui.core.Control) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"oIntermediary":"type: sap.ui.core.Control, description: The intermediary to set"},"!static":false},"!description":"Holds information about one node in the micro process flow.","setStepWidth":{"!description":"Sets a new value for property {@link #getStepWidth stepWidth}.\n\nDistance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sStepWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"sStepWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>stepWidth<\/code>"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle associated with this node. <br>The title is displayed as a tooltip when the user hovers over the node. This title can also be used by screen reader software.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon that is displayed inside the node. <br>By default, an icon that corresponds to the node's <code>state<\/code> is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.MicroProcessFlowItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Holds information about one node in the micro process flow.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroProcessFlowItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ValueStatus":{"Good":{"!description":"Good value.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Numeric content or any other standard Fiori control should be used instead.<br>Marker for the key value status.","Neutral":{"!description":"Positive value.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical value.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Bad":{"!description":"Bad value.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.MonitoringContent":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe actual value.","!type":"fn() -> String","!category":"function","!static":false},"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nIndicates the load status.\n\nDefault value is <code>Loaded<\/code>.","!type":"fn() -> sap.suite.ui.commons.LoadState","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sSize: sap.suite.ui.commons.InfoTileSize) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"sSize":"type: sap.suite.ui.commons.InfoTileSize, description: New value for property <code>size<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MonitoringContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setAnimateTextChange":{"!description":"Sets a new value for property {@link #getAnimateTextChange animateTextChange}.\n\nIf set to true, changing of the value is animated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAnimateTextChange: Boolean) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"bAnimateTextChange":"type: boolean, description: New value for property <code>animateTextChange<\/code>"},"!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new MonitoringContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getIconSrc iconSrc} : string<\/li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: Auto)<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: Loaded)<\/li>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.Icon<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/MonitoringContent","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.MonitoringContent<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.MonitoringContent<\/code> itself.\n\nThe event is fired when the user chooses the monitoring content.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.MonitoringContent<\/code> itself"},"!static":false},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nThe icon that is displayed in the content.","!type":"fn() -> sap.ui.core.Icon","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.NumericContent.<br>This control is used in a tile or any other place to display numeric values and an icon.","!category":"class","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nIndicates the load status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded<\/code>.","!type":"fn(sState: sap.suite.ui.commons.LoadState) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.LoadState, description: New value for property <code>state<\/code>"},"!static":false},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!type":"fn(oIcon: sap.ui.core.Icon) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"oIcon":"type: sap.ui.core.Icon, description: The icon to set"},"!static":false},"getIconSrc":{"!description":"Gets current value of property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.","!type":"fn() -> String","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.MonitoringContent<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.suite.ui.commons.InfoTileSize","!category":"function","!static":false},"setIconSrc":{"!description":"Sets a new value for property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSrc: String) -> sap.suite.ui.commons.MonitoringContent","!category":"function","parameters":{"sIconSrc":"type: string, description: New value for property <code>iconSrc<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MonitoringContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.NumericContent.<br>This control is used in a tile or any other place to display numeric values and an icon.","!proto":"sap.ui.core.Control","destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!type":"fn() -> sap.suite.ui.commons.MonitoringContent","!category":"function","!static":false},"getAnimateTextChange":{"!description":"Gets current value of property {@link #getAnimateTextChange animateTextChange}.\n\nIf set to true, changing of the value is animated.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.suite.ui.commons.ChartTile":{"setUnit":{"!description":"Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUnit: String) -> sap.suite.ui.commons.ChartTile","!category":"function","parameters":{"sUnit":"type: string, description: New value for property <code>unit<\/code>"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a comparison or bullet chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getUnit":{"!description":"Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new ChartTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUnit unit} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well.","!module":"sap/suite/ui/commons/ChartTile","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ChartTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.InfoTile","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a comparison or bullet chart."},"sap.suite.ui.commons.LoadState":{"Loaded":{"!description":"LoadableView has loaded the control.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.m.LoadState should be used.<br>Enumeration of possible load states for LoadableView.","Loading":{"!description":"LoadableView is loading the control.","!type":"String","!category":"enum"},"Disabled":{"!description":"LoadableView disabled to load the control.","!type":"String","!category":"enum"},"Failed":{"!description":"LoadableView failed to load the control.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.ViewRepeater":{"setItemMinWidth":{"!description":"Sets a new value for property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iItemMinWidth: Number) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"iItemMinWidth":"type: int, description: New value for property <code>itemMinWidth<\/code>"},"!static":false},"getItemMinWidth":{"!description":"Gets current value of property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.","!type":"fn() -> Number","!category":"function","!static":false},"getShowSearchField":{"!description":"Gets current value of property {@link #getShowSearchField showSearchField}.\n\nIndicates if the search field panel is shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowViews":{"!description":"Sets a new value for property {@link #getShowViews showViews}.\n\nIndicates if the view selector panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowViews: Boolean) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"bShowViews":"type: boolean, description: New value for property <code>showViews<\/code>"},"!static":false},"setExternal":{"!description":"Sets a new value for property {@link #getExternal external}.\n\nIndicates if the external representation of the current view is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExternal: Boolean) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"bExternal":"type: boolean, description: New value for property <code>external<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/ViewRepeater","getExternalRepresentation":{"!description":"ID of the element which is the current target of the association {@link #getExternalRepresentation externalRepresentation}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the control. Only applicable if the responsive property is set to true.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.ViewRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ViewRepeater<\/code> itself.\n\nThis event is fired when the user performs a search.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater<\/code> itself"},"!static":false},"addView":{"!description":"Adds some view to the aggregation {@link #getViews views}.","!type":"fn(oView: sap.suite.ui.commons.RepeaterViewConfiguration) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"oView":"type: sap.suite.ui.commons.RepeaterViewConfiguration, description: The view to add; if empty, nothing is inserted"},"!static":false},"setExternalRepresentation":{"!description":"Sets the associated {@link #getExternalRepresentation externalRepresentation}.","!type":"fn(oExternalRepresentation: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"oExternalRepresentation":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this externalRepresentation association; alternatively, an element instance may be given"},"!static":false},"!category":"class","indexOfView":{"!description":"Checks for the provided <code>sap.suite.ui.commons.RepeaterViewConfiguration<\/code> in the aggregation {@link #getViews views}. and returns its index if found or -1 otherwise.","!type":"fn(oView: sap.suite.ui.commons.RepeaterViewConfiguration) -> Number","!category":"function","parameters":{"oView":"type: sap.suite.ui.commons.RepeaterViewConfiguration, description: The view whose index is looked for"},"!static":false},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"insertView":{"!description":"Inserts a view into the aggregation {@link #getViews views}.","!type":"fn(oView: sap.suite.ui.commons.RepeaterViewConfiguration, iIndex: Number) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"oView":"type: sap.suite.ui.commons.RepeaterViewConfiguration, description: The view to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the view should be inserted at; for a negative value of <code>iIndex<\/code>, the view is inserted at position 0; for a value greater than the current size of the aggregation, the view is inserted at the last position"},"!static":false},"getDefaultViewIndex":{"!description":"Gets current value of property {@link #getDefaultViewIndex defaultViewIndex}.\n\nThe index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getShowViews":{"!description":"Gets current value of property {@link #getShowViews showViews}.\n\nIndicates if the view selector panel is shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachChangeView":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:changeView changeView} event of this <code>sap.suite.ui.commons.ViewRepeater<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ViewRepeater<\/code> itself.\n\nThis event is fired when a user switches between views.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ViewRepeater<\/code> itself"},"!static":false},"getItemHeight":{"!description":"Gets current value of property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.","!type":"fn() -> Number","!category":"function","!static":false},"removeView":{"!description":"Removes a view from the aggregation {@link #getViews views}.","!type":"fn(vView: Number | String | sap.suite.ui.commons.RepeaterViewConfiguration) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"vView":"type: int|string|sap.suite.ui.commons.RepeaterViewConfiguration, description: The view to remove or its index or id"},"!static":false},"removeAllViews":{"!description":"Removes all the controls from the aggregation {@link #getViews views}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.RepeaterViewConfiguration]","!category":"function","!static":false},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.ViewRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setShowSearchField":{"!description":"Sets a new value for property {@link #getShowSearchField showSearchField}.\n\nIndicates if the search field panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSearchField: Boolean) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"bShowSearchField":"type: boolean, description: New value for property <code>showSearchField<\/code>"},"!static":false},"setItemHeight":{"!description":"Sets a new value for property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iItemHeight: Number) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"iItemHeight":"type: int, description: New value for property <code>itemHeight<\/code>"},"!static":false},"getViews":{"!description":"Gets content of aggregation {@link #getViews views}.\n\nThe list of views for the data representation.","!type":"fn() -> [sap.suite.ui.commons.RepeaterViewConfiguration]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ViewRepeater with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.RowRepeater.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"destroyViews":{"!description":"Destroys all the views in the aggregation {@link #getViews views}.","!type":"fn() -> sap.suite.ui.commons.ViewRepeater","!category":"function","!static":false},"setResponsive":{"!description":"Sets a new value for property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bResponsive: Boolean) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"bResponsive":"type: boolean, description: New value for property <code>responsive<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ViewRepeater.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getItemMinWidth itemMinWidth} : int<\/li>\n<li>{@link #getResponsive responsive} : boolean (default: false)<\/li>\n<li>{@link #getDefaultViewIndex defaultViewIndex} : int (default: 0)<\/li>\n<li>{@link #getShowSearchField showSearchField} : boolean (default: true)<\/li>\n<li>{@link #getShowViews showViews} : boolean (default: true)<\/li>\n<li>{@link #getExternal external} : boolean (default: false)<\/li>\n<li>{@link #getItemHeight itemHeight} : int<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getViews views} : sap.suite.ui.commons.RepeaterViewConfiguration[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getExternalRepresentation externalRepresentation} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeView changeView} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.RowRepeater#constructor sap.ui.commons.RowRepeater}\ncan be used as well.","getExternal":{"!description":"Gets current value of property {@link #getExternal external}.\n\nIndicates if the external representation of the current view is rendered.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDefaultViewIndex":{"!description":"Sets a new value for property {@link #getDefaultViewIndex defaultViewIndex}.\n\nThe index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iDefaultViewIndex: Number) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"iDefaultViewIndex":"type: int, description: New value for property <code>defaultViewIndex<\/code>"},"!static":false},"detachChangeView":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:changeView changeView} event of this <code>sap.suite.ui.commons.ViewRepeater<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control extends the sap.ui.commons.RowRepeater control providing an ability to change data representation by switching between a number of views. The data can be displayed not only in rows but also in tiles that are adjusted to fill the entire horizontal space in a row.","fireChangeView":{"!description":"Fires event {@link #event:changeView changeView} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the control. Only applicable if the responsive property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ViewRepeater","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"getResponsive":{"!description":"Gets current value of property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.ui.commons.RowRepeater","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control extends the sap.ui.commons.RowRepeater control providing an ability to change data representation by switching between a number of views. The data can be displayed not only in rows but also in tiles that are adjusted to fill the entire horizontal space in a row.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ViewRepeater.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.BulletChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChart.<br>Chart that displays an actual value as a horizontal bar in semantic color on the top of the background bar, the numeric value, the scaling factor, along with the thresholds, and a target value as vertical bars.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BulletChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new BulletChart.","!module":"sap/suite/ui/commons/BulletChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.BulletChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.BulletMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChart.<br>Chart that displays an actual value as a horizontal bar in semantic color on the top of the background bar, the numeric value, the scaling factor, along with the thresholds, and a target value as vertical bars."},"sap.suite.ui.commons.NoteTakerCard":{"setAttachmentFilename":{"!description":"Sets a new value for property {@link #getAttachmentFilename attachmentFilename}.\n\nStores the name of the file attached to the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAttachmentFilename: String) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"sAttachmentFilename":"type: string, description: New value for property <code>attachmentFilename<\/code>"},"!static":false},"getViewAllTrigger":{"!description":"Gets current value of property {@link #getViewAllTrigger viewAllTrigger}.\n\nThe View All link appears in the Note Taker card if a body text length exceeds the specified value.\n\nDefault value is <code>1800<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"detachEditNote":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editNote editNote} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachDeleteNote":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:deleteNote deleteNote} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!module":"sap/suite/ui/commons/NoteTakerCard","getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nStores the Note Taker card header.","!type":"fn() -> String","!category":"function","!static":false},"getIsFiltered":{"!description":"Gets current value of property {@link #getIsFiltered isFiltered}.\n\nShows whether the note card is hidden by the applied filter.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getTags":{"!description":"Gets current value of property {@link #getTags tags}.\n\nContains an array of the String type tags applied to the current card.\n\nDefault value is <code>[]<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"setIsFiltered":{"!description":"Sets a new value for property {@link #getIsFiltered isFiltered}.\n\nShows whether the note card is hidden by the applied filter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsFiltered: Boolean) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"bIsFiltered":"type: boolean, description: New value for property <code>isFiltered<\/code>"},"!static":false},"attachEditNote":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editNote editNote} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself.\n\nThe event is fired when a user chooses the Edit button in the note card.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself"},"!static":false},"setViewAllTrigger":{"!description":"Sets a new value for property {@link #getViewAllTrigger viewAllTrigger}.\n\nThe View All link appears in the Note Taker card if a body text length exceeds the specified value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1800<\/code>.","!type":"fn(iViewAllTrigger: Number) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"iViewAllTrigger":"type: int, description: New value for property <code>viewAllTrigger<\/code>"},"!static":false},"getTimestamp":{"!description":"Gets current value of property {@link #getTimestamp timestamp}.\n\nStores a timestamp of the Note Taker card.\n\nDefault value is <code>new Date()<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"getThumbUp":{"!description":"Gets current value of property {@link #getThumbUp thumbUp}.\n\nIndicates positive information for the card.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachDeleteNote":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:deleteNote deleteNote} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself.\n\nThe event is fired when a card needs to be deleted. This event is needed for the Note Taker control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself"},"!static":false},"getAttachmentFilename":{"!description":"Gets current value of property {@link #getAttachmentFilename attachmentFilename}.\n\nStores the name of the file attached to the card.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","fireDeleteNote":{"!description":"Fires event {@link #event:deleteNote deleteNote} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachAttachmentClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireEditNote":{"!description":"Fires event {@link #event:editNote editNote} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setTags":{"!description":"Sets a new value for property {@link #getTags tags}.\n\nContains an array of the String type tags applied to the current card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!type":"fn(oTags: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"oTags":"type: object, description: New value for property <code>tags<\/code>"},"!static":false},"getUid":{"!description":"Gets current value of property {@link #getUid uid}.\n\nThe card ID. This property should be set by an application developer.","!type":"fn() -> String","!category":"function","!static":false},"getAllTags":{"!description":"Gets current value of property {@link #getAllTags allTags}.\n\nContains an array of the String type tags available for selection during the card update.\n\nDefault value is <code>[]<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"setTimestamp":{"!description":"Sets a new value for property {@link #getTimestamp timestamp}.\n\nStores a timestamp of the Note Taker card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>new Date()<\/code>.","!type":"fn(oTimestamp: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"oTimestamp":"type: object, description: New value for property <code>timestamp<\/code>"},"!static":false},"setThumbUp":{"!description":"Sets a new value for property {@link #getThumbUp thumbUp}.\n\nIndicates positive information for the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bThumbUp: Boolean) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"bThumbUp":"type: boolean, description: New value for property <code>thumbUp<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTakerCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getBody":{"!description":"Gets current value of property {@link #getBody body}.\n\nStores the Note Taker card body text.","!type":"fn() -> String","!category":"function","!static":false},"setUid":{"!description":"Sets a new value for property {@link #getUid uid}.\n\nThe card ID. This property should be set by an application developer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUid: String) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"sUid":"type: string, description: New value for property <code>uid<\/code>"},"!static":false},"fireAttachmentClick":{"!description":"Fires event {@link #event:attachmentClick attachmentClick} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!constructorDescription":"Constructor for a new NoteTakerCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getBody body} : string<\/li>\n<li>{@link #getTimestamp timestamp} : object (default: new Date())<\/li>\n<li>{@link #getTags tags} : object (default: [])<\/li>\n<li>{@link #getViewAllTrigger viewAllTrigger} : int (default: 1800)<\/li>\n<li>{@link #getUid uid} : string<\/li>\n<li>{@link #getIsFiltered isFiltered} : boolean (default: false)<\/li>\n<li>{@link #getThumbUp thumbUp} : boolean<\/li>\n<li>{@link #getThumbDown thumbDown} : boolean<\/li>\n<li>{@link #getAllTags allTags} : object (default: [])<\/li>\n<li>{@link #getAttachmentFilename attachmentFilename} : string<\/li>\n<li>{@link #getAttachmentUrl attachmentUrl} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:editNote editNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deleteNote deleteNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nStores the Note Taker card header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeader: String) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"},"!static":false},"attachAttachmentClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself.\n\nThe event is fired when a user chooses the attachment download link.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerCard<\/code> itself"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to store Note Taker card header and body text.","getThumbDown":{"!description":"Gets current value of property {@link #getThumbDown thumbDown}.\n\nIndicates negative information for the card.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAllTags":{"!description":"Sets a new value for property {@link #getAllTags allTags}.\n\nContains an array of the String type tags available for selection during the card update.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!type":"fn(oAllTags: Object) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"oAllTags":"type: object, description: New value for property <code>allTags<\/code>"},"!static":false},"setThumbDown":{"!description":"Sets a new value for property {@link #getThumbDown thumbDown}.\n\nIndicates negative information for the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bThumbDown: Boolean) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"bThumbDown":"type: boolean, description: New value for property <code>thumbDown<\/code>"},"!static":false},"setAttachmentUrl":{"!description":"Sets a new value for property {@link #getAttachmentUrl attachmentUrl}.\n\nStores the address of the file attached to the card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAttachmentUrl: String) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"sAttachmentUrl":"type: string, description: New value for property <code>attachmentUrl<\/code>"},"!static":false},"getAttachmentUrl":{"!description":"Gets current value of property {@link #getAttachmentUrl attachmentUrl}.\n\nStores the address of the file attached to the card.","!type":"fn() -> String","!category":"function","!static":false},"setBody":{"!description":"Sets a new value for property {@link #getBody body}.\n\nStores the Note Taker card body text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBody: String) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"sBody":"type: string, description: New value for property <code>body<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to store Note Taker card header and body text.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.NoteTakerCard.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TimelineNavigator":{"!description":"TimelineNavigator An extension of ItemNavigator for Timeline.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineNavigator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.delegate.ItemNavigation.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates an instance of TimelineNavigator.","!module":"sap/suite/ui/commons/TimelineNavigator","updateReferences":{"!description":"Update references to navigation objects.","!type":"fn(oDomRef: Element, aItemDomRefs: [Element], aRows: [Element])","!category":"function","parameters":{"aRows":"type: Element[], description: 2D array of navigation items to navigate in. If not defined navigation will fallback to aItemDomRefs.","aItemDomRefs":"type: Element[], description: Array of DOM references representing the items for the navigation","oDomRef":"type: Element, description: The root DOM reference that includes all items"},"!static":false},"setItemDomRefs":{"!description":"Sets the item DOM references as an array for the items","!type":"fn(aItemDomRefs: [Element]) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"aItemDomRefs":"type: Element[], description: Array of DOM references representing the items"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TimelineNavigator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.delegate.ItemNavigation","!helpDescription":"TimelineNavigator An extension of ItemNavigator for Timeline."},"sap.suite.ui.commons.TargetFilterMeasureColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilterMeasureColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TargetFilterMeasureColumn"},"sap.suite.ui.commons.networkgraph.Line":{"getFromNode":{"!description":"Returns the node instance where the line starts. This method doesn't call invalidate on the object.","!type":"fn() -> Object","!category":"function","!static":false},"addBend":{"!description":"Adds coordinates for points that should define the shape of the line between its start and end points. This method doesn't call invalidate on the object.","!type":"fn(oPoint: Coordinate) -> Coordinate","!category":"function","parameters":{"oPoint":"type: Coordinate, description: oPoint.x mArguments.y X and Y coordinates"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getTarget":{"!description":"Returns the coordinates of the line's end point. This method doesn't call invalidate on the object.","!type":"fn() -> Coordinate","!category":"function","!static":false},"getTo":{"!description":"Gets current value of property {@link #getTo to}.\n\nKey of the node the line leads to.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/Line","removeAllCoordinates":{"!description":"Removes all the controls from the aggregation {@link #getCoordinates coordinates}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Coordinate]","!category":"function","!static":false},"setArrowPosition":{"!description":"Sets a new value for property {@link #getArrowPosition arrowPosition}.\n\nPosition of the arrow on the line. Can be set to End, Middle, or Start.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>End<\/code>.","!type":"fn(sArrowPosition: sap.suite.ui.commons.networkgraph.LineArrowPosition) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"sArrowPosition":"type: sap.suite.ui.commons.networkgraph.LineArrowPosition, description: New value for property <code>arrowPosition<\/code>"},"!static":false},"setTo":{"!description":"Sets a new value for property {@link #getTo to}.\n\nKey of the node the line leads to.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTo: String) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"sTo":"type: string, description: New value for property <code>to<\/code>"},"!static":false},"setTarget":{"!description":"Sets the end point, or the target, for the line. This method doesn't call invalidate on the object.","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: object, description: mArguments.x mArguments.y X and Y coordinates of the end point"},"!static":false},"destroyActionButtons":{"!description":"Destroys all the actionButtons in the aggregation {@link #getActionButtons actionButtons}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Line","!category":"function","!static":false},"removeActionButton":{"!description":"Removes a actionButton from the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(vActionButton: Number | String | sap.suite.ui.commons.networkgraph.ActionButton) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"vActionButton":"type: int|string|sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to remove or its index or id"},"!static":false},"setHidden":{"!description":"Hides the line.","!type":"fn()","!category":"function","!static":false},"getFrom":{"!description":"Gets current value of property {@link #getFrom from}.\n\nKey of the node where the line begins.","!type":"fn() -> String","!category":"function","!static":false},"getToNode":{"!description":"Returns the node instance where the line leads to. This method doesn't call invalidate on the object.","!type":"fn() -> Object","!category":"function","!static":false},"removeCoordinate":{"!description":"Removes a coordinate from the aggregation {@link #getCoordinates coordinates}.","!type":"fn(vCoordinate: Number | String | sap.suite.ui.commons.networkgraph.Coordinate) -> sap.suite.ui.commons.networkgraph.Coordinate","!category":"function","parameters":{"vCoordinate":"type: int|string|sap.suite.ui.commons.networkgraph.Coordinate, description: The coordinate to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new Line.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getFrom from} : string<\/li>\n<li>{@link #getTo to} : string<\/li>\n<li>{@link #getLineType lineType} : sap.suite.ui.commons.networkgraph.LineType (default: Solid)<\/li>\n<li>{@link #getArrowPosition arrowPosition} : sap.suite.ui.commons.networkgraph.LineArrowPosition (default: End)<\/li>\n<li>{@link #getArrowOrientation arrowOrientation} : sap.suite.ui.commons.networkgraph.LineArrowOrientation (default: ParentOf)<\/li>\n<li>{@link #getStretchToCenter stretchToCenter} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCoordinates coordinates} : sap.suite.ui.commons.networkgraph.Coordinate[]<\/li>\n<li>{@link #getActionButtons actionButtons} : sap.suite.ui.commons.networkgraph.ActionButton[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:hover hover} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.ElementBase#constructor sap.suite.ui.commons.networkgraph.ElementBase}\ncan be used as well.","getLineType":{"!description":"Gets current value of property {@link #getLineType lineType}.\n\nDefines the appearance of the line. Can be set to solid, dashed, or dotted.\n\nDefault value is <code>Solid<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.LineType","!category":"function","!static":false},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nShows if the line is selected. Once the line is selected, its appearance changes slightly to distinguish it from other lines.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Line<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setLineType":{"!description":"Sets a new value for property {@link #getLineType lineType}.\n\nDefines the appearance of the line. Can be set to solid, dashed, or dotted.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Solid<\/code>.","!type":"fn(sLineType: sap.suite.ui.commons.networkgraph.LineType) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"sLineType":"type: sap.suite.ui.commons.networkgraph.LineType, description: New value for property <code>lineType<\/code>"},"!static":false},"!helpDescription":"Holds information about one connector line.","!proto":"sap.suite.ui.commons.networkgraph.ElementBase","getCoordinates":{"!description":"Gets content of aggregation {@link #getCoordinates coordinates}.\n\nA list of points the line goes through. After the layouting algorithm has finished arranging the graph, this aggregation contains the coordinates of at least two points: the starting point and the end point of the line. The rest of the points making up the line are treated as break points.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Coordinate]","!category":"function","!static":false},"attachHover":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Line<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Line<\/code> itself.\n\nThis event is fired when the user moves the mouse pointer over the line.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Line<\/code> itself"},"!static":false},"detachHover":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Line<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertActionButton":{"!description":"Inserts a actionButton into the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionButton should be inserted at; for a negative value of <code>iIndex<\/code>, the actionButton is inserted at position 0; for a value greater than the current size of the aggregation, the actionButton is inserted at the last position"},"!static":false},"getSource":{"!description":"Returns the coordinates of the line's starting point. This method doesn't call invalidate on the object.","!type":"fn() -> Coordinate","!category":"function","!static":false},"clearBends":{"!description":"Removes all points that define the shape of the line between its start and end points. This method doesn't call invalidate on the object.","!type":"fn()","!category":"function","!static":false},"destroyCoordinates":{"!description":"Destroys all the coordinates in the aggregation {@link #getCoordinates coordinates}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Line","!category":"function","!static":false},"fireHover":{"!description":"Fires event {@link #event:hover hover} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setSource":{"!description":"Sets the starting point, or the source, for the line. This method doesn't call invalidate on the object.","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: object, description: mArguments.x mArguments.y X and Y coordinates of the starting point"},"!static":false},"setArrowOrientation":{"!description":"Sets a new value for property {@link #getArrowOrientation arrowOrientation}.\n\nOrientation of the line that defines the direction of the arrow.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>ParentOf<\/code>.","!type":"fn(sArrowOrientation: sap.suite.ui.commons.networkgraph.LineArrowOrientation) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"sArrowOrientation":"type: sap.suite.ui.commons.networkgraph.LineArrowOrientation, description: New value for property <code>arrowOrientation<\/code>"},"!static":false},"getArrowOrientation":{"!description":"Gets current value of property {@link #getArrowOrientation arrowOrientation}.\n\nOrientation of the line that defines the direction of the arrow.\n\nDefault value is <code>ParentOf<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.LineArrowOrientation","!category":"function","!static":false},"getActionButtons":{"!description":"Gets content of aggregation {@link #getActionButtons actionButtons}.\n\nA list of custom action buttons.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ActionButton]","!category":"function","!static":false},"!category":"class","insertCoordinate":{"!description":"Inserts a coordinate into the aggregation {@link #getCoordinates coordinates}.","!type":"fn(oCoordinate: sap.suite.ui.commons.networkgraph.Coordinate, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"oCoordinate":"type: sap.suite.ui.commons.networkgraph.Coordinate, description: The coordinate to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the coordinate should be inserted at; for a negative value of <code>iIndex<\/code>, the coordinate is inserted at position 0; for a value greater than the current size of the aggregation, the coordinate is inserted at the last position"},"!static":false},"removeAllActionButtons":{"!description":"Removes all the controls from the aggregation {@link #getActionButtons actionButtons}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ActionButton]","!category":"function","!static":false},"getArrowPosition":{"!description":"Gets current value of property {@link #getArrowPosition arrowPosition}.\n\nPosition of the arrow on the line. Can be set to End, Middle, or Start.\n\nDefault value is <code>End<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.LineArrowPosition","!category":"function","!static":false},"addActionButton":{"!description":"Adds some actionButton to the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to add; if empty, nothing is inserted"},"!static":false},"setStretchToCenter":{"!description":"Sets a new value for property {@link #getStretchToCenter stretchToCenter}.\n\nExtends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bStretchToCenter: Boolean) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"bStretchToCenter":"type: boolean, description: New value for property <code>stretchToCenter<\/code>"},"!static":false},"indexOfActionButton":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code> in the aggregation {@link #getActionButtons actionButtons}. and returns its index if found or -1 otherwise.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton) -> Number","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton whose index is looked for"},"!static":false},"getStretchToCenter":{"!description":"Gets current value of property {@link #getStretchToCenter stretchToCenter}.\n\nExtends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Line with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setFrom":{"!description":"Sets a new value for property {@link #getFrom from}.\n\nKey of the node where the line begins.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFrom: String) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"sFrom":"type: string, description: New value for property <code>from<\/code>"},"!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Line<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Line<\/code> itself.\n\nThis event is fired when the user clicks or taps the line.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Line<\/code> itself"},"!static":false},"getBends":{"!description":"Returns the coordinates of all points that define the shape of the line between its start and end points. This method doesn't call invalidate on the object.","!type":"fn() -> Array","!category":"function","!static":false},"!description":"Holds information about one connector line.","indexOfCoordinate":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.Coordinate<\/code> in the aggregation {@link #getCoordinates coordinates}. and returns its index if found or -1 otherwise.","!type":"fn(oCoordinate: sap.suite.ui.commons.networkgraph.Coordinate) -> Number","!category":"function","parameters":{"oCoordinate":"type: sap.suite.ui.commons.networkgraph.Coordinate, description: The coordinate whose index is looked for"},"!static":false},"addCoordinate":{"!description":"Adds some coordinate to the aggregation {@link #getCoordinates coordinates}.","!type":"fn(oCoordinate: sap.suite.ui.commons.networkgraph.Coordinate) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"oCoordinate":"type: sap.suite.ui.commons.networkgraph.Coordinate, description: The coordinate to add; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Line.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nShows if the line is selected. Once the line is selected, its appearance changes slightly to distinguish it from other lines.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"},"!static":false}},"sap.suite.ui.commons.NoteTakerFeeder_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTakerFeeder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.NoteTakerFeeder"},"sap.suite.ui.commons.networkgraph.Orientation":{"!description":"Orientation of layered layout.","RightLeft":{"!description":"The flow of the graph is right to left.","!type":"String","!category":"enum"},"!category":"static class","BottomTop":{"!description":"The flow of the graph is bottom to top.","!type":"String","!category":"enum"},"TopBottom":{"!description":"The flow of the graph is top to bottom.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","LeftRight":{"!description":"The flow of the graph is left to right.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.CalculationBuilderVariable_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderVariable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.CalculationBuilderVariable"},"sap.suite.ui.commons.ImageEditorContainerMode":{"Filter":{"!description":"Mode with filter options, including grayscale, sepia, brightness, contrast, saturation, and some other.","!type":"String","!category":"enum"},"Crop":{"!description":"Mode with rectangular and circular/oval crop options.","!type":"String","!category":"enum"},"Transform":{"!description":"Mode with resize, rotate, and flip options.","!type":"String","!category":"enum"},"!description":"Mode types for {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}.","!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.FeedTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.FeedTile"},"sap.suite.ui.commons.ImageEditorMode":{"Default":{"!description":"Image editor mode that shows just the source image. <br>This mode is used by default.","!type":"String","!category":"enum"},"!description":"Mode types for {@link sap.suite.ui.commons.imageeditor.ImageEditor}.","CropEllipse":{"!description":"Image editor mode with ellipse crop area.","!type":"String","!category":"enum"},"CropRectangle":{"!description":"Image editor mode with rectangle crop area.","!type":"String","!category":"enum"},"!category":"static class","Resize":{"!description":"Image editor mode with resize handlers.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.SelectionState":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 This Enumeration is deprecated as it is not used anywhere.<br>SelectionState","Semantic":{"!description":"Semantic","!type":"String","!category":"enum"},"!category":"static class","Selected":{"!description":"Selected","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","NotSelected":{"!description":"Not Selected","!type":"String","!category":"enum"}},"sap.suite.ui.commons.ViewRepeater_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ViewRepeater with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.RowRepeater.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ViewRepeater"},"sap.suite.ui.commons.NewsContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NewsContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NewsContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.NewsContent"},"sap.suite.ui.commons.TileContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TileContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TileContent"},"sap.suite.ui.commons.DeviationIndicator":{"Down":{"!description":"The actual value is less than the target value.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to sapui5.runtime.<br>The marker for the deviation trend.","Up":{"!description":"The actual value is more than the target value.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No value.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.LineArrowOrientation":{"Both":{"!description":"The arrows on the line point both ways.","!type":"String","!category":"enum"},"!description":"Direction of the arrow on the connector line.","ParentOf":{"!description":"The arrow points from parent to child.","!type":"String","!category":"enum"},"ChildOf":{"!description":"The arrow points from child to parent.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"The arrow is hidden.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.GraphMap":{"setGraph":{"!description":"Sets the associated {@link #getGraph graph}.","!type":"fn(oGraph: sap.ui.core.ID | sap.suite.ui.commons.networkgraph.Graph) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"oGraph":"type: sap.ui.core.ID|sap.suite.ui.commons.networkgraph.Graph, description: ID of an element which becomes the new target of this graph association; alternatively, an element instance may be given"},"!static":false},"attachMapReady":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:mapReady mapReady} event of this <code>sap.suite.ui.commons.networkgraph.GraphMap<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.GraphMap<\/code> itself.\n\nThis event is fired when the map is fully rendered.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.GraphMap<\/code> itself"},"!static":false},"getGraph":{"!description":"ID of the element which is the current target of the association {@link #getGraph graph}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.GraphMap with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireMapReady":{"!description":"Fires event {@link #event:mapReady mapReady} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachMapReady":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:mapReady mapReady} event of this <code>sap.suite.ui.commons.networkgraph.GraphMap<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!constructorDescription":"Constructor for a new GraphMap.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDirectRenderNodeLimit directRenderNodeLimit} : int (default: 250)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getGraph graph} : (sap.ui.core.ID | sap.suite.ui.commons.networkgraph.Graph)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:mapReady mapReady} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/GraphMap","getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the graph map.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"A component which displays an overview of the entire graph and allows users to quickly navigate in the linked graph.","setDirectRenderNodeLimit":{"!description":"Sets a new value for property {@link #getDirectRenderNodeLimit directRenderNodeLimit}.\n\nThis property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>250<\/code>.","!type":"fn(iDirectRenderNodeLimit: Number) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"iDirectRenderNodeLimit":"type: int, description: New value for property <code>directRenderNodeLimit<\/code>"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nGraph overview title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the graph map.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the graph map.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nGraph overview title\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getDirectRenderNodeLimit":{"!description":"Gets current value of property {@link #getDirectRenderNodeLimit directRenderNodeLimit}.\n\nThis property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered.\n\nDefault value is <code>250<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the graph map.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.networkgraph.GraphMap","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.GraphMap.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A component which displays an overview of the entire graph and allows users to quickly navigate in the linked graph.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.statusindicator.Shape":{"setAnimationOnChange":{"!description":"Sets a new value for property {@link #getAnimationOnChange animationOnChange}.\n\nDefines if the change in the status indicator value should be animated or not.<br> When set to <code>true<\/code>, the change in value is animated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAnimationOnChange: Boolean) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"bAnimationOnChange":"type: boolean, description: New value for property <code>animationOnChange<\/code>"},"!static":false},"setFullAnimationDuration":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 All animations are now limited to 250 ms.<br>Sets a new value for property {@link #getFullAnimationDuration fullAnimationDuration}.\n\nSpecifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration<\/code> property. If this property is set to <code>0<\/code>, changes are applied instantly without any animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iFullAnimationDuration: Number) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"iFullAnimationDuration":"type: int, description: New value for property <code>fullAnimationDuration<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/statusindicator/Shape","getFillingAngle":{"!description":"Gets current value of property {@link #getFillingAngle fillingAngle}.\n\nDefines the angle at which the shape is filled. This property overrides the <code>fillingDirection<\/code> property.<br> Accepted values include <code>0<\/code> through <code>360<\/code> degrees.<br> For example, if you set the filling angle to <code>45<\/code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear<\/code>.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getAnimationOnStartupDelay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined true<br>Gets current value of property {@link #getAnimationOnStartupDelay animationOnStartupDelay}.\n\nSpecifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup<\/code> property is set to <code>true<\/code>.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setFillingAngle":{"!description":"Sets a new value for property {@link #getFillingAngle fillingAngle}.\n\nDefines the angle at which the shape is filled. This property overrides the <code>fillingDirection<\/code> property.<br> Accepted values include <code>0<\/code> through <code>360<\/code> degrees.<br> For example, if you set the filling angle to <code>45<\/code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(iFillingAngle: Number) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"iFillingAngle":"type: int, description: New value for property <code>fillingAngle<\/code>"},"!static":false},"!category":"class","setFillingDirection":{"!description":"Sets a new value for property {@link #getFillingDirection fillingDirection}.\n\nDefines the direction in which the shape is filled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Up<\/code>.","!type":"fn(sFillingDirection: sap.suite.ui.commons.statusindicator.FillingDirectionType) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"sFillingDirection":"type: sap.suite.ui.commons.statusindicator.FillingDirectionType, description: New value for property <code>fillingDirection<\/code>"},"!static":false},"setAnimationOnStartupDelay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined true<br>Sets a new value for property {@link #getAnimationOnStartupDelay animationOnStartupDelay}.\n\nSpecifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iAnimationOnStartupDelay: Number) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"iAnimationOnStartupDelay":"type: int, description: New value for property <code>animationOnStartupDelay<\/code>"},"!static":false},"setFillColor":{"!description":"Sets a new value for property {@link #getFillColor fillColor}.\n\nDefines the color of the shape's fill.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sFillColor: sap.m.ValueCSSColor) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"sFillColor":"type: sap.m.ValueCSSColor, description: New value for property <code>fillColor<\/code>"},"!static":false},"getAnimationOnStartup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 Use the animationOnChange property instead.<br>Gets current value of property {@link #getAnimationOnStartup animationOnStartup}.\n\nDefines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAnimationOnStartup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 Use the animationOnChange property instead.<br>Sets a new value for property {@link #getAnimationOnStartup animationOnStartup}.\n\nDefines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAnimationOnStartup: Boolean) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"bAnimationOnStartup":"type: boolean, description: New value for property <code>animationOnStartup<\/code>"},"!static":false},"getVerticalAlignment":{"!description":"Gets current value of property {@link #getVerticalAlignment verticalAlignment}.\n\nDefines the vertical alignment of the shape within its parent container.\n\nDefault value is <code>Middle<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.VerticalAlignmentType","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Shape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVerticalAlignment":{"!description":"Sets a new value for property {@link #getVerticalAlignment verticalAlignment}.\n\nDefines the vertical alignment of the shape within its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Middle<\/code>.","!type":"fn(sVerticalAlignment: sap.suite.ui.commons.statusindicator.VerticalAlignmentType) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"sVerticalAlignment":"type: sap.suite.ui.commons.statusindicator.VerticalAlignmentType, description: New value for property <code>verticalAlignment<\/code>"},"!static":false},"getHorizontalAlignment":{"!description":"Gets current value of property {@link #getHorizontalAlignment horizontalAlignment}.\n\nDefines the horizontal alignment of the shape within its parent container.\n\nDefault value is <code>Middle<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.HorizontalAlignmentType","!category":"function","!static":false},"setFillingType":{"!description":"Sets a new value for property {@link #getFillingType fillingType}.\n\nDefines the type of the shape's fill.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Linear<\/code>.","!type":"fn(sFillingType: sap.suite.ui.commons.statusindicator.FillingType) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"sFillingType":"type: sap.suite.ui.commons.statusindicator.FillingType, description: New value for property <code>fillingType<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new Shape.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFullAnimationDuration fullAnimationDuration} : int (default: 0)<\/li>\n<li>{@link #getFillColor fillColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getAnimationOnStartup animationOnStartup} : boolean (default: false)<\/li>\n<li>{@link #getAnimationOnChange animationOnChange} : boolean (default: true)<\/li>\n<li>{@link #getAnimationOnStartupDelay animationOnStartupDelay} : int (default: 0)<\/li>\n<li>{@link #getFillingDirection fillingDirection} : sap.suite.ui.commons.statusindicator.FillingDirectionType (default: Up)<\/li>\n<li>{@link #getFillingType fillingType} : sap.suite.ui.commons.statusindicator.FillingType (default: Linear)<\/li>\n<li>{@link #getFillingAngle fillingAngle} : int (default: undefined)<\/li>\n<li>{@link #getVerticalAlignment verticalAlignment} : sap.suite.ui.commons.statusindicator.VerticalAlignmentType (default: Middle)<\/li>\n<li>{@link #getHorizontalAlignment horizontalAlignment} : sap.suite.ui.commons.statusindicator.HorizontalAlignmentType (default: Middle)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setHorizontalAlignment":{"!description":"Sets a new value for property {@link #getHorizontalAlignment horizontalAlignment}.\n\nDefines the horizontal alignment of the shape within its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Middle<\/code>.","!type":"fn(sHorizontalAlignment: sap.suite.ui.commons.statusindicator.HorizontalAlignmentType) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"sHorizontalAlignment":"type: sap.suite.ui.commons.statusindicator.HorizontalAlignmentType, description: New value for property <code>horizontalAlignment<\/code>"},"!static":false},"getAnimationOnChange":{"!description":"Gets current value of property {@link #getAnimationOnChange animationOnChange}.\n\nDefines if the change in the status indicator value should be animated or not.<br> When set to <code>true<\/code>, the change in value is animated.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getFillingDirection":{"!description":"Gets current value of property {@link #getFillingDirection fillingDirection}.\n\nDefines the direction in which the shape is filled.\n\nDefault value is <code>Up<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.FillingDirectionType","!category":"function","!static":false},"!description":"Abstract shape that displays the value of the status indicator. The shape reflects the status indicator's percentage value by filling one or more of its parts (SVG shapes) with the specified color.","getFillingType":{"!description":"Gets current value of property {@link #getFillingType fillingType}.\n\nDefines the type of the shape's fill.\n\nDefault value is <code>Linear<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.FillingType","!category":"function","!static":false},"getFillColor":{"!description":"Gets current value of property {@link #getFillColor fillColor}.\n\nDefines the color of the shape's fill.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.m.ValueCSSColor","!category":"function","!static":false},"getFullAnimationDuration":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 All animations are now limited to 250 ms.<br>Gets current value of property {@link #getFullAnimationDuration fullAnimationDuration}.\n\nSpecifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration<\/code> property. If this property is set to <code>0<\/code>, changes are applied instantly without any animation.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getDisplayedValue":{"!description":"Returns the currently displayed value This method must be overridden by a child class","!type":"fn()","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Abstract shape that displays the value of the status indicator. The shape reflects the status indicator's percentage value by filling one or more of its parts (SVG shapes) with the specified color.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.Shape.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.NumericTile":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe actual value.","!type":"fn() -> String","!category":"function","!static":false},"setValueColor":{"!description":"Sets a new value for property {@link #getValueColor valueColor}.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValueColor: sap.suite.ui.commons.InfoTileValueColor) -> sap.suite.ui.commons.NumericTile","!category":"function","parameters":{"sValueColor":"type: sap.suite.ui.commons.InfoTileValueColor, description: New value for property <code>valueColor<\/code>"},"!static":false},"getIndicator":{"!description":"Gets current value of property {@link #getIndicator indicator}.\n\nThe indicator arrow that shows value deviation.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.suite.ui.commons.DeviationIndicator","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NumericTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setScale":{"!description":"Sets a new value for property {@link #getScale scale}.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sScale: String) -> sap.suite.ui.commons.NumericTile","!category":"function","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"},"!static":false},"getUnit":{"!description":"Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.","!type":"fn() -> String","!category":"function","!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.NumericTile","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new NumericTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.suite.ui.commons.InfoTileValueColor<\/li>\n<li>{@link #getIndicator indicator} : sap.suite.ui.commons.DeviationIndicator (default: None)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well.","!module":"sap/suite/ui/commons/NumericTile","getValueColor":{"!description":"Gets current value of property {@link #getValueColor valueColor}.\n\nThe semantic color of the value.","!type":"fn() -> sap.suite.ui.commons.InfoTileValueColor","!category":"function","!static":false},"setUnit":{"!description":"Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUnit: String) -> sap.suite.ui.commons.NumericTile","!category":"function","parameters":{"sUnit":"type: string, description: New value for property <code>unit<\/code>"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a numeric value.","getScale":{"!description":"Gets current value of property {@link #getScale scale}.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.","!type":"fn() -> String","!category":"function","!static":false},"setIndicator":{"!description":"Sets a new value for property {@link #getIndicator indicator}.\n\nThe indicator arrow that shows value deviation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sIndicator: sap.suite.ui.commons.DeviationIndicator) -> sap.suite.ui.commons.NumericTile","!category":"function","parameters":{"sIndicator":"type: sap.suite.ui.commons.DeviationIndicator, description: New value for property <code>indicator<\/code>"},"!static":false},"!category":"class","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a numeric value.","!proto":"sap.suite.ui.commons.InfoTile","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.NumericTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.HarveyBallMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.HarveyBallMicroChart"},"sap.suite.ui.commons.taccount.TAccountPanelState":{"Default":{"!description":"The T account panel displays T accounts as T shapes with debit and credit entries on either side of the T.","!type":"String","!category":"enum"},"!description":"The state of the {@link sap.suite.ui.commons.taccount.TAccountPanel} that defines how T accounts included in the panel are displayed.","!category":"static class","Table":{"!description":"The T account panel displays T accounts as an aggregated table, with each debit and credit entry listed on a separate row.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.JamContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.JamContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FeedContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.JamContent"},"sap.suite.ui.commons.UnifiedThingInspector":{"removeAllPages":{"!description":"Removes all the controls from the aggregation {@link #getPages pages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"addFacetContent":{"!description":"Adds some facetContent to the aggregation {@link #getFacetContent facetContent}.","!type":"fn(oFacetContent: sap.ui.core.Control) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oFacetContent":"type: sap.ui.core.Control, description: The facetContent to add; if empty, nothing is inserted"},"!static":false},"detachAfterNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterNavigate afterNavigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertFacet":{"!description":"Inserts a facet into the aggregation {@link #getFacets facets}.","!type":"fn(oFacet: sap.suite.ui.commons.FacetOverview, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the facet should be inserted at; for a negative value of <code>iIndex<\/code>, the facet is inserted at position 0; for a value greater than the current size of the aggregation, the facet is inserted at the last position","oFacet":"type: sap.suite.ui.commons.FacetOverview, description: The facet to insert; if empty, nothing is inserted"},"!static":false},"addKpi":{"!description":"Adds some kpi to the aggregation {@link #getKpis kpis}.","!type":"fn(oKpi: sap.suite.ui.commons.KpiTile) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oKpi":"type: sap.suite.ui.commons.KpiTile, description: The kpi to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/suite/ui/commons/UnifiedThingInspector","destroyTransactions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Destroys all the transactions in the aggregation {@link #getTransactions transactions}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"removeAllKpis":{"!description":"Removes all the controls from the aggregation {@link #getKpis kpis}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.KpiTile]","!category":"function","!static":false},"detachTransactionsButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:transactionsButtonPress transactionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getFacets":{"!description":"Gets content of aggregation {@link #getFacets facets}.\n\nThe list of the sap.suite.ui.commons.FacetOverview objects.","!type":"fn() -> [sap.suite.ui.commons.FacetOverview]","!category":"function","!static":false},"removeFacetContent":{"!description":"Removes a facetContent from the aggregation {@link #getFacetContent facetContent}.","!type":"fn(vFacetContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vFacetContent":"type: int|string|sap.ui.core.Control, description: The facetContent to remove or its index or id"},"!static":false},"removeAllFacets":{"!description":"Removes all the controls from the aggregation {@link #getFacets facets}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.FacetOverview]","!category":"function","!static":false},"insertFacetContent":{"!description":"Inserts a facetContent into the aggregation {@link #getFacetContent facetContent}.","!type":"fn(oFacetContent: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the facetContent should be inserted at; for a negative value of <code>iIndex<\/code>, the facetContent is inserted at position 0; for a value greater than the current size of the aggregation, the facetContent is inserted at the last position","oFacetContent":"type: sap.ui.core.Control, description: The facetContent to insert; if empty, nothing is inserted"},"!static":false},"setDestroyPageOnBack":{"!description":"Sets a new value for property {@link #getDestroyPageOnBack destroyPageOnBack}.\n\nIf set to true, destroys a page when the user chooses the Back button to leave this page.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDestroyPageOnBack: Boolean) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"bDestroyPageOnBack":"type: boolean, description: New value for property <code>destroyPageOnBack<\/code>"},"!static":false},"indexOfTransaction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTransactions transactions}. and returns its index if found or -1 otherwise.","!type":"fn(oTransaction: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oTransaction":"type: sap.ui.core.Control, description: The transaction whose index is looked for"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the thing.","!type":"fn() -> String","!category":"function","!static":false},"fireAfterNavigate":{"!description":"Fires event {@link #event:afterNavigate afterNavigate} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getConfigurationVisible":{"!description":"Gets current value of property {@link #getConfigurationVisible configurationVisible}.\n\nIf set to true, the Configuration button appears.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachConfigurationButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:configurationButtonPress configurationButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getActions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Gets content of aggregation {@link #getActions actions}.\n\nAction sheet controls.","!type":"fn() -> [sap.m.Button]","!category":"function","!static":false},"getFacetContent":{"!description":"Gets content of aggregation {@link #getFacetContent facetContent}.\n\nThe content that appears on the detail page of the UnifiedThingInspector.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new UnifiedThingInspector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTransactionsVisible transactionsVisible} : boolean (default: false)<\/li>\n<li>{@link #getActionsVisible actionsVisible} : boolean (default: false)<\/li>\n<li>{@link #getDestroyPageOnBack destroyPageOnBack} : boolean (default: true)<\/li>\n<li>{@link #getConfigurationVisible configurationVisible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFacets facets} : sap.suite.ui.commons.FacetOverview[]<\/li>\n<li>{@link #getFacetContent facetContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getKpis kpis} : sap.suite.ui.commons.KpiTile[]<\/li>\n<li>{@link #getTransactions transactions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActions actions} : sap.m.Button[]<\/li>\n<li>{@link #getPages pages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:backAction backAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:transactionsButtonPress transactionsButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:actionsButtonPress actionsButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:configurationButtonPress configurationButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Inserts a action into the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.m.Button, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oAction":"type: sap.m.Button, description: The action to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position"},"!static":false},"getTransactionsVisible":{"!description":"Gets current value of property {@link #getTransactionsVisible transactionsVisible}.\n\nIf set to true, the Transaction button appears.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"insertKpi":{"!description":"Inserts a kpi into the aggregation {@link #getKpis kpis}.","!type":"fn(oKpi: sap.suite.ui.commons.KpiTile, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oKpi":"type: sap.suite.ui.commons.KpiTile, description: The kpi to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the kpi should be inserted at; for a negative value of <code>iIndex<\/code>, the kpi is inserted at position 0; for a value greater than the current size of the aggregation, the kpi is inserted at the last position"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the thing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"removeTransaction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Removes a transaction from the aggregation {@link #getTransactions transactions}.","!type":"fn(vTransaction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vTransaction":"type: int|string|sap.ui.core.Control, description: The transaction to remove or its index or id"},"!static":false},"destroyActions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Destroys all the actions in the aggregation {@link #getActions actions}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"setActionsVisible":{"!description":"Sets a new value for property {@link #getActionsVisible actionsVisible}.\n\nIf set to true, the Actions button appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bActionsVisible: Boolean) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"bActionsVisible":"type: boolean, description: New value for property <code>actionsVisible<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"indexOfFacet":{"!description":"Checks for the provided <code>sap.suite.ui.commons.FacetOverview<\/code> in the aggregation {@link #getFacets facets}. and returns its index if found or -1 otherwise.","!type":"fn(oFacet: sap.suite.ui.commons.FacetOverview) -> Number","!category":"function","parameters":{"oFacet":"type: sap.suite.ui.commons.FacetOverview, description: The facet whose index is looked for"},"!static":false},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe name of the thing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThe icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"setTransactionsVisible":{"!description":"Sets a new value for property {@link #getTransactionsVisible transactionsVisible}.\n\nIf set to true, the Transaction button appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bTransactionsVisible: Boolean) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"bTransactionsVisible":"type: boolean, description: New value for property <code>transactionsVisible<\/code>"},"!static":false},"destroyPages":{"!description":"Destroys all the pages in the aggregation {@link #getPages pages}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"removePage":{"!description":"Removes a page from the aggregation {@link #getPages pages}.","!type":"fn(vPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vPage":"type: int|string|sap.ui.core.Control, description: The page to remove or its index or id"},"!static":false},"getActionsVisible":{"!description":"Gets current value of property {@link #getActionsVisible actionsVisible}.\n\nIf set to true, the Actions button appears.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllTransactions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Removes all the controls from the aggregation {@link #getTransactions transactions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control provides an ability to display a thing (for example, object factsheet) on the desktop, tablet, and phone devices in a Fiori style.","!proto":"sap.ui.core.Control","fireConfigurationButtonPress":{"!description":"Fires event {@link #event:configurationButtonPress configurationButtonPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"indexOfPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getPages pages}. and returns its index if found or -1 otherwise.","!type":"fn(oPage: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oPage":"type: sap.ui.core.Control, description: The page whose index is looked for"},"!static":false},"removeAllFacetContent":{"!description":"Removes all the controls from the aggregation {@link #getFacetContent facetContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"fireActionsButtonPress":{"!description":"Fires event {@link #event:actionsButtonPress actionsButtonPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getPages":{"!description":"Gets content of aggregation {@link #getPages pages}.\n\nContains pages except for Master and Detail.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"insertPage":{"!description":"Inserts a page into the aggregation {@link #getPages pages}.","!type":"fn(oPage: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oPage":"type: sap.ui.core.Control, description: The page to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the page should be inserted at; for a negative value of <code>iIndex<\/code>, the page is inserted at position 0; for a value greater than the current size of the aggregation, the page is inserted at the last position"},"!static":false},"insertTransaction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Inserts a transaction into the aggregation {@link #getTransactions transactions}.","!type":"fn(oTransaction: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oTransaction":"type: sap.ui.core.Control, description: The transaction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the transaction should be inserted at; for a negative value of <code>iIndex<\/code>, the transaction is inserted at position 0; for a value greater than the current size of the aggregation, the transaction is inserted at the last position"},"!static":false},"detachActionsButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:actionsButtonPress actionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"destroyFacets":{"!description":"Destroys all the facets in the aggregation {@link #getFacets facets}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"fireTransactionsButtonPress":{"!description":"Fires event {@link #event:transactionsButtonPress transactionsButtonPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThe icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"detachBackAction":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:backAction backAction} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getKpis":{"!description":"Gets content of aggregation {@link #getKpis kpis}.\n\nA set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container.","!type":"fn() -> [sap.suite.ui.commons.KpiTile]","!category":"function","!static":false},"removeAllActions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.m.Button]","!category":"function","!static":false},"setConfigurationVisible":{"!description":"Sets a new value for property {@link #getConfigurationVisible configurationVisible}.\n\nIf set to true, the Configuration button appears.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bConfigurationVisible: Boolean) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"bConfigurationVisible":"type: boolean, description: New value for property <code>configurationVisible<\/code>"},"!static":false},"destroyKpis":{"!description":"Destroys all the kpis in the aggregation {@link #getKpis kpis}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"!category":"class","getTransactions":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Gets content of aggregation {@link #getTransactions transactions}.\n\nMenu items for transaction popup.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"attachTransactionsButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:transactionsButtonPress transactionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when the user chooses the Transactions button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"indexOfAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.m.Button) -> Number","!category":"function","parameters":{"oAction":"type: sap.m.Button, description: The action whose index is looked for"},"!static":false},"addFacet":{"!description":"Adds some facet to the aggregation {@link #getFacets facets}.","!type":"fn(oFacet: sap.suite.ui.commons.FacetOverview) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oFacet":"type: sap.suite.ui.commons.FacetOverview, description: The facet to add; if empty, nothing is inserted"},"!static":false},"attachBackAction":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:backAction backAction} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when the user chooses the Back button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"attachActionsButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:actionsButtonPress actionsButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when the user chooses the Actions button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nThe description of the thing.","!type":"fn() -> String","!category":"function","!static":false},"attachConfigurationButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:configurationButtonPress configurationButtonPress} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when the user chooses the Configuration button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.UnifiedThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDestroyPageOnBack":{"!description":"Gets current value of property {@link #getDestroyPageOnBack destroyPageOnBack}.\n\nIf set to true, destroys a page when the user chooses the Back button to leave this page.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireBackAction":{"!description":"Fires event {@link #event:backAction backAction} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"indexOfFacetContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getFacetContent facetContent}. and returns its index if found or -1 otherwise.","!type":"fn(oFacetContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oFacetContent":"type: sap.ui.core.Control, description: The facetContent whose index is looked for"},"!static":false},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control provides an ability to display a thing (for example, object factsheet) on the desktop, tablet, and phone devices in a Fiori style.","addTransaction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the transactionsButtonPress event handler instead.<br>Adds some transaction to the aggregation {@link #getTransactions transactions}.","!type":"fn(oTransaction: sap.ui.core.Control) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oTransaction":"type: sap.ui.core.Control, description: The transaction to add; if empty, nothing is inserted"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nThe description of the thing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"indexOfKpi":{"!description":"Checks for the provided <code>sap.suite.ui.commons.KpiTile<\/code> in the aggregation {@link #getKpis kpis}. and returns its index if found or -1 otherwise.","!type":"fn(oKpi: sap.suite.ui.commons.KpiTile) -> Number","!category":"function","parameters":{"oKpi":"type: sap.suite.ui.commons.KpiTile, description: The kpi whose index is looked for"},"!static":false},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe name of the thing.","!type":"fn() -> String","!category":"function","!static":false},"removeFacet":{"!description":"Removes a facet from the aggregation {@link #getFacets facets}.","!type":"fn(vFacet: Number | String | sap.suite.ui.commons.FacetOverview) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"vFacet":"type: int|string|sap.suite.ui.commons.FacetOverview, description: The facet to remove or its index or id"},"!static":false},"removeKpi":{"!description":"Removes a kpi from the aggregation {@link #getKpis kpis}.","!type":"fn(vKpi: Number | String | sap.suite.ui.commons.KpiTile) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"vKpi":"type: int|string|sap.suite.ui.commons.KpiTile, description: The kpi to remove or its index or id"},"!static":false},"addAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Adds some action to the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.m.Button) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oAction":"type: sap.m.Button, description: The action to add; if empty, nothing is inserted"},"!static":false},"attachAfterNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterNavigate afterNavigate} event of this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself.\n\nThe event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event. This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.UnifiedThingInspector<\/code> itself"},"!static":false},"addPage":{"!description":"Adds some page to the aggregation {@link #getPages pages}.","!type":"fn(oPage: sap.ui.core.Control) -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","parameters":{"oPage":"type: sap.ui.core.Control, description: The page to add; if empty, nothing is inserted"},"!static":false},"removeAction":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.2 Deprecated due to the incorrect work with data binding. Open the popup in the actionsButtonPress event handler instead.<br>Removes a action from the aggregation {@link #getActions actions}.","!type":"fn(vAction: Number | String | sap.m.Button) -> sap.m.Button","!category":"function","parameters":{"vAction":"type: int|string|sap.m.Button, description: The action to remove or its index or id"},"!static":false},"destroyFacetContent":{"!description":"Destroys all the facetContent in the aggregation {@link #getFacetContent facetContent}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingInspector","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.UnifiedThingInspector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.NodeImage_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.NodeImage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.NodeImage"},"sap.suite.ui.commons.statusindicator.StatusIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.StatusIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.StatusIndicator"},"sap.suite.ui.commons.FeedTile":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.suite.ui.commons.FeedItem) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"vItem":"type: int|string|sap.suite.ui.commons.FeedItem, description: The item to remove or its index or id"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setDisplayDuration":{"!description":"Sets a new value for property {@link #getDisplayDuration displayDuration}.\n\nThe length of time in seconds the control displays each feed item. Default value is 5 seconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5<\/code>.","!type":"fn(iDisplayDuration: Number) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"iDisplayDuration":"type: int, description: New value for property <code>displayDuration<\/code>"},"!static":false},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.FeedItem) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.FeedItem, description: The item to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/suite/ui/commons/FeedTile","getSource":{"!description":"Gets current value of property {@link #getSource source}.\n\nThe source of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.FeedItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.suite.ui.commons.FeedItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.FeedItem, description: The item whose index is looked for"},"!static":false},"setSource":{"!description":"Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSource: String) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"sSource":"type: string, description: New value for property <code>source<\/code>"},"!static":false},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDisplayArticleImage":{"!description":"Gets current value of property {@link #getDisplayArticleImage displayArticleImage}.\n\nTo display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDefaultImages":{"!description":"Validate the array of URI first and then set the defaultImages property","!type":"fn(oDefaultImages: [sap.ui.core.URI])","!category":"function","parameters":{"oDefaultImages":"type: sap.ui.core.URI[], description: Default image URIs"},"!static":false},"!constructorDescription":"Constructor for a new FeedTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayDuration displayDuration} : int (default: 5)<\/li>\n<li>{@link #getDisplayArticleImage displayArticleImage} : boolean (default: true)<\/li>\n<li>{@link #getSource source} : string<\/li>\n<li>{@link #getDefaultImages defaultImages} : sap.ui.core.URI[]<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.FeedItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getDisplayDuration":{"!description":"Gets current value of property {@link #getDisplayDuration displayDuration}.\n\nThe length of time in seconds the control displays each feed item. Default value is 5 seconds.\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setDisplayArticleImage":{"!description":"Sets a new value for property {@link #getDisplayArticleImage displayArticleImage}.\n\nTo display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayArticleImage: Boolean) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"bDisplayArticleImage":"type: boolean, description: New value for property <code>displayArticleImage<\/code>"},"!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.FeedTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FeedTile<\/code> itself.\n\nThe event fired when the user clicks on the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FeedTile<\/code> itself"},"!static":false},"getDefaultImages":{"!description":"Gets current value of property {@link #getDefaultImages defaultImages}.\n\nA list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.","!type":"fn() -> [sap.ui.core.URI]","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control displays news feeds.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe feed items the control cycles through.","!type":"fn() -> [sap.suite.ui.commons.FeedItem]","!category":"function","!static":false},"stageModel":{"!description":"Set a new model of feed items, such as when a feed aggregator has collected the latest feed items. This model is staged (not immediately set on the control) to avoid re-rendering before the currently displayed article is faded out. Therefore a smooth transition between the display of feed items is always maintained.","!type":"fn(oModel: sap.ui.model.Model)","!category":"function","parameters":{"oModel":"type: sap.ui.model.Model, description: Model of new feed items."},"!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.FeedTile","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.FeedItem]","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.FeedTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.FeedItem, iIndex: Number) -> sap.suite.ui.commons.FeedTile","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.suite.ui.commons.FeedItem, description: The item to insert; if empty, nothing is inserted"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control displays news feeds.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.FeedTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.statusindicator.FillingOption_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.FillingOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.FillingOption"},"sap.suite.ui.commons.SplitButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.SplitButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.SplitButton"},"sap.suite.ui.commons.HeaderCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.HeaderCell"},"sap.suite.ui.commons.FacetOverview_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FacetOverview with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.FacetOverview"},"sap.suite.ui.commons.LaunchTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.LaunchTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.LaunchTile"},"sap.suite.ui.commons.HeaderCellItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderCellItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.HeaderCellItem"},"sap.suite.ui.commons.statusindicator.CustomShape":{"destroyShapes":{"!description":"Destroys all the shapes in the aggregation {@link #getShapes shapes}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","!static":false},"removeAllFillingOptions":{"!description":"Removes all the controls from the aggregation {@link #getFillingOptions fillingOptions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.FillingOption]","!category":"function","!static":false},"removeAllShapes":{"!description":"Removes all the controls from the aggregation {@link #getShapes shapes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.SimpleShape]","!category":"function","!static":false},"getStrokeWidth":{"!description":"Gets current value of property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nDefault value is <code>0.25<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getStrokeColor":{"!description":"Gets current value of property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.m.ValueCSSColor","!category":"function","!static":false},"!module":"sap/suite/ui/commons/statusindicator/CustomShape","removeFillingOption":{"!description":"Removes a fillingOption from the aggregation {@link #getFillingOptions fillingOptions}.","!type":"fn(vFillingOption: Number | String | sap.suite.ui.commons.statusindicator.FillingOption) -> sap.suite.ui.commons.statusindicator.FillingOption","!category":"function","parameters":{"vFillingOption":"type: int|string|sap.suite.ui.commons.statusindicator.FillingOption, description: The fillingOption to remove or its index or id"},"!static":false},"setStrokeColor":{"!description":"Sets a new value for property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sStrokeColor: sap.m.ValueCSSColor) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"sStrokeColor":"type: sap.m.ValueCSSColor, description: New value for property <code>strokeColor<\/code>"},"!static":false},"getDefinition":{"!description":"Gets current value of property {@link #getDefinition definition}.\n\nA valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).<\/li> <li>It includes no &lt;defs&gt; elements.<\/li> <\/ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox<\/code> attribute of the root SVG element is respected and kept after the transformation.<\/li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.<\/li> <li>The SVG shapes without classes are considered fillable.<\/li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id<\/code> attribute that is set to a unique value.<\/li> <\/ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n<\/pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view.","!type":"fn() -> String","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the bounding rectangle.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"indexOfFillingOption":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.FillingOption<\/code> in the aggregation {@link #getFillingOptions fillingOptions}. and returns its index if found or -1 otherwise.","!type":"fn(oFillingOption: sap.suite.ui.commons.statusindicator.FillingOption) -> Number","!category":"function","parameters":{"oFillingOption":"type: sap.suite.ui.commons.statusindicator.FillingOption, description: The fillingOption whose index is looked for"},"!static":false},"getFillingOptions":{"!description":"Gets content of aggregation {@link #getFillingOptions fillingOptions}.\n\nDefines the order and weight of fillable shapes based on the status indicator value distribution. If this aggregation is not used, the shapes are filled in the order they are specified in the SVG definition.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.FillingOption]","!category":"function","!static":false},"!category":"class","addShape":{"!description":"Adds some shape to the aggregation {@link #getShapes shapes}.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.SimpleShape) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.SimpleShape, description: The shape to add; if empty, nothing is inserted"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the bounding rectangle.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the bounding rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setDefinition":{"!description":"Sets a new value for property {@link #getDefinition definition}.\n\nA valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).<\/li> <li>It includes no &lt;defs&gt; elements.<\/li> <\/ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox<\/code> attribute of the root SVG element is respected and kept after the transformation.<\/li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.<\/li> <li>The SVG shapes without classes are considered fillable.<\/li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id<\/code> attribute that is set to a unique value.<\/li> <\/ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n<\/pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDefinition: String) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"sDefinition":"type: string, description: New value for property <code>definition<\/code>"},"!static":false},"addFillingOption":{"!description":"Adds some fillingOption to the aggregation {@link #getFillingOptions fillingOptions}.","!type":"fn(oFillingOption: sap.suite.ui.commons.statusindicator.FillingOption) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"oFillingOption":"type: sap.suite.ui.commons.statusindicator.FillingOption, description: The fillingOption to add; if empty, nothing is inserted"},"!static":false},"getShapes":{"!description":"Gets content of aggregation {@link #getShapes shapes}.\n\nRead-only aggregation that contains simple shapes transformed from the SVG definition.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.SimpleShape]","!category":"function","!static":false},"setStrokeWidth":{"!description":"Sets a new value for property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.25<\/code>.","!type":"fn(fStrokeWidth: Number) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"fStrokeWidth":"type: float, description: New value for property <code>strokeWidth<\/code>"},"!static":false},"indexOfShape":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.SimpleShape<\/code> in the aggregation {@link #getShapes shapes}. and returns its index if found or -1 otherwise.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.SimpleShape) -> Number","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.SimpleShape, description: The shape whose index is looked for"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.CustomShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new CustomShape.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : int (default: 0)<\/li>\n<li>{@link #getY y} : int (default: 0)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getStrokeColor strokeColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getStrokeWidth strokeWidth} : float (default: 0.25)<\/li>\n<li>{@link #getDefinition definition} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getShapes shapes} : sap.suite.ui.commons.statusindicator.SimpleShape[] (default)<\/li>\n<li>{@link #getFillingOptions fillingOptions} : sap.suite.ui.commons.statusindicator.FillingOption[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.statusindicator.Shape#constructor sap.suite.ui.commons.statusindicator.Shape}\ncan be used as well.","destroyFillingOptions":{"!description":"Destroys all the fillingOptions in the aggregation {@link #getFillingOptions fillingOptions}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","!static":false},"insertShape":{"!description":"Inserts a shape into the aggregation {@link #getShapes shapes}.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.SimpleShape, iIndex: Number) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.SimpleShape, description: The shape to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the shape should be inserted at; for a negative value of <code>iIndex<\/code>, the shape is inserted at position 0; for a value greater than the current size of the aggregation, the shape is inserted at the last position"},"!static":false},"!description":"Custom shape that is defined directly as SVG.","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the bounding rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the bounding rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iX: Number) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"iX":"type: int, description: New value for property <code>x<\/code>"},"!static":false},"getY":{"!description":"Gets current value of property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the bounding rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the bounding rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iY: Number) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"iY":"type: int, description: New value for property <code>y<\/code>"},"!static":false},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the bounding rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeShape":{"!description":"Removes a shape from the aggregation {@link #getShapes shapes}.","!type":"fn(vShape: Number | String | sap.suite.ui.commons.statusindicator.SimpleShape) -> sap.suite.ui.commons.statusindicator.SimpleShape","!category":"function","parameters":{"vShape":"type: int|string|sap.suite.ui.commons.statusindicator.SimpleShape, description: The shape to remove or its index or id"},"!static":false},"!proto":"sap.suite.ui.commons.statusindicator.Shape","!helpDescription":"Custom shape that is defined directly as SVG.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.CustomShape.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"insertFillingOption":{"!description":"Inserts a fillingOption into the aggregation {@link #getFillingOptions fillingOptions}.","!type":"fn(oFillingOption: sap.suite.ui.commons.statusindicator.FillingOption, iIndex: Number) -> sap.suite.ui.commons.statusindicator.CustomShape","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the fillingOption should be inserted at; for a negative value of <code>iIndex<\/code>, the fillingOption is inserted at position 0; for a value greater than the current size of the aggregation, the fillingOption is inserted at the last position","oFillingOption":"type: sap.suite.ui.commons.statusindicator.FillingOption, description: The fillingOption to insert; if empty, nothing is inserted"},"!static":false}},"sap.suite.ui.commons.statusindicator.LibraryShape":{"getShapeId":{"!description":"Gets current value of property {@link #getShapeId shapeId}.\n\nAn ID associated with a specific shape from the shape library.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.LibraryShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.CustomShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"attachAfterShapeLoaded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterShapeLoaded afterShapeLoaded} event of this <code>sap.suite.ui.commons.statusindicator.LibraryShape<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.statusindicator.LibraryShape<\/code> itself.\n\nThis event is fired when the definition of shape is loaded.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.statusindicator.LibraryShape","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.statusindicator.LibraryShape<\/code> itself"},"!static":false},"!constructorDescription":"Constructor for a new Library Shape.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShapeId shapeId} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterShapeLoaded afterShapeLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.statusindicator.CustomShape#constructor sap.suite.ui.commons.statusindicator.CustomShape}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/LibraryShape","fireAfterShapeLoaded":{"!description":"Fires event {@link #event:afterShapeLoaded afterShapeLoaded} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.statusindicator.LibraryShape","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!description":"Custom shape that is selected by <code>shapeId<\/code> from the shapes library.","setShapeId":{"!description":"Sets a new value for property {@link #getShapeId shapeId}.\n\nAn ID associated with a specific shape from the shape library.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sShapeId: String) -> sap.suite.ui.commons.statusindicator.LibraryShape","!category":"function","parameters":{"sShapeId":"type: string, description: New value for property <code>shapeId<\/code>"},"!static":false},"detachAfterShapeLoaded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterShapeLoaded afterShapeLoaded} event of this <code>sap.suite.ui.commons.statusindicator.LibraryShape<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.statusindicator.LibraryShape","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!category":"class","!helpDescription":"Custom shape that is selected by <code>shapeId<\/code> from the shapes library.","!proto":"sap.suite.ui.commons.statusindicator.CustomShape","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.LibraryShape.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TileContent2X2":{"getFooter":{"!description":"Gets current value of property {@link #getFooter footer}.\n\nThe footer text of the tile.","!type":"fn() -> String","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sSize: sap.suite.ui.commons.InfoTileSize) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"sSize":"type: sap.suite.ui.commons.InfoTileSize, description: New value for property <code>size<\/code>"},"!static":false},"setFooter":{"!description":"Sets a new value for property {@link #getFooter footer}.\n\nThe footer text of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFooter: String) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"sFooter":"type: string, description: New value for property <code>footer<\/code>"},"!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe switchable view that depends on the tile type.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TileContent2X2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getUnit":{"!description":"Gets current value of property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TileContent2X2.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string<\/li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: Auto)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getDisabled disabled} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"!module":"sap/suite/ui/commons/TileContent2X2","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.TileContent2X2","!category":"function","!static":false},"setUnit":{"!description":"Sets a new value for property {@link #getUnit unit}.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUnit: String) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"sUnit":"type: string, description: New value for property <code>unit<\/code>"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>This control serves a universal container for different types of content and footer.","!category":"class","getDisabled":{"!description":"Gets current value of property {@link #getDisabled disabled}.\n\nDisables control if true.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.suite.ui.commons.InfoTileSize","!category":"function","!static":false},"setDisabled":{"!description":"Sets a new value for property {@link #getDisabled disabled}.\n\nDisables control if true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisabled: Boolean) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"bDisabled":"type: boolean, description: New value for property <code>disabled<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>This control serves a universal container for different types of content and footer.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TileContent2X2.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.taccount.TAccountPanel":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nState of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccountPanelState","!category":"function","!static":false},"getTable":{"!description":"Gets content of aggregation {@link #getTable table}.\n\nTable that can be used to display additional data.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"removeAllProperties":{"!description":"Removes all the controls from the aggregation {@link #getProperties properties}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItemProperty]","!category":"function","!static":false},"getSettingsDialog":{"!description":"Returns the settings dialog of the panel.","!type":"fn()","!category":"function","!static":false},"getShowOverlay":{"!description":"Gets current value of property {@link #getShowOverlay showOverlay}.\n\nIndicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"openSettings":{"!description":"Opens the settings dialog of the panel.","!type":"fn()","!category":"function","!static":false},"attachStateChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChanged stateChanged} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code> itself.\n\nThis event is fired when the user switches between T account view and table view.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code> itself"},"!static":false},"!module":"sap/suite/ui/commons/taccount/TAccountPanel","detachStateChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChanged stateChanged} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"switchContent":{"!description":"Switches the content displayed in the panel to either table view or T-account view.","!type":"fn(showTable: Boolean)","!category":"function","parameters":{"showTable":"type: boolean, description: Defines whether to show accounts as tables (<code>true<\/code>) or standard T accounts."},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the panel.","!type":"fn() -> String","!category":"function","!static":false},"setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nState of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sState: sap.suite.ui.commons.taccount.TAccountPanelState) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.taccount.TAccountPanelState, description: New value for property <code>state<\/code>"},"!static":false},"detachSettingsApplied":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:settingsApplied settingsApplied} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertProperty":{"!description":"Inserts a property into the aggregation {@link #getProperties properties}.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty, iIndex: Number) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the property should be inserted at; for a negative value of <code>iIndex<\/code>, the property is inserted at position 0; for a value greater than the current size of the aggregation, the property is inserted at the last position"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfProperty":{"!description":"Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItemProperty<\/code> in the aggregation {@link #getProperties properties}. and returns its index if found or -1 otherwise.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty) -> Number","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property whose index is looked for"},"!static":false},"setShowOverlay":{"!description":"Sets a new value for property {@link #getShowOverlay showOverlay}.\n\nIndicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowOverlay: Boolean) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"bShowOverlay":"type: boolean, description: New value for property <code>showOverlay<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TAccountPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.taccount.TAccountPanelState (default: Default)<\/li>\n<li>{@link #getShowOverlay showOverlay} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getProperties properties} : sap.suite.ui.commons.taccount.TAccountItemProperty[]<\/li>\n<li>{@link #getTable table} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChanged stateChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:settingsApplied settingsApplied} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getProperties":{"!description":"Gets content of aggregation {@link #getProperties properties}.\n\nProperties of the T-account entries that can be shown or hidden using the panel's settings dialog.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItemProperty]","!category":"function","!static":false},"getToolbar":{"!description":"Returns the panel's toolbar, so the app can modify it.","!type":"fn()","!category":"function","!static":false},"setTable":{"!description":"Sets the aggregated {@link #getTable table}.","!type":"fn(oTable: sap.ui.core.Control) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"oTable":"type: sap.ui.core.Control, description: The table to set"},"!static":false},"destroyProperties":{"!description":"Destroys all the properties in the aggregation {@link #getProperties properties}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","!static":false},"fireStateChanged":{"!description":"Fires event {@link #event:stateChanged stateChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachSettingsApplied":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:settingsApplied settingsApplied} event of this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code> itself.\n\nThis event is fired when the panel's settings are applied.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountPanel<\/code> itself"},"!static":false},"!description":"A panel that acts as a container for {@link sap.suite.ui.commons.TAccountGroup} controls included in it.<br> The settings dialog of the panel can be used to modify how the {@link sap.suite.ui.commons.TAccountItem} elements in the included T accounts are displayed.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"fireSettingsApplied":{"!description":"Fires event {@link #event:settingsApplied settingsApplied} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"addProperty":{"!description":"Adds some property to the aggregation {@link #getProperties properties}.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty) -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to add; if empty, nothing is inserted"},"!static":false},"destroyTable":{"!description":"Destroys the table in the aggregation {@link #getTable table}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccountPanel","!category":"function","!static":false},"removeProperty":{"!description":"Removes a property from the aggregation {@link #getProperties properties}.","!type":"fn(vProperty: Number | String | sap.suite.ui.commons.taccount.TAccountItemProperty) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"vProperty":"type: int|string|sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to remove or its index or id"},"!static":false},"getSum":{"!description":"Gets the sum of transactions in all T-account groups included in the panel.<br>\n\nReturns a sum object that is structured as follows:<br> <code>{<\/code><br> <code>measure: {string}<\/code> Unit of measurement of the T accounts. If T accounts use different units of measurements, the last one is returned.<br> <code>sum: {number}<\/code> Sum of all entries in the T accounts and T-account groups included in the panel.<br> <code>correct: {boolean}<\/code> If <code>false<\/code>, the sum cannot be calculated, because the T accounts use different units of measurement.<br> <code>}<\/code><br>","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"A panel that acts as a container for {@link sap.suite.ui.commons.TAccountGroup} controls included in it.<br> The settings dialog of the panel can be used to modify how the {@link sap.suite.ui.commons.TAccountItem} elements in the included T accounts are displayed.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountPanel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.DateRangeSliderInternal":{"getShowBubbles":{"!description":"Gets current value of property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeSliderInternal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.RangeSlider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!constructorDescription":"Constructor for a new DateRangeSliderInternal.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowBubbles showBubbles} : boolean (default: true)<\/li>\n<li>{@link #getPinGrip pinGrip} : boolean (default: false)<\/li>\n<li>{@link #getPinGrip2 pinGrip2} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.commons.RangeSlider#constructor sap.ui.commons.RangeSlider}\ncan be used as well.","!module":"sap/suite/ui/commons/DateRangeSliderInternal","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.","setPinGrip":{"!description":"Sets a new value for property {@link #getPinGrip pinGrip}.\n\nProperty to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPinGrip: Boolean) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"bPinGrip":"type: boolean, description: New value for property <code>pinGrip<\/code>"},"!static":false},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code> itself.\n\nThis live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code> itself"},"!static":false},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!category":"class","setShowBubbles":{"!description":"Sets a new value for property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowBubbles: Boolean) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"bShowBubbles":"type: boolean, description: New value for property <code>showBubbles<\/code>"},"!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code> itself.\n\nThis event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSliderInternal<\/code> itself"},"!static":false},"getPinGrip2":{"!description":"Gets current value of property {@link #getPinGrip2 pinGrip2}.\n\nProperty to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setPinGrip2":{"!description":"Sets a new value for property {@link #getPinGrip2 pinGrip2}.\n\nProperty to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPinGrip2: Boolean) -> sap.suite.ui.commons.DateRangeSliderInternal","!category":"function","parameters":{"bPinGrip2":"type: boolean, description: New value for property <code>pinGrip2<\/code>"},"!static":false},"getPinGrip":{"!description":"Gets current value of property {@link #getPinGrip pinGrip}.\n\nProperty to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.DateRangeSliderInternal.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.","!proto":"sap.ui.commons.RangeSlider"},"sap.suite.ui.commons.TimelineItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TimelineItem"},"sap.suite.ui.commons.taccount.TAccountPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountPanel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.taccount.TAccountPanel"},"sap.suite.ui.commons.Timeline_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.Timeline with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.Timeline"},"sap.suite.ui.commons.networkgraph.layout.NoopLayout":{"!description":"This is a simple layout algorithm that expects the positions of nodes to be already present. It only creates line coordinates (see {@link sap.suite.ui.commons.networkgraph.Line#setCoordinates}).","layout":{"!description":"Executes the layout algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new NoopLayout.","getLayoutRenderType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/layout/NoopLayout","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","!helpDescription":"This is a simple layout algorithm that expects the positions of nodes to be already present. It only creates line coordinates (see {@link sap.suite.ui.commons.networkgraph.Line#setCoordinates})."},"sap.suite.ui.commons.statusindicator.PropertyThreshold_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.PropertyThreshold with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.PropertyThreshold"},"sap.suite.ui.commons.statusindicator.Path_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Path with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.Path"},"sap.suite.ui.commons.LinkActionSheet":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vItem":"type: int|string|sap.ui.core.Control, description: The item to remove or its index or id"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.LinkActionSheet with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ActionSheet.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new LinkActionSheet.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ActionSheet#constructor sap.m.ActionSheet}\ncan be used as well.","attachItemPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemPress itemPress} event of this <code>sap.suite.ui.commons.LinkActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.LinkActionSheet<\/code> itself.\n\nThe event is fired when the user chooses any item.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.LinkActionSheet","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LinkActionSheet<\/code> itself"},"!static":false},"fireItemPress":{"!description":"Fires event {@link #event:itemPress itemPress} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!module":"sap/suite/ui/commons/LinkActionSheet","addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.ui.core.Control) -> sap.suite.ui.commons.LinkActionSheet","!category":"function","parameters":{"oItem":"type: sap.ui.core.Control, description: The item to add; if empty, nothing is inserted"},"!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oItem":"type: sap.ui.core.Control, description: The item whose index is looked for"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control contains one or more sap.m.Button controls or sap.ui.commons.Link controls. The LinkActionSheet control is closed if the user chooses one of the buttons or links. It looks similar to sap.m.Dialog in iPhone and Android, and to sap.m.Popover in iPad.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThese buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.LinkActionSheet","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.LinkActionSheet","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Control, description: The item to insert; if empty, nothing is inserted"},"!static":false},"detachItemPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemPress itemPress} event of this <code>sap.suite.ui.commons.LinkActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.LinkActionSheet","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.LinkActionSheet.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control contains one or more sap.m.Button controls or sap.ui.commons.Link controls. The LinkActionSheet control is closed if the user chooses one of the buttons or links. It looks similar to sap.m.Dialog in iPhone and Android, and to sap.m.Popover in iPad.","!proto":"sap.m.ActionSheet"},"sap.suite.ui.commons.ThingCollection_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThingCollection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ThingCollection"},"sap.suite.ui.commons.networkgraph.BackgroundColor":{"Default":{"!description":"The default color of the parent container is used.","!type":"String","!category":"enum"},"White":{"!description":"White.","!type":"String","!category":"enum"},"!description":"Background color for the network graph.","!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.ThreePanelThingViewer":{"indexOfMenuContent":{"!description":"Checks for the provided <code>sap.ui.commons.Link<\/code> in the aggregation {@link #getMenuContent menuContent}. and returns its index if found or -1 otherwise.","!type":"fn(oMenuContent: sap.ui.commons.Link) -> Number","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent whose index is looked for"},"!static":false},"setLogo":{"!description":"Sets a new value for property {@link #getLogo logo}.\n\nA URL of the source of an image known as key visual. This can be a company logo or other essential graphics.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLogo: sap.ui.core.URI) -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","parameters":{"sLogo":"type: sap.ui.core.URI, description: New value for property <code>logo<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingViewer.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"removeMenuContent":{"!description":"Removes a menuContent from the aggregation {@link #getMenuContent menuContent}.","!type":"fn(vMenuContent: Number | String | sap.ui.commons.Link) -> sap.ui.commons.Link","!category":"function","parameters":{"vMenuContent":"type: int|string|sap.ui.commons.Link, description: The menuContent to remove or its index or id"},"!static":false},"setShowHeader":{"!description":"Sets a new value for property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel named Header that contains general information.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bShowHeader: Boolean) -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ThreePanelThingViewer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLogo logo} : sap.ui.core.URI<\/li>\n<li>{@link #getShowHeader showHeader} : boolean<\/li>\n<li>{@link #getSidebarWidth sidebarWidth} : sap.ui.core.CSSSize (default: 244px)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenuContent menuContent} : sap.ui.commons.Link[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.ux3.ThingViewer#constructor sap.ui.ux3.ThingViewer}\ncan be used as well.","destroyMenuContent":{"!description":"Destroys all the menuContent in the aggregation {@link #getMenuContent menuContent}.","!type":"fn() -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","!static":false},"!module":"sap/suite/ui/commons/ThreePanelThingViewer","getSidebarWidth":{"!description":"Gets current value of property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".\n\nDefault value is <code>244px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getShowHeader":{"!description":"Gets current value of property {@link #getShowHeader showHeader}.\n\nShows or hides a middle panel named Header that contains general information.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control extends the sap.ui.ux3.ThingViewer control. The first panel can display a thing icon, a title, the Action Menu button, up to two rows of text descriptions (the first is wrapped, the second is truncated), vertical navigation bar (sap.suite.ui.commons.VerticalNavigationBar), and an image aka key visual. The second panel displays the header area as a vertical panel containing ThingGroup objects. The third panel is a main content area designed to display ThingGroup objects.","getLogo":{"!description":"Gets current value of property {@link #getLogo logo}.\n\nA URL of the source of an image known as key visual. This can be a company logo or other essential graphics.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"insertMenuContent":{"!description":"Inserts a menuContent into the aggregation {@link #getMenuContent menuContent}.","!type":"fn(oMenuContent: sap.ui.commons.Link, iIndex: Number) -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the menuContent should be inserted at; for a negative value of <code>iIndex<\/code>, the menuContent is inserted at position 0; for a value greater than the current size of the aggregation, the menuContent is inserted at the last position"},"!static":false},"setSidebarWidth":{"!description":"Sets a new value for property {@link #getSidebarWidth sidebarWidth}.\n\nThe width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>244px<\/code>.","!type":"fn(sSidebarWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","parameters":{"sSidebarWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>sidebarWidth<\/code>"},"!static":false},"!category":"class","getMenuContent":{"!description":"Gets content of aggregation {@link #getMenuContent menuContent}.\n\nThis aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel.","!type":"fn() -> [sap.ui.commons.Link]","!category":"function","!static":false},"removeAllMenuContent":{"!description":"Removes all the controls from the aggregation {@link #getMenuContent menuContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.commons.Link]","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control extends the sap.ui.ux3.ThingViewer control. The first panel can display a thing icon, a title, the Action Menu button, up to two rows of text descriptions (the first is wrapped, the second is truncated), vertical navigation bar (sap.suite.ui.commons.VerticalNavigationBar), and an image aka key visual. The second panel displays the header area as a vertical panel containing ThingGroup objects. The third panel is a main content area designed to display ThingGroup objects.","!proto":"sap.ui.ux3.ThingViewer","addMenuContent":{"!description":"Adds some menuContent to the aggregation {@link #getMenuContent menuContent}.","!type":"fn(oMenuContent: sap.ui.commons.Link) -> sap.suite.ui.commons.ThreePanelThingViewer","!category":"function","parameters":{"oMenuContent":"type: sap.ui.commons.Link, description: The menuContent to add; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ThreePanelThingViewer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.statusindicator.Rectangle":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Rectangle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Rectangle.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : int (default: 0)<\/li>\n<li>{@link #getY y} : int (default: 0)<\/li>\n<li>{@link #getRx rx} : int (default: 0)<\/li>\n<li>{@link #getRy ry} : int (default: 0)<\/li>\n<li>{@link #getWidth width} : int (default: 0)<\/li>\n<li>{@link #getHeight height} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.statusindicator.SimpleShape#constructor sap.suite.ui.commons.statusindicator.SimpleShape}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/Rectangle","getRx":{"!description":"Gets current value of property {@link #getRx rx}.\n\nDefines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getRy":{"!description":"Gets current value of property {@link #getRy ry}.\n\nDefines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDefines the height of the rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Status indicator shape in the form of a rectangle.","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iHeight: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iHeight":"type: int, description: New value for property <code>height<\/code>"},"!static":false},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iX: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iX":"type: int, description: New value for property <code>x<\/code>"},"!static":false},"setRy":{"!description":"Sets a new value for property {@link #getRy ry}.\n\nDefines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iRy: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iRy":"type: int, description: New value for property <code>ry<\/code>"},"!static":false},"getY":{"!description":"Gets current value of property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nDefines the y coordinate of the upper-left corner of the rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iY: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iY":"type: int, description: New value for property <code>y<\/code>"},"!static":false},"setRx":{"!description":"Sets a new value for property {@link #getRx rx}.\n\nDefines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iRx: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iRx":"type: int, description: New value for property <code>rx<\/code>"},"!static":false},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nDefines the x coordinate of the upper-left corner of the rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the rectangle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iWidth: Number) -> sap.suite.ui.commons.statusindicator.Rectangle","!category":"function","parameters":{"iWidth":"type: int, description: New value for property <code>width<\/code>"},"!static":false},"!helpDescription":"Status indicator shape in the form of a rectangle.","!proto":"sap.suite.ui.commons.statusindicator.SimpleShape","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.Rectangle.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.NoteTakerFeeder":{"detachAttachmentUploadComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getAttachmentName":{"!description":"Gets current value of property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/suite/ui/commons/NoteTakerFeeder","fireAddNote":{"!description":"Fires event {@link #event:addNote addNote} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachAttachmentUploadComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself.\n\nThe event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself"},"!static":false},"getTags":{"!description":"Gets current value of property {@link #getTags tags}.\n\nThe list of tags selected for addition to a new note card.\n\nDefault value is <code>[]<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"getThumbUp":{"!description":"Gets current value of property {@link #getThumbUp thumbUp}.\n\nSets positive indication for a new note.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAttachmentName":{"!description":"Sets a new value for property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>attachment<\/code>.","!type":"fn(sAttachmentName: String) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"sAttachmentName":"type: string, description: New value for property <code>attachmentName<\/code>"},"!static":false},"detachAttachmentSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireAttachmentDelete":{"!description":"Fires event {@link #event:attachmentDelete attachmentDelete} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachAddNote":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:addNote addNote} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThis text is the header of a new note.","!type":"fn() -> String","!category":"function","!static":false},"detachAttachmentDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAttachmentClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setTags":{"!description":"Sets a new value for property {@link #getTags tags}.\n\nThe list of tags selected for addition to a new note card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!type":"fn(oTags: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"oTags":"type: object, description: New value for property <code>tags<\/code>"},"!static":false},"setThumbUp":{"!description":"Sets a new value for property {@link #getThumbUp thumbUp}.\n\nSets positive indication for a new note.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bThumbUp: Boolean) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"bThumbUp":"type: boolean, description: New value for property <code>thumbUp<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTakerFeeder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getBody":{"!description":"Gets current value of property {@link #getBody body}.\n\nThe text inside the note card.","!type":"fn() -> String","!category":"function","!static":false},"fireAttachmentClick":{"!description":"Fires event {@link #event:attachmentClick attachmentClick} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireAttachmentSelect":{"!description":"Fires event {@link #event:attachmentSelect attachmentSelect} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!constructorDescription":"Constructor for a new NoteTakerFeeder.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBody body} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTags tags} : object (default: [])<\/li>\n<li>{@link #getThumbUp thumbUp} : boolean<\/li>\n<li>{@link #getThumbDown thumbDown} : boolean<\/li>\n<li>{@link #getAttachmentUploadUrl attachmentUploadUrl} : string<\/li>\n<li>{@link #getAttachmentName attachmentName} : string (default: attachment)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addNote addNote} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentSelect attachmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentUploadComplete attachmentUploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentDelete attachmentDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachAttachmentSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself.\n\nThe event is fired when the value of attached file has been changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself"},"!static":false},"attachAttachmentDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself.\n\nThe event is fired when a user presses the Delete button in the Feeder card.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself"},"!static":false},"getAttachmentUploadUrl":{"!description":"Gets current value of property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nSets the upload attachment URL for a new card.","!type":"fn() -> String","!category":"function","!static":false},"attachAttachmentClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself.\n\nThe event is fired when a user presses the attachment link.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself"},"!static":false},"fireAttachmentUploadComplete":{"!description":"Fires event {@link #event:attachmentUploadComplete attachmentUploadComplete} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getThumbDown":{"!description":"Gets current value of property {@link #getThumbDown thumbDown}.\n\nSets negative indication for a new note.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to enter a quick note and N note cards.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThis text is the header of a new note.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setAttachmentUploadUrl":{"!description":"Sets a new value for property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nSets the upload attachment URL for a new card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAttachmentUploadUrl: String) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"sAttachmentUploadUrl":"type: string, description: New value for property <code>attachmentUploadUrl<\/code>"},"!static":false},"setThumbDown":{"!description":"Sets a new value for property {@link #getThumbDown thumbDown}.\n\nSets negative indication for a new note.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(bThumbDown: Boolean) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"bThumbDown":"type: boolean, description: New value for property <code>thumbDown<\/code>"},"!static":false},"attachAddNote":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:addNote addNote} event of this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself.\n\nThe event is fired when a user chooses the Add button in the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTakerFeeder<\/code> itself"},"!static":false},"setBody":{"!description":"Sets a new value for property {@link #getBody body}.\n\nThe text inside the note card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBody: String) -> sap.suite.ui.commons.NoteTakerFeeder","!category":"function","parameters":{"sBody":"type: string, description: New value for property <code>body<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.NoteTakerFeeder.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to enter a quick note and N note cards."},"sap.suite.ui.commons.networkgraph.layout.LayeredLayout":{"setMergeEdges":{"!description":"Sets a new value for property {@link #getMergeEdges mergeEdges}.\n\nDetermines if all lines should lead to the same place in the node, or if each line should point to a different place.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMergeEdges: Boolean) -> sap.suite.ui.commons.networkgraph.layout.LayeredLayout","!category":"function","parameters":{"bMergeEdges":"type: boolean, description: New value for property <code>mergeEdges<\/code>"},"!static":false},"setNodeSpacing":{"!description":"Sets a new value for property {@link #getNodeSpacing nodeSpacing}.\n\nDefine a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>55<\/code>.","!type":"fn(fNodeSpacing: Number) -> sap.suite.ui.commons.networkgraph.layout.LayeredLayout","!category":"function","parameters":{"fNodeSpacing":"type: float, description: New value for property <code>nodeSpacing<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayeredLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getMergeEdges":{"!description":"Gets current value of property {@link #getMergeEdges mergeEdges}.\n\nDetermines if all lines should lead to the same place in the node, or if each line should point to a different place.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new LayeredLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNodeSpacing nodeSpacing} : float (default: 55)<\/li>\n<li>{@link #getLineSpacingFactor lineSpacingFactor} : float (default: 0.25)<\/li>\n<li>{@link #getNodePlacement nodePlacement} : sap.suite.ui.commons.networkgraph.NodePlacement (default: BrandesKoepf)<\/li>\n<li>{@link #getMergeEdges mergeEdges} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm#constructor sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/layout/LayeredLayout","getNodePlacement":{"!description":"Gets current value of property {@link #getNodePlacement nodePlacement}.\n\nA node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).\n\nDefault value is <code>BrandesKoepf<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.NodePlacement","!category":"function","!static":false},"!description":"This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph.","setLineSpacingFactor":{"!description":"Sets a new value for property {@link #getLineSpacingFactor lineSpacingFactor}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.25<\/code>.","!type":"fn(fLineSpacingFactor: Number) -> sap.suite.ui.commons.networkgraph.layout.LayeredLayout","!category":"function","parameters":{"fLineSpacingFactor":"type: float, description: New value for property <code>lineSpacingFactor<\/code>"},"!static":false},"layout":{"!description":"Executes the layout algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","setNodePlacement":{"!description":"Sets a new value for property {@link #getNodePlacement nodePlacement}.\n\nA node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>BrandesKoepf<\/code>.","!type":"fn(sNodePlacement: sap.suite.ui.commons.networkgraph.NodePlacement) -> sap.suite.ui.commons.networkgraph.layout.LayeredLayout","!category":"function","parameters":{"sNodePlacement":"type: sap.suite.ui.commons.networkgraph.NodePlacement, description: New value for property <code>nodePlacement<\/code>"},"!static":false},"getLayoutRenderType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"getLineSpacingFactor":{"!description":"Gets current value of property {@link #getLineSpacingFactor lineSpacingFactor}.\n\nDefault value is <code>0.25<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getNodeSpacing":{"!description":"Gets current value of property {@link #getNodeSpacing nodeSpacing}.\n\nDefine a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.\n\nDefault value is <code>55<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!helpDescription":"This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph.","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayeredLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.SvgBase":{"!description":"SvgBase class","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.SvgBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ElementBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.","!module":"sap/suite/ui/commons/networkgraph/SvgBase","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.SvgBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"SvgBase class"},"sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem"},"sap.suite.ui.commons.statusindicator.CustomShape_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.CustomShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.CustomShape"},"sap.suite.ui.commons.imageeditor.ResizeHistoryItem":{"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that change the size of the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#setSize}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#setWidth}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#setHeight}.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ResizeHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ResizeHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/ResizeHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.ResizeHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that change the size of the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#setSize}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#setWidth}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#setHeight}."},"sap.suite.ui.commons.networkgraph.ActionButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ActionButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.ActionButton"},"sap.suite.ui.commons.networkgraph.NodeImage":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.NodeImage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Node Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : int<\/li>\n<li>{@link #getHeight height} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/NodeImage","getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the image.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Holds information about node image.","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nRelative or absolute path to the image file.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSrc: sap.ui.core.URI) -> sap.suite.ui.commons.networkgraph.NodeImage","!category":"function","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iHeight: Number) -> sap.suite.ui.commons.networkgraph.NodeImage","!category":"function","parameters":{"iHeight":"type: int, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the image.","!type":"fn() -> Number","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iWidth: Number) -> sap.suite.ui.commons.networkgraph.NodeImage","!category":"function","parameters":{"iWidth":"type: int, description: New value for property <code>width<\/code>"},"!static":false},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nRelative or absolute path to the image file.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!helpDescription":"Holds information about node image.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.NodeImage.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ChartContainer":{"setEnableScroll":{"!description":"Sets a new value for property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true<\/code>, the Container control has its own scroll bar, with the scrolling taking place within the Container control itself.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScroll: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bEnableScroll":"type: boolean, description: New value for property <code>enableScroll<\/code>"},"!static":false},"setShowFullScreen":{"!description":"Sets a new value for property {@link #getShowFullScreen showFullScreen}.\n\nSet to true to display the full screen icon. Set to false to hide it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowFullScreen: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowFullScreen":"type: boolean, description: New value for property <code>showFullScreen<\/code>"},"!static":false},"getShowLegendButton":{"!description":"Gets current value of property {@link #getShowLegendButton showLegendButton}.\n\nSet to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowLegend":{"!description":"Sets a new value for property {@link #getShowLegend showLegend}.\n\nSet to true to display the charts' legends. Set to false to hide them. See also showLegendButton.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowLegend: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowLegend":"type: boolean, description: New value for property <code>showLegend<\/code>"},"!static":false},"removeAllCustomIcons":{"!description":"Removes all the controls from the aggregation {@link #getCustomIcons customIcons}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Icon]","!category":"function","!static":false},"fireContentChange":{"!description":"Fires event {@link #event:contentChange contentChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!module":"sap/suite/ui/commons/ChartContainer","detachCustomZoomInPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:customZoomInPress customZoomInPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nString shown if there are no dimensions to display.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setShowZoom":{"!description":"Sets a new value for property {@link #getShowZoom showZoom}.\n\nSet to true to display zoom icons. Set to false to hide them.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowZoom: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowZoom":"type: boolean, description: New value for property <code>showZoom<\/code>"},"!static":false},"attachPersonalizationPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:personalizationPress personalizationPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself.\n\nEvent fired when a user clicks on the personalization icon.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself"},"!static":false},"destroyCustomIcons":{"!description":"Destroys all the customIcons in the aggregation {@link #getCustomIcons customIcons}.","!type":"fn() -> sap.suite.ui.commons.ChartContainer","!category":"function","!static":false},"setAutoAdjustHeight":{"!description":"Sets a new value for property {@link #getAutoAdjustHeight autoAdjustHeight}.\n\nDetermine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoAdjustHeight: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bAutoAdjustHeight":"type: boolean, description: New value for property <code>autoAdjustHeight<\/code>"},"!static":false},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.ChartContainerContent) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.ChartContainerContent, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.ChartContainerContent]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nChartToolBar Content aggregation. Only sap.viz.ui5.controls.VizFrame, sap.m.Table and sap.ui.table.Table can be embedded. If not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. This means, per default the first chart of the aggregation will be rendered within the container.","!type":"fn() -> [sap.suite.ui.commons.ChartContainerContent]","!category":"function","!static":false},"getCustomIcons":{"!description":"Gets content of aggregation {@link #getCustomIcons customIcons}.\n\nThis aggregation contains the custom icons that should be displayed additionally on the toolbar. It is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar, but the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property of the sap.ui.core.Icon provided in the aggregation. If a press event is triggered by the icon displayed on the toolbar, then the press handler of the original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event, can be accessed using the \"controlReference\" parameter of the event object.","!type":"fn() -> [sap.ui.core.Icon]","!category":"function","!static":false},"setWrapLabels":{"!description":"Sets a new value for property {@link #getWrapLabels wrapLabels}.\n\nSet to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bWrapLabels: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bWrapLabels":"type: boolean, description: New value for property <code>wrapLabels<\/code>"},"!static":false},"attachContentChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:contentChange contentChange} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself.\n\nEvent fired when a user changes the displayed content.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself"},"!static":false},"getEnableScroll":{"!description":"Gets current value of property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true<\/code>, the Container control has its own scroll bar, with the scrolling taking place within the Container control itself.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setFullScreen":{"!description":"Sets a new value for property {@link #getFullScreen fullScreen}.\n\nDisplay the chart and the toolbar in full screen or normal mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFullScreen: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bFullScreen":"type: boolean, description: New value for property <code>fullScreen<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ChartContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPersonalization showPersonalization} : boolean (default: false)<\/li>\n<li>{@link #getShowFullScreen showFullScreen} : boolean (default: false)<\/li>\n<li>{@link #getFullScreen fullScreen} : boolean (default: false)<\/li>\n<li>{@link #getShowLegend showLegend} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSelectorGroupLabel selectorGroupLabel} : string<\/li>\n<li>{@link #getAutoAdjustHeight autoAdjustHeight} : boolean (default: false)<\/li>\n<li>{@link #getShowZoom showZoom} : boolean (default: true)<\/li>\n<li>{@link #getShowLegendButton showLegendButton} : boolean (default: true)<\/li>\n<li>{@link #getShowSelectionDetails showSelectionDetails} : boolean (default: false)<\/li>\n<li>{@link #getWrapLabels wrapLabels} : boolean (default: false)<\/li>\n<li>{@link #getEnableScroll enableScroll} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDimensionSelectors dimensionSelectors} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.suite.ui.commons.ChartContainerContent[] (default)<\/li>\n<li>{@link #getToolbar toolbar} : sap.m.OverflowToolbar<\/li>\n<li>{@link #getCustomIcons customIcons} : sap.ui.core.Icon[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:personalizationPress personalizationPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:contentChange contentChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:customZoomInPress customZoomInPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:customZoomOutPress customZoomOutPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getToolbar":{"!description":"Gets content of aggregation {@link #getToolbar toolbar}.\n\nOverflow ToolBar. If an external toolbar is used, it will be integrated with the embedded toolbar via a placeholder. This placeholder is mandatory, and it needs to be of type 'sap.suite.ui.commons.ChartContainerToolbarPlaceholder'.","!type":"fn() -> sap.m.OverflowToolbar","!category":"function","!static":false},"setToolbar":{"!description":"Sets the aggregated {@link #getToolbar toolbar}.","!type":"fn(oToolbar: sap.m.OverflowToolbar) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oToolbar":"type: sap.m.OverflowToolbar, description: The toolbar to set"},"!static":false},"indexOfCustomIcon":{"!description":"Checks for the provided <code>sap.ui.core.Icon<\/code> in the aggregation {@link #getCustomIcons customIcons}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomIcon: sap.ui.core.Icon) -> Number","!category":"function","parameters":{"oCustomIcon":"type: sap.ui.core.Icon, description: The customIcon whose index is looked for"},"!static":false},"fireCustomZoomInPress":{"!description":"Fires event {@link #event:customZoomInPress customZoomInPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachPersonalizationPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:personalizationPress personalizationPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nString shown if there are no dimensions to display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"insertCustomIcon":{"!description":"Inserts a customIcon into the aggregation {@link #getCustomIcons customIcons}.","!type":"fn(oCustomIcon: sap.ui.core.Icon, iIndex: Number) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oCustomIcon":"type: sap.ui.core.Icon, description: The customIcon to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the customIcon should be inserted at; for a negative value of <code>iIndex<\/code>, the customIcon is inserted at position 0; for a value greater than the current size of the aggregation, the customIcon is inserted at the last position"},"!static":false},"!helpDescription":"Provides a toolbar with generic functions for tables and charts based on the VizFrame control like zoom, display in fullscreen mode, toggle the legend, switch between chart types, and changes of the chart dimension. The controls of the content aggregation are positioned below the toolbar. Additional functions can be added to the toolbar with the customIcons aggregation.","!proto":"sap.ui.core.Control","getWrapLabels":{"!description":"Gets current value of property {@link #getWrapLabels wrapLabels}.\n\nSet to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowLegendButton":{"!description":"Sets a new value for property {@link #getShowLegendButton showLegendButton}.\n\nSet to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowLegendButton: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowLegendButton":"type: boolean, description: New value for property <code>showLegendButton<\/code>"},"!static":false},"attachCustomZoomOutPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:customZoomOutPress customZoomOutPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself.\n\nCustom event for zoom out.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself"},"!static":false},"removeAllDimensionSelectors":{"!description":"Removes all the controls from the aggregation {@link #getDimensionSelectors dimensionSelectors}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"detachCustomZoomOutPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:customZoomOutPress customZoomOutPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.suite.ui.commons.ChartContainerContent<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.suite.ui.commons.ChartContainerContent) -> Number","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.ChartContainerContent, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.suite.ui.commons.ChartContainerContent) -> sap.suite.ui.commons.ChartContainerContent","!category":"function","parameters":{"vContent":"type: int|string|sap.suite.ui.commons.ChartContainerContent, description: The content to remove or its index or id"},"!static":false},"destroyDimensionSelectors":{"!description":"Destroys all the dimensionSelectors in the aggregation {@link #getDimensionSelectors dimensionSelectors}.","!type":"fn() -> sap.suite.ui.commons.ChartContainer","!category":"function","!static":false},"getShowZoom":{"!description":"Gets current value of property {@link #getShowZoom showZoom}.\n\nSet to true to display zoom icons. Set to false to hide them.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"indexOfDimensionSelector":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getDimensionSelectors dimensionSelectors}. and returns its index if found or -1 otherwise.","!type":"fn(oDimensionSelector: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oDimensionSelector":"type: sap.ui.core.Control, description: The dimensionSelector whose index is looked for"},"!static":false},"insertDimensionSelector":{"!description":"Inserts a dimensionSelector into the aggregation {@link #getDimensionSelectors dimensionSelectors}.","!type":"fn(oDimensionSelector: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oDimensionSelector":"type: sap.ui.core.Control, description: The dimensionSelector to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the dimensionSelector should be inserted at; for a negative value of <code>iIndex<\/code>, the dimensionSelector is inserted at position 0; for a value greater than the current size of the aggregation, the dimensionSelector is inserted at the last position"},"!static":false},"firePersonalizationPress":{"!description":"Fires event {@link #event:personalizationPress personalizationPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setShowPersonalization":{"!description":"Sets a new value for property {@link #getShowPersonalization showPersonalization}.\n\nSet to true to display the personalization icon. Set to false to hide it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowPersonalization: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowPersonalization":"type: boolean, description: New value for property <code>showPersonalization<\/code>"},"!static":false},"removeDimensionSelector":{"!description":"Removes a dimensionSelector from the aggregation {@link #getDimensionSelectors dimensionSelectors}.","!type":"fn(vDimensionSelector: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vDimensionSelector":"type: int|string|sap.ui.core.Control, description: The dimensionSelector to remove or its index or id"},"!static":false},"updateChartContainer":{"!description":"Updates ChartContainer and re-renders all its contents.","!type":"fn() -> sap.suite.ui.commons.ChartContainer","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.ChartContainer","!category":"function","!static":false},"switchChart":{"!description":"Switches the currently viewed content (triggers re-rendering).","!type":"fn(chart: sap.ui.core.Control)","!category":"function","parameters":{"chart":"type: sap.ui.core.Control, description: The new content (Chart or Table) to be displayed"},"!static":false},"setShowSelectionDetails":{"!description":"Sets a new value for property {@link #getShowSelectionDetails showSelectionDetails}.\n\nSet to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSelectionDetails: Boolean) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"bShowSelectionDetails":"type: boolean, description: New value for property <code>showSelectionDetails<\/code>"},"!static":false},"attachCustomZoomInPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:customZoomInPress customZoomInPress} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself.\n\nCustom event for zoom in.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ChartContainer<\/code> itself"},"!static":false},"getShowFullScreen":{"!description":"Gets current value of property {@link #getShowFullScreen showFullScreen}.\n\nSet to true to display the full screen icon. Set to false to hide it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getDimensionSelectors":{"!description":"Gets content of aggregation {@link #getDimensionSelectors dimensionSelectors}.\n\nDimension Selects.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getShowLegend":{"!description":"Gets current value of property {@link #getShowLegend showLegend}.\n\nSet to true to display the charts' legends. Set to false to hide them. See also showLegendButton.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeCustomIcon":{"!description":"Removes a customIcon from the aggregation {@link #getCustomIcons customIcons}.","!type":"fn(vCustomIcon: Number | String | sap.ui.core.Icon) -> sap.ui.core.Icon","!category":"function","parameters":{"vCustomIcon":"type: int|string|sap.ui.core.Icon, description: The customIcon to remove or its index or id"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"detachContentChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:contentChange contentChange} event of this <code>sap.suite.ui.commons.ChartContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getShowPersonalization":{"!description":"Gets current value of property {@link #getShowPersonalization showPersonalization}.\n\nSet to true to display the personalization icon. Set to false to hide it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAutoAdjustHeight":{"!description":"Gets current value of property {@link #getAutoAdjustHeight autoAdjustHeight}.\n\nDetermine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addDimensionSelector":{"!description":"Adds some dimensionSelector to the aggregation {@link #getDimensionSelectors dimensionSelectors}.","!type":"fn(oDimensionSelector: sap.ui.core.Control) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oDimensionSelector":"type: sap.ui.core.Control, description: The dimensionSelector to add; if empty, nothing is inserted"},"!static":false},"fireCustomZoomOutPress":{"!description":"Fires event {@link #event:customZoomOutPress customZoomOutPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyToolbar":{"!description":"Destroys the toolbar in the aggregation {@link #getToolbar toolbar}.","!type":"fn() -> sap.suite.ui.commons.ChartContainer","!category":"function","!static":false},"getSelectorGroupLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar.<br>Gets current value of property {@link #getSelectorGroupLabel selectorGroupLabel}.\n\nCustom Label for Selectors Group.","!type":"fn() -> String","!category":"function","!static":false},"addCustomIcon":{"!description":"Adds some customIcon to the aggregation {@link #getCustomIcons customIcons}.","!type":"fn(oCustomIcon: sap.ui.core.Icon) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oCustomIcon":"type: sap.ui.core.Icon, description: The customIcon to add; if empty, nothing is inserted"},"!static":false},"!description":"Provides a toolbar with generic functions for tables and charts based on the VizFrame control like zoom, display in fullscreen mode, toggle the legend, switch between chart types, and changes of the chart dimension. The controls of the content aggregation are positioned below the toolbar. Additional functions can be added to the toolbar with the customIcons aggregation.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.ChartContainerContent, iIndex: Number) -> sap.suite.ui.commons.ChartContainer","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.ChartContainerContent, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"getScrollDelegate":{"!description":"Returns the current instance of the delegate to other controls.","!type":"fn() -> sap.ui.core.delegate.ScrollEnablement","!category":"function","!static":false},"getShowSelectionDetails":{"!description":"Gets current value of property {@link #getShowSelectionDetails showSelectionDetails}.\n\nSet to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getFullScreen":{"!description":"Gets current value of property {@link #getFullScreen fullScreen}.\n\nDisplay the chart and the toolbar in full screen or normal mode.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ChartContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getSelectedContent":{"!description":"Returns the currently selected content control.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false}},"sap.suite.ui.commons.NoteTaker_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTaker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.NoteTaker"},"sap.suite.ui.commons.ProcessFlowConnectionLabel":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nSpecifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowConnectionLabelState","!category":"function","!static":false},"!description":"This control is used inside the ProcessFlow control providing information on connections. Using this control, you need to take care of the lifetime handling instance as instances of this control are not destroyed automatically.","getPriority":{"!description":"Gets current value of property {@link #getPriority priority}.\n\nPriority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnectionLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nSpecifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -> Positive -> Critical -> Negative.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sState: sap.suite.ui.commons.ProcessFlowConnectionLabelState) -> sap.suite.ui.commons.ProcessFlowConnectionLabel","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.ProcessFlowConnectionLabelState, description: New value for property <code>state<\/code>"},"!static":false},"setPriority":{"!description":"Sets a new value for property {@link #getPriority priority}.\n\nPriority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iPriority: Number) -> sap.suite.ui.commons.ProcessFlowConnectionLabel","!category":"function","parameters":{"iPriority":"type: int, description: New value for property <code>priority<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ProcessFlowConnectionLabel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPriority priority} : int (default: 0)<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowConnectionLabelState (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","!module":"sap/suite/ui/commons/ProcessFlowConnectionLabel","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ProcessFlowConnectionLabel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.Button","!helpDescription":"This control is used inside the ProcessFlow control providing information on connections. Using this control, you need to take care of the lifetime handling instance as instances of this control are not destroyed automatically."},"sap.suite.ui.commons.MicroProcessFlow":{"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.","!type":"fn() -> String","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.MicroProcessFlowItem) -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.MicroProcessFlowItem, description: The content to add; if empty, nothing is inserted"},"!static":false},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAriaLabel: String) -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.MicroProcessFlowItem]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nHolds the nodes and other content diplayed in the micro process flow.","!type":"fn() -> [sap.suite.ui.commons.MicroProcessFlowItem]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.suite.ui.commons.MicroProcessFlowItem<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.suite.ui.commons.MicroProcessFlowItem) -> Number","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.MicroProcessFlowItem, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.suite.ui.commons.MicroProcessFlowItem) -> sap.suite.ui.commons.MicroProcessFlowItem","!category":"function","parameters":{"vContent":"type: int|string|sap.suite.ui.commons.MicroProcessFlowItem, description: The content to remove or its index or id"},"!static":false},"getRenderType":{"!description":"Gets current value of property {@link #getRenderType renderType}.\n\nDetermines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.\n\nDefault value is <code>Wrap<\/code>.","!type":"fn() -> sap.suite.ui.commons.MicroProcessFlowRenderType","!category":"function","!static":false},"!constructorDescription":"Constructor for a new MicroProcessFlow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<li>{@link #getRenderType renderType} : sap.suite.ui.commons.MicroProcessFlowRenderType (default: Wrap)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.suite.ui.commons.MicroProcessFlowItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/MicroProcessFlow","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.MicroProcessFlowItem, iIndex: Number) -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.MicroProcessFlowItem, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!description":"The MicroProcessFlow control can be used to track the progress of a process.<br> It is best used for linear processes, such as document, order, and approval flows, and can be embedded in tiles, tables, and other containers.<br> <br> To display more complex processes and workflows, use {@link sap.suite.ui.commons.ProcessFlow} instead.","!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the micro process flow.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the micro process flow.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setRenderType":{"!description":"Sets a new value for property {@link #getRenderType renderType}.\n\nDetermines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Wrap<\/code>.","!type":"fn(sRenderType: sap.suite.ui.commons.MicroProcessFlowRenderType) -> sap.suite.ui.commons.MicroProcessFlow","!category":"function","parameters":{"sRenderType":"type: sap.suite.ui.commons.MicroProcessFlowRenderType, description: New value for property <code>renderType<\/code>"},"!static":false},"!helpDescription":"The MicroProcessFlow control can be used to track the progress of a process.<br> It is best used for linear processes, such as document, order, and approval flows, and can be embedded in tiles, tables, and other containers.<br> <br> To display more complex processes and workflows, use {@link sap.suite.ui.commons.ProcessFlow} instead.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroProcessFlow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.JamContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.FeedContent.<br>This control displays the jam content text, subheader, and numeric value in a tile.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.JamContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FeedContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new JamContent.","!module":"sap/suite/ui/commons/JamContent","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.JamContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.FeedContent","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.FeedContent.<br>This control displays the jam content text, subheader, and numeric value in a tile."},"sap.suite.ui.commons.util.ManagedObjectRegister":{"destroyObject":{"!description":"Destroys an object and removes it from the registry.","!type":"fn(sKey: String)","!category":"function","parameters":{"sKey":"type: string, description: Key of the object."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.ManagedObjectRegister with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isObjectInitialized":{"!description":"Returns true if there is the object registered and created. If there is not triggered factory function, returns false.","!type":"fn(sKey?: String) -> Boolean","!category":"function","parameters":{"sKey":"type: string, description: Key of the object."},"!static":false},"!constructorDescription":"Creates an object registry for storing references to managed objects.","!module":"sap/suite/ui/commons/util/ManagedObjectRegister","register":{"!description":"Registers an object. Registry will automatically create a getter for the object.","!type":"fn(sKey: String, oFactoryFunction: fn() | sap.ui.base.ManagedObject)","!category":"function","parameters":{"oFactoryFunction":"type: function|sap.ui.base.ManagedObject, description: A managed object to register or a factory function which can build the object. Factory function can be used for lazy loading of the object. Register will pass sKey to the function, so it can be shared for more objects.","sKey":"type: string, description: Key of the object. Should start with capital letter."},"!static":false},"!description":"A registry which keeps a set of managed objects and allows you to lazy load them and destroy them at once. A lot of controls keep those object as private properties and destroies them one by one. Instead you can just use: <pre><code>\nthis._objectRegister = new ManagedObjectRegister();\nthis._objectRegister.register(\"Button\", function() {\n return new Button(...);\n});\n\nthis._objectRegister.getButton()...\n\nthis._objectRegister.destroyAll();\n<\/code><\/pre>","!category":"class","destroyAll":{"!description":"Destroys all objects in the registry and removes it's definition.","!type":"fn()","!category":"function","!static":false},"!helpDescription":"A registry which keeps a set of managed objects and allows you to lazy load them and destroy them at once. A lot of controls keep those object as private properties and destroies them one by one. Instead you can just use: <pre><code>\nthis._objectRegister = new ManagedObjectRegister();\nthis._objectRegister.register(\"Button\", function() {\n return new Button(...);\n});\n\nthis._objectRegister.getButton()...\n\nthis._objectRegister.destroyAll();\n<\/code><\/pre>","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.util.ManagedObjectRegister.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getObject":{"!description":"Returns a stored object. If called without parameters it will return object registered with key \"Object\".","!type":"fn(sKey?: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sKey":"type: string, description: Key of the object."},"!static":false}},"sap.suite.ui.commons.InfoTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.InfoTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.InfoTile"},"sap.suite.ui.commons.imageeditor.CustomSizeItem":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CustomSizeItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDefines the label of the <code>CustomSizeItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new CustomSizeItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : float (default: 0)<\/li>\n<li>{@link #getHeight height} : float (default: 0)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getRelative relative} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/imageeditor/CustomSizeItem","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the icon to be displayed in the <code>CustomSizeItem<\/code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDefines the label of the <code>CustomSizeItem<\/code>.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setRelative":{"!description":"Sets a new value for property {@link #getRelative relative}.\n\nSpecifies whether the <code>width<\/code> and <code>height<\/code> properties use relative values (<code>true<\/code>) or absolute values (<code>false<\/code>). <br>When used in the <code>customResizeItems<\/code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>. <br>When used in the <code>customRectangleCropItems<\/code> or <code>customEllipseCropItems<\/code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bRelative: Boolean) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"bRelative":"type: boolean, description: New value for property <code>relative<\/code>"},"!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\n* Defines the height of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"A <code>CustomSizeItem<\/code> can be used in the {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer} aggregations to define custom items on the Resize, Crop Rectangle, and Crop Ellipse panels.","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\n* Defines the height of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fHeight: Number) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"fHeight":"type: float, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the icon to be displayed in the <code>CustomSizeItem<\/code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fWidth: Number) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"fWidth":"type: float, description: New value for property <code>width<\/code>"},"!static":false},"!helpDescription":"A <code>CustomSizeItem<\/code> can be used in the {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer} aggregations to define custom items on the Resize, Crop Rectangle, and Crop Ellipse panels.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.CustomSizeItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getRelative":{"!description":"Gets current value of property {@link #getRelative relative}.\n\nSpecifies whether the <code>width<\/code> and <code>height<\/code> properties use relative values (<code>true<\/code>) or absolute values (<code>false<\/code>). <br>When used in the <code>customResizeItems<\/code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>. <br>When used in the <code>customRectangleCropItems<\/code> or <code>customEllipseCropItems<\/code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.suite.ui.commons.taccount.TAccount_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccount with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.taccount.TAccount"},"sap.suite.ui.commons.BusinessCard":{"getSecondTitle":{"!description":"Gets current value of property {@link #getSecondTitle secondTitle}.\n\nA short text line that describes this BusinessCard.","!type":"fn() -> String","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content of the BusinessCard body must be provided by the application developer.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getFirstTitle":{"!description":"Gets content of aggregation {@link #getFirstTitle firstTitle}.\n\nAny control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nTitle of the BusinessCard that describes its type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BusinessCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setSecondTitle":{"!description":"Sets a new value for property {@link #getSecondTitle secondTitle}.\n\nA short text line that describes this BusinessCard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSecondTitle: String) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"sSecondTitle":"type: string, description: New value for property <code>secondTitle<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new BusinessCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getIconPath iconPath} : sap.ui.core.URI<\/li>\n<li>{@link #getSecondTitle secondTitle} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getImageTooltip imageTooltip} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getFirstTitle firstTitle} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"!module":"sap/suite/ui/commons/BusinessCard","getIconPath":{"!description":"Gets current value of property {@link #getIconPath iconPath}.\n\nA path to the BusinessCard icon.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setIconPath":{"!description":"Sets a new value for property {@link #getIconPath iconPath}.\n\nA path to the BusinessCard icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconPath: sap.ui.core.URI) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"sIconPath":"type: sap.ui.core.URI, description: New value for property <code>iconPath<\/code>"},"!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.BusinessCard","!category":"function","!static":false},"getType":{"!description":"Gets current value of property {@link #getType type}.\n\nTitle of the BusinessCard that describes its type.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to display business card information including an image, first title (either URL link or text), second title, and multiple text lines.","setFirstTitle":{"!description":"Sets the aggregated {@link #getFirstTitle firstTitle}.","!type":"fn(oFirstTitle: sap.ui.core.Control) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"oFirstTitle":"type: sap.ui.core.Control, description: The firstTitle to set"},"!static":false},"setImageTooltip":{"!description":"Sets a new value for property {@link #getImageTooltip imageTooltip}.\n\nA tooltip that is set for an image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImageTooltip: String) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"sImageTooltip":"type: string, description: New value for property <code>imageTooltip<\/code>"},"!static":false},"destroyFirstTitle":{"!description":"Destroys the firstTitle in the aggregation {@link #getFirstTitle firstTitle}.","!type":"fn() -> sap.suite.ui.commons.BusinessCard","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.BusinessCard","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getImageTooltip":{"!description":"Gets current value of property {@link #getImageTooltip imageTooltip}.\n\nA tooltip that is set for an image.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.BusinessCard.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to display business card information including an image, first title (either URL link or text), second title, and multiple text lines.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.NumericTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NumericTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.NumericTile"},"sap.suite.ui.commons.CalculationBuilderLogicalOperatorType":{"!description":"Logical operators supported by the calculation builder.","XOR":{"!description":"Exclusive disjunction.","!type":"String","!category":"enum"},"NOT":{"!description":"Negation.","!type":"String","!category":"enum"},"AND":{"!description":"Logical conjunction.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library","OR":{"!description":"Logical disjunction.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.networkgraph.ElementStatus":{"Information":{"!description":"A node type that communicates information.","!type":"String","!category":"enum"},"Standard":{"!description":"A standard node","!type":"String","!category":"enum"},"!description":"Semantic type of the node status.","!category":"static class","Warning":{"!description":"A node type that communicates a warning.","!type":"String","!category":"enum"},"Success":{"!description":"A node type that communicates success.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Error":{"!description":"A node type that communicates an error.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout":{"getCharge":{"!description":"Gets current value of property {@link #getCharge charge}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}\n\nDefault value is <code>-30<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setMaximumDuration":{"!description":"Sets a new value for property {@link #getMaximumDuration maximumDuration}.\n\nSpecifies the maximal time in miliseconds the algorithm is allowed to run.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!type":"fn(iMaximumDuration: Number) -> sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout","!category":"function","parameters":{"iMaximumDuration":"type: int, description: New value for property <code>maximumDuration<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new ForceBasedLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAlpha alpha} : float (default: 0.3)<\/li>\n<li>{@link #getCharge charge} : float (default: -30)<\/li>\n<li>{@link #getFriction friction} : float (default: 0.9)<\/li>\n<li>{@link #getMaximumDuration maximumDuration} : int (default: 1000)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm#constructor sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/layout/ForceBasedLayout","getFriction":{"!description":"Gets current value of property {@link #getFriction friction}.\n\nValue in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}\n\nDefault value is <code>0.9<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getMaximumDuration":{"!description":"Gets current value of property {@link #getMaximumDuration maximumDuration}.\n\nSpecifies the maximal time in miliseconds the algorithm is allowed to run.\n\nDefault value is <code>1000<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"This algorithm uses D3.force algorithm to layout the graph. It's good if the graph is too complicated and LayeredLayout is not sufficient.","getAlpha":{"!description":"Gets current value of property {@link #getAlpha alpha}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}\n\nDefault value is <code>0.3<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"isLayered":{"!description":"Specifies if this layouting algorithm distributes nodes into layers. Parent graph may change behaviour based on this option.","!type":"fn() -> Boolean","!category":"function","!static":false},"layout":{"!description":"Executes the layouting algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","setCharge":{"!description":"Sets a new value for property {@link #getCharge charge}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-30<\/code>.","!type":"fn(fCharge: Number) -> sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout","!category":"function","parameters":{"fCharge":"type: float, description: New value for property <code>charge<\/code>"},"!static":false},"getLayoutRenderType":{"!description":"Gets the type of the layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"setAlpha":{"!description":"Sets a new value for property {@link #getAlpha alpha}.\n\nSee: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.3<\/code>.","!type":"fn(fAlpha: Number) -> sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout","!category":"function","parameters":{"fAlpha":"type: float, description: New value for property <code>alpha<\/code>"},"!static":false},"setFriction":{"!description":"Sets a new value for property {@link #getFriction friction}.\n\nValue in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.9<\/code>.","!type":"fn(fFriction: Number) -> sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout","!category":"function","parameters":{"fFriction":"type: float, description: New value for property <code>friction<\/code>"},"!static":false},"!helpDescription":"This algorithm uses D3.force algorithm to layout the graph. It's good if the graph is too complicated and LayeredLayout is not sufficient.","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ChartContainerContent":{"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nChart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainerContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getSelectionDetails":{"!description":"Getter for the Selection Details facade.","!type":"fn() -> sap.m.SelectionDetailsFacade","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ChartContainerContent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.ChartContainerContent","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"!module":"sap/suite/ui/commons/ChartContainerContent","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon of the Chart.","!type":"fn() -> String","!category":"function","!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.ChartContainerContent","!category":"function","!static":false},"!description":"Content aggregation for ChartContainer.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the Chart/Table\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.ChartContainerContent","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the Chart/Table","!type":"fn() -> String","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon of the Chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.ChartContainerContent","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"!helpDescription":"Content aggregation for ChartContainer.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ChartContainerContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.layout.LayoutTask":{"!description":"A layout task is a wrapper around Promise which allows the caller to terminate the task. A terminated layout task should not modify the graph associated with it.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutTask with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new LayoutTask.","!module":"sap/suite/ui/commons/networkgraph/layout/LayoutTask","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayoutTask.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"A layout task is a wrapper around Promise which allows the caller to terminate the task. A terminated layout task should not modify the graph associated with it."},"sap.suite.ui.commons.KpiTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.KpiTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.KpiTile"},"sap.suite.ui.commons.networkgraph.util.Dijkstra":{"!description":"This algorithm uses Dijkstra's algorithm to compute the shortest possible paths from the starting point node to all other nodes in the graph and arrange them accordingly.","getShortestPathTo":{"!description":"Retrieves the shortest path to the given node. Due to the nature of the algorithm, the path is returned in reversed order. In most cases, each line has to be processed anyway, so the order is not important. However, if you need to retrieve lines in the direct order, you can use the <code>Array.reverse()<\/code> method.","!type":"fn(oToNode: sap.suite.ui.commons.networkgraph.Node) -> [sap.suite.ui.commons.networkgraph.Line]","!category":"function","parameters":{"oToNode":"type: sap.suite.ui.commons.networkgraph.Node, description: Node to find shortest path to."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a new Dijkstra's algorithm. The constructor computes the shortest paths to all nodes in the network graph from given\nstarting point node.","!module":"sap/suite/ui/commons/networkgraph/util/Dijkstra","!proto":"sap.ui.base.Object","!helpDescription":"This algorithm uses Dijkstra's algorithm to compute the shortest possible paths from the starting point node to all other nodes in the graph and arrange them accordingly."},"sap.suite.ui.commons.imageeditor.FilterHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.FilterHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.FilterHistoryItem"},"sap.suite.ui.commons.MicroProcessFlowItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlowItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MicroProcessFlowItem"},"sap.suite.ui.commons.ThingCollection":{"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.ux3.ThingViewer) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"oContent":"type: sap.ui.ux3.ThingViewer, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.ux3.ThingViewer]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer.","!type":"fn() -> [sap.ui.ux3.ThingViewer]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThingCollection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.ux3.ThingViewer<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.ux3.ThingViewer) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.ux3.ThingViewer, description: The content whose index is looked for"},"!static":false},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nThe minimal width of the control.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.ux3.ThingViewer) -> sap.ui.ux3.ThingViewer","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.ux3.ThingViewer, description: The content to remove or its index or id"},"!static":false},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nThe minimal width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ThingCollection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.ux3.ThingViewer[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/ThingCollection","setMinHeight":{"!description":"Sets a new value for property {@link #getMinHeight minHeight}.\n\nThe minimal height of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMinHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"},"!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.ThingCollection","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.ux3.ThingViewer, iIndex: Number) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"oContent":"type: sap.ui.ux3.ThingViewer, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control contains a collection of the sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer. It allows you to navigate through them as well as delete them from the collection.","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.ThingCollection","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getMinHeight":{"!description":"Gets current value of property {@link #getMinHeight minHeight}.\n\nThe minimal height of the control.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control contains a collection of the sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer. It allows you to navigate through them as well as delete them from the collection.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ThingCollection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.GenericTile2X2_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.GenericTile2X2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.GenericTile2X2"},"sap.suite.ui.commons.LaunchTile":{"setLink":{"!description":"Sets a new value for property {@link #getLink link}.\n\nThe launch destination.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLink: sap.ui.core.URI) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"sLink":"type: sap.ui.core.URI, description: New value for property <code>link<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.LaunchTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getLink":{"!description":"Gets current value of property {@link #getLink link}.\n\nThe launch destination.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!constructorDescription":"Constructor for a new LaunchTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLink link} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/LaunchTile","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.LaunchTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.LaunchTile<\/code> itself.\n\nThe event fired when the user clicks on the control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.LaunchTile<\/code> itself"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon associated with the launch destination.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 Deprecated.<br>This control launches a URL.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nDescriptive title of the launch destination.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nDescriptive title of the launch destination.","!type":"fn() -> String","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon associated with the launch destination.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.LaunchTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.LaunchTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 Deprecated.<br>This control launches a URL.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.LaunchTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.layout.SwimLaneChainLayout_obj":{"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.SwimLaneChainLayout"},"sap.suite.ui.commons.HeaderContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.HeaderContainer"},"sap.suite.ui.commons.ComparisonData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChartData.<br>Comparison tile value holder.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ComparisonData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ComparisonData.","!module":"sap/suite/ui/commons/ComparisonData","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ComparisonData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.ComparisonMicroChartData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChartData.<br>Comparison tile value holder."},"sap.suite.ui.commons.VerticalNavigationBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.VerticalNavigationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.NavigationBar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.VerticalNavigationBar"},"sap.suite.ui.commons.TimelineAxisOrientation":{"!description":"Defines the orientation of the timeline axis.","Vertical":{"!description":"Vertical timeline.","!type":"String","!category":"enum"},"!category":"static class","Horizontal":{"!description":"Horizontal timeline.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout"},"sap.suite.ui.commons.FacetOverview":{"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachHeightChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:heightChange heightChange} event of this <code>sap.suite.ui.commons.FacetOverview<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FacetOverview<\/code> itself.\n\nThis event is fired when a new value to the heightType or height property is set.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview<\/code> itself"},"!static":false},"!module":"sap/suite/ui/commons/FacetOverview","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.FacetOverview","!category":"function","!static":false},"getHeight":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.1 This property was replaced by heightType property.<br>Gets current value of property {@link #getHeight height}.\n\nDefines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.\n\nDefault value is <code>10rem<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getHeightType":{"!description":"Gets current value of property {@link #getHeightType heightType}.\n\nIndicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.suite.ui.commons.FacetOverviewHeight","!category":"function","!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThis property is shown in the upper left part of control.","!type":"fn() -> String","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nDefines the width of the control. By default, the value is empty and the control inhertis the size from its content.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nDefines the width of the control. By default, the value is empty and the control inhertis the size from its content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getRowSpan":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.1 It is not used any more for the laoyut calculations in UnifiedThingInspector.<br>Gets current value of property {@link #getRowSpan rowSpan}.\n\nDefines the number of rows that the control represents in an external layout.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content that appears in the left part of the control.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FacetOverview with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setRowSpan":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.1 It is not used any more for the laoyut calculations in UnifiedThingInspector.<br>Sets a new value for property {@link #getRowSpan rowSpan}.\n\nDefines the number of rows that the control represents in an external layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iRowSpan: Number) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"iRowSpan":"type: int, description: New value for property <code>rowSpan<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new FacetOverview.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getQuantity quantity} : int (default: -1)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 10rem)<\/li>\n<li>{@link #getRowSpan rowSpan} : int (default: 1)<\/li>\n<li>{@link #getHeightType heightType} : sap.suite.ui.commons.FacetOverviewHeight (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:heightChange heightChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireHeightChange":{"!description":"Fires event {@link #event:heightChange heightChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.FacetOverview<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.FacetOverview<\/code> itself.\n\nThe event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.FacetOverview<\/code> itself"},"!static":false},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"detachHeightChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:heightChange heightChange} event of this <code>sap.suite.ui.commons.FacetOverview<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setHeightType":{"!description":"Sets a new value for property {@link #getHeightType heightType}.\n\nIndicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sHeightType: sap.suite.ui.commons.FacetOverviewHeight) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"sHeightType":"type: sap.suite.ui.commons.FacetOverviewHeight, description: New value for property <code>heightType<\/code>"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control is used in UnifiedThingInspector to display the preview of the facet content.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThis property is shown in the upper left part of control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setHeight":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.1 This property was replaced by heightType property.<br>Sets a new value for property {@link #getHeight height}.\n\nDefines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10rem<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"getQuantity":{"!description":"Gets current value of property {@link #getQuantity quantity}.\n\nDisplays a label with the number of items in the right part of the control.\n\nDefault value is <code>-1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setQuantity":{"!description":"Sets a new value for property {@link #getQuantity quantity}.\n\nDisplays a label with the number of items in the right part of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!type":"fn(iQuantity: Number) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"iQuantity":"type: int, description: New value for property <code>quantity<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.FacetOverview<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.FacetOverview","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control is used in UnifiedThingInspector to display the preview of the facet content.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.FacetOverview.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.BulletChartData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BulletChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.BulletChartData"},"sap.suite.ui.commons.ProcessFlowDisplayState":{"HighlightedFocused":{"!description":"The control is in the combination of highlighted and focused display state","!type":"String","!category":"enum"},"RegularFocused":{"!description":"The control is in the combination of regular and focused display state","!type":"String","!category":"enum"},"Regular":{"!description":"The control is in the regular display state","!type":"String","!category":"enum"},"SelectedHighlightedFocused":{"!description":"The control is in the combination of selected, highlighted and focused display state","!type":"String","!category":"enum"},"Selected":{"!description":"The control is in the selected display state","!type":"String","!category":"enum"},"DimmedFocused":{"!description":"The control is in the combination of dimmed and focused display state","!type":"String","!category":"enum"},"Highlighted":{"!description":"The control is in highlighted display state","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","SelectedHighlighted":{"!description":"The control is in the combination of selected and highlighted display state","!type":"String","!category":"enum"},"!description":"The ProcessFlow calculates the ProcessFlowDisplayState based on the 'focused' and 'highlighted' properties of each node.","Dimmed":{"!description":"The control is in the dimmed state","!type":"String","!category":"enum"},"SelectedFocused":{"!description":"The control is in the combination of selected and focused display state","!type":"String","!category":"enum"},"!category":"static class"},"sap.suite.ui.commons.imageeditor.ResizeHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ResizeHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.ResizeHistoryItem"},"sap.suite.ui.commons.HeaderCellItem":{"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nInstance of UI5 Control that is used as content.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderCellItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new HeaderCellItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/HeaderCellItem","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.HeaderCellItem","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.HeaderCellItem","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of area to occupy by control.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44.0 The HeaderCellItem was deprecated because of the deprecation of HeaderCell. Please see HeaderCell for replacement advice.<br>Object that contains instance of control and information about height. It should be used inside sap.suite.ui.commons.HeaderCell","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of area to occupy by control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.HeaderCellItem","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44.0 The HeaderCellItem was deprecated because of the deprecation of HeaderCell. Please see HeaderCell for replacement advice.<br>Object that contains instance of control and information about height. It should be used inside sap.suite.ui.commons.HeaderCell","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.HeaderCellItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TimelineGroupType":{"Year":{"!description":"Data is grouped by year.","!type":"String","!category":"enum"},"Week":{"!description":"Data is grouped by week.","!type":"String","!category":"enum"},"!description":"Type of grouping for timeline entries.","Quarter":{"!description":"Data is grouped by quarter.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No grouping is used.","!type":"String","!category":"enum"},"Day":{"!description":"Data is grouped by day.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Month":{"!description":"Data is grouped by month.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.CalculationBuilderGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.CalculationBuilderGroup"},"sap.suite.ui.commons.ColumnMicroChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ColumnMicroChart"},"sap.suite.ui.commons.imageeditor.HistoryItem":{"!description":"Abstract base class for all {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history items.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.HistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!module":"sap/suite/ui/commons/imageeditor/HistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.HistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"Abstract base class for all {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history items."},"sap.suite.ui.commons.statusindicator.VerticalAlignmentType":{"Bottom":{"!description":"Bottom.","!type":"String","!category":"enum"},"Top":{"!description":"Top.","!type":"String","!category":"enum"},"!description":"The vertical alignment of the status indicator within its parent container.","Middle":{"!description":"Middle.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.taccount.TAccountGroup":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new TAccountGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAccounts accounts} : sap.suite.ui.commons.taccount.TAccount[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/taccount/TAccountGroup","removeAccount":{"!description":"Removes a account from the aggregation {@link #getAccounts accounts}.","!type":"fn(vAccount: Number | String | sap.suite.ui.commons.taccount.TAccount) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"vAccount":"type: int|string|sap.suite.ui.commons.taccount.TAccount, description: The account to remove or its index or id"},"!static":false},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the group should appear as collapsed. By default, it appears as expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCollapsed: Boolean) -> sap.suite.ui.commons.taccount.TAccountGroup","!category":"function","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"},"!static":false},"!description":"The T account group control displays debit and credit entries for all {@link sap.suite.ui.commons.TAccount} controls included in the group.","destroyAccounts":{"!description":"Destroys all the accounts in the aggregation {@link #getAccounts accounts}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccountGroup","!category":"function","!static":false},"insertAccount":{"!description":"Inserts a account into the aggregation {@link #getAccounts accounts}.","!type":"fn(oAccount: sap.suite.ui.commons.taccount.TAccount, iIndex: Number) -> sap.suite.ui.commons.taccount.TAccountGroup","!category":"function","parameters":{"oAccount":"type: sap.suite.ui.commons.taccount.TAccount, description: The account to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the account should be inserted at; for a negative value of <code>iIndex<\/code>, the account is inserted at position 0; for a value greater than the current size of the aggregation, the account is inserted at the last position"},"!static":false},"getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the group should appear as collapsed. By default, it appears as expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.taccount.TAccountGroup","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"addAccount":{"!description":"Adds some account to the aggregation {@link #getAccounts accounts}.","!type":"fn(oAccount: sap.suite.ui.commons.taccount.TAccount) -> sap.suite.ui.commons.taccount.TAccountGroup","!category":"function","parameters":{"oAccount":"type: sap.suite.ui.commons.taccount.TAccount, description: The account to add; if empty, nothing is inserted"},"!static":false},"indexOfAccount":{"!description":"Checks for the provided <code>sap.suite.ui.commons.taccount.TAccount<\/code> in the aggregation {@link #getAccounts accounts}. and returns its index if found or -1 otherwise.","!type":"fn(oAccount: sap.suite.ui.commons.taccount.TAccount) -> Number","!category":"function","parameters":{"oAccount":"type: sap.suite.ui.commons.taccount.TAccount, description: The account whose index is looked for"},"!static":false},"!category":"class","getAccounts":{"!description":"Gets content of aggregation {@link #getAccounts accounts}.\n\nT accounts included in the group.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccount]","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the group.","!type":"fn() -> String","!category":"function","!static":false},"removeAllAccounts":{"!description":"Removes all the controls from the aggregation {@link #getAccounts accounts}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccount]","!category":"function","!static":false},"!helpDescription":"The T account group control displays debit and credit entries for all {@link sap.suite.ui.commons.TAccount} controls included in the group.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.imageeditor.FlipHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.FlipHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.FlipHistoryItem"},"sap.suite.ui.commons.networkgraph":{"to":{"!description":"Key of the node the line leads to.","!type":"String","!category":"enum"},"showExpandButton":{"!description":"Determines if the expand button is visible.","!type":"Boolean","!category":"enum"},"ActionButtonPosition":"sap.suite.ui.commons.networkgraph.ActionButtonPosition","descriptionLineSize":{"!description":"Determines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1<\/code> (default). To display an unlimited number of lines, set this property to <code>0<\/code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.","!type":"Number","!category":"enum"},"LineArrowOrientation":"sap.suite.ui.commons.networkgraph.LineArrowOrientation","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"minWidth":{"!description":"Minimal width of the group (swim lane) for the <code>SwimLanes<\/code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.","!type":"Number","!category":"enum"},"backgroundColor":{"!description":"Fill color.<br> The fill color that is applied to nodes and lines that are in this custom status.","!type":"String","!category":"enum"},"enableWheelZoom":{"!description":"Enables zooming in or out using the mouse wheel, while holding down the Ctrl key.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"labelStatus":{"!description":"Name of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.","!type":"String","!category":"enum"},"GraphMap":"sap.suite.ui.commons.networkgraph.GraphMap_obj","Group":"sap.suite.ui.commons.networkgraph.Group_obj","height":{"!description":"Height of the image.","!type":"Number","!category":"enum"},"description":{"!description":"Description.","!type":"String","!category":"enum"},"hoverBackgroundColor":{"!description":"Fill color on hover.<br> The fill color of a custom status node, line, or group when you hover over it.","!type":"String","!category":"enum"},"maxWidth":{"!description":"Maximum width allowed. The auto grow algorithm stops increasing the width at this value.","!type":"Number","!category":"enum"},"Graph":"sap.suite.ui.commons.networkgraph.Graph_obj","value":{"!description":"Value of the attribute. If set to null, the value is not displayed.","!type":"String","!category":"enum"},"selectedContentColor":{"!description":"Content color when selected. Color of the content (text or icon) inside the custom status node when you select it.","!type":"String","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"directRenderNodeLimit":{"!description":"This property affects the threshold at which the renderer switches from link rendering to direct graph rendering. Rendering using xlink is much faster, but with larger graphs it may slow down the browser performance. Modify this property with care. Please also keep in mind that a graph map that is rendered directly does not adapt to changes until it's fully rerendered.","!type":"Number","!category":"enum"},"key":{"!description":"key : String","!type":"String","!category":"enum"},"HeaderCheckboxState":"sap.suite.ui.commons.networkgraph.HeaderCheckboxState","contentColor":{"!description":"Color of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status.","!type":"String","!category":"enum"},"enabled":{"!description":"Indicates whether the action button is enabled.","!type":"Boolean","!category":"enum"},"orientation":{"!description":"Orientation of the graph flow. This property is used by layout algorithms.","!type":"sap.suite.ui.commons.networkgraph.Orientation","!category":"enum"},"noDataText":{"!description":"Text displayed when no data is set. <br> This property takes effect only when the <code>noData<\/code> property is set to <code>true<\/code>.","!type":"String","!category":"enum"},"status":{"!description":"Status associated with this element. You can use any of the custom statuses defined by the <code>statuses<\/code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.","!type":"String","!category":"enum"},"showDetailButton":{"!description":"Determines if the details button is visible.","!type":"Boolean","!category":"enum"},"selectedBackgroundColor":{"!description":"Fill color when selected.<br> The fill color of a custom status node, line, or group when you select it.","!type":"String","!category":"enum"},"width":{"!description":"Width of the image.","!type":"Number","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"backgroundImage":{"!description":"An image to be rendered on the background.","!type":"sap.ui.core.URI","!category":"enum"},"label":{"!description":"Label of the attribute. If set to null, the label is not displayed.","!type":"String","!category":"enum"},"shape":{"!description":"Shape of the node. The shape is round by default. To create a rectangular node, set this property to Box.","!type":"sap.suite.ui.commons.networkgraph.NodeShape","!category":"enum"},"collapsed":{"!description":"Defines if the subtree of this node is collapsed. By default, it is expanded.","!type":"Boolean","!category":"enum"},"ElementBase":"sap.suite.ui.commons.networkgraph.ElementBase_obj","hoverContentColor":{"!description":"Content color on hover. Color of the content (text or icon) inside the custom status node when you hover over it.","!type":"String","!category":"enum"},"NodeImage":"sap.suite.ui.commons.networkgraph.NodeImage_obj","coreNodeSize":{"!description":"Determines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.","!type":"Number","!category":"enum"},"iconSize":{"!description":"Determines the size of the node's icon. This property can be applied only to circular nodes.","!type":"Number","!category":"enum"},"Node":"sap.suite.ui.commons.networkgraph.Node_obj","borderWidth":{"!description":"Border width of the element in specific units (for example 2px).","!type":"sap.ui.core.CSSSize","!category":"enum"},"Coordinate":"sap.suite.ui.commons.networkgraph.Coordinate_obj","NodeShape":"sap.suite.ui.commons.networkgraph.NodeShape","util":"sap.suite.ui.commons.networkgraph.util","renderType":{"!description":"Nodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.","!type":"sap.suite.ui.commons.networkgraph.RenderType","!category":"enum"},"position":{"!description":"Position of the action button.","!type":"sap.suite.ui.commons.networkgraph.ActionButtonPosition","!category":"enum"},"borderStyle":{"!description":"Style of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray<\/code>.","!type":"String","!category":"enum"},"SvgBase":"sap.suite.ui.commons.networkgraph.SvgBase_obj","borderColor":{"!description":"Border color.<br> The border color that is applied to nodes in this custom status.","!type":"String","!category":"enum"},"arrowPosition":{"!description":"Position of the arrow on the line. Can be set to End, Middle, or Start.","!type":"sap.suite.ui.commons.networkgraph.LineArrowPosition","!category":"enum"},"headerCheckBoxState":{"!description":"Defines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.","!type":"sap.suite.ui.commons.networkgraph.HeaderCheckboxState","!category":"enum"},"LayoutRenderType":"sap.suite.ui.commons.networkgraph.LayoutRenderType","ActionButton":"sap.suite.ui.commons.networkgraph.ActionButton_obj","arrowOrientation":{"!description":"Orientation of the line that defines the direction of the arrow.","!type":"sap.suite.ui.commons.networkgraph.LineArrowOrientation","!category":"enum"},"enableZoom":{"!description":"If this property is set to <code>false<\/code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.","!type":"Boolean","!category":"enum"},"hoverBorderColor":{"!description":"Border color on hover.<br> The border color of a custom status node when you hover over it.","!type":"String","!category":"enum"},"from":{"!description":"Key of the node where the line begins.","!type":"String","!category":"enum"},"BackgroundColor":"sap.suite.ui.commons.networkgraph.BackgroundColor","NodePlacement":"sap.suite.ui.commons.networkgraph.NodePlacement","lineType":{"!description":"Defines the appearance of the line. Can be set to solid, dashed, or dotted.","!type":"sap.suite.ui.commons.networkgraph.LineType","!category":"enum"},"ElementAttribute":"sap.suite.ui.commons.networkgraph.ElementAttribute_obj","selected":{"!description":"Shows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.","!type":"Boolean","!category":"enum"},"title":{"!description":"Title of the node.<br> The title that is applied to nodes that are in this custom status.","!type":"String","!category":"enum"},"titleLineSize":{"!description":"Determines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.","!type":"Number","!category":"enum"},"statusIcon":{"!description":"An additional status icon displayed when the node is collapsed.","!type":"String","!category":"enum"},"layout":"sap.suite.ui.commons.networkgraph.layout","useFocusColorAsContentColor":{"!description":"Defines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.","!type":"Boolean","!category":"enum"},"!category":"namespace","noData":{"!description":"Set this property to <code>true<\/code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.","!type":"Boolean","!category":"enum"},"blocked":{"!description":"Whether the control is currently in blocked state.","!type":"Boolean","!category":"enum"},"src":{"!description":"Relative or absolute path to the image file.","!type":"sap.ui.core.URI","!category":"enum"},"LineArrowPosition":"sap.suite.ui.commons.networkgraph.LineArrowPosition","legendColor":{"!description":"Color displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor<\/code> property is used.","!type":"String","!category":"enum"},"icon":{"!description":"An icon associated with the element.","!type":"String","!category":"enum"},"Orientation":"sap.suite.ui.commons.networkgraph.Orientation","showActionLinksButton":{"!description":"Determines if the links button is visible.","!type":"Boolean","!category":"enum"},"ElementStatus":"sap.suite.ui.commons.networkgraph.ElementStatus","stretchToCenter":{"!description":"Extends the line up to the node's horizontal or vertical axis to ensure that it meets the shape's outline even when a fancy shape is used.<br> Available for custom nodes only.","!type":"Boolean","!category":"enum"},"valueStatus":{"!description":"Name of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.","!type":"String","!category":"enum"},"headerContentColor":{"!description":"Color of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes.","!type":"String","!category":"enum"},"RenderType":"sap.suite.ui.commons.networkgraph.RenderType","LineType":"sap.suite.ui.commons.networkgraph.LineType","Status":"sap.suite.ui.commons.networkgraph.Status_obj","parentGroupKey":{"!description":"Key of the parent group. Can be used only with the <code>TwoColumns<\/code> layout.","!type":"String","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!type":"[String]","!category":"enum"},"selectedBorderColor":{"!description":"Border color when selected. The border color of a custom status node when you select it.","!type":"String","!category":"enum"},"group":{"!description":"Key of the group where this node is included.","!type":"String","!category":"enum"},"Line":"sap.suite.ui.commons.networkgraph.Line_obj","y":{"!description":"The y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.","!type":"Number","!category":"enum"},"x":{"!description":"The x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.","!type":"Number","!category":"enum"}},"sap.suite.ui.commons.MicroProcessFlowRenderType":{"NoWrap":{"!description":"The micro process flow nodes are not wrapped inside the parent container. <br>The nodes that do not fit into the width of the parent container are not displayed.","!type":"String","!category":"enum"},"!description":"Options that define how the micro process flow should be rendered inside its parent container. <br>These options can be useful when the width of the parent container does not allow for all nodes in the micro process flow to be displayed on the same line.","ScrollingWithResizer":{"!description":"Two scrolling icons are added to the parent container, with the number indicators updated automatically when you resize the browser window. <br>This option allows scrolling through the micro process flow, just as the <code>Scrolling<\/code> option does, but may slightly affect the performance. If using this render type affects your application's performance, consider using the <code>Scrolling<\/code> render type instead.","!type":"String","!category":"enum"},"!category":"static class","Scrolling":{"!description":"Two scrolling icons are added to the parent container, which allows navigation by scrolling through the micro process flow. <br>Please note that the numbers displayed next to the scrolling icons are not recalculated dynamically when you resize the browser window. If you want them to be recalculated, consider using the <code>ScrollingWithResizer<\/code> render type instead.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Wrap":{"!description":"The micro process flow nodes are wrapped inside the parent container.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.GenericTile2X2":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nThe load status.\n\nDefault value is <code>Loaded<\/code>.","!type":"fn() -> sap.suite.ui.commons.LoadState","!category":"function","!static":false},"setFailedText":{"!description":"Sets a new value for property {@link #getFailedText failedText}.\n\nThe message that appears when the control is in the Failed state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFailedText: String) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sFailedText":"type: string, description: New value for property <code>failedText<\/code>"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getSubheader":{"!description":"Gets current value of property {@link #getSubheader subheader}.\n\nThe subheader of the tile.","!type":"fn() -> String","!category":"function","!static":false},"setSubheader":{"!description":"Sets a new value for property {@link #getSubheader subheader}.\n\nThe subheader of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSubheader: String) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sSubheader":"type: string, description: New value for property <code>subheader<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/GenericTile2X2","getBackgroundImage":{"!description":"Gets current value of property {@link #getBackgroundImage backgroundImage}.\n\nThe URI of the background image.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getHeader":{"!description":"Gets current value of property {@link #getHeader header}.\n\nThe header of the tile.","!type":"fn() -> String","!category":"function","!static":false},"getIcon":{"!description":"Gets content of aggregation {@link #getIcon icon}.\n\nAn icon or image to be displayed in the control.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"removeTileContent":{"!description":"Removes a tileContent from the aggregation {@link #getTileContent tileContent}.","!type":"fn(vTileContent: Number | String | sap.suite.ui.commons.TileContent2X2) -> sap.suite.ui.commons.TileContent2X2","!category":"function","parameters":{"vTileContent":"type: int|string|sap.suite.ui.commons.TileContent2X2, description: The tileContent to remove or its index or id"},"!static":false},"indexOfTileContent":{"!description":"Checks for the provided <code>sap.suite.ui.commons.TileContent2X2<\/code> in the aggregation {@link #getTileContent tileContent}. and returns its index if found or -1 otherwise.","!type":"fn(oTileContent: sap.suite.ui.commons.TileContent2X2) -> Number","!category":"function","parameters":{"oTileContent":"type: sap.suite.ui.commons.TileContent2X2, description: The tileContent whose index is looked for"},"!static":false},"addTileContent":{"!description":"Adds some tileContent to the aggregation {@link #getTileContent tileContent}.","!type":"fn(oTileContent: sap.suite.ui.commons.TileContent2X2) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"oTileContent":"type: sap.suite.ui.commons.TileContent2X2, description: The tileContent to add; if empty, nothing is inserted"},"!static":false},"!category":"class","getFrameType":{"!description":"Gets current value of property {@link #getFrameType frameType}.\n\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>OneByOne<\/code>.","!type":"fn() -> sap.suite.ui.commons.FrameType","!category":"function","!static":false},"setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nThe load status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded<\/code>.","!type":"fn(sState: sap.suite.ui.commons.LoadState) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.LoadState, description: New value for property <code>state<\/code>"},"!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.suite.ui.commons.InfoTileSize","!category":"function","!static":false},"destroyIcon":{"!description":"Destroys the icon in the aggregation {@link #getIcon icon}.","!type":"fn() -> sap.suite.ui.commons.GenericTile2X2","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nThe size of the tile. If not set, then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sSize: sap.suite.ui.commons.InfoTileSize) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sSize":"type: sap.suite.ui.commons.InfoTileSize, description: New value for property <code>size<\/code>"},"!static":false},"setBackgroundImage":{"!description":"Sets a new value for property {@link #getBackgroundImage backgroundImage}.\n\nThe URI of the background image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.GenericTile2X2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"destroyTileContent":{"!description":"Destroys all the tileContent in the aggregation {@link #getTileContent tileContent}.","!type":"fn() -> sap.suite.ui.commons.GenericTile2X2","!category":"function","!static":false},"getImageDescription":{"!description":"Gets current value of property {@link #getImageDescription imageDescription}.\n\nDescription of a header image that is used in the tooltip.","!type":"fn() -> String","!category":"function","!static":false},"setImageDescription":{"!description":"Sets a new value for property {@link #getImageDescription imageDescription}.\n\nDescription of a header image that is used in the tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImageDescription: String) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sImageDescription":"type: string, description: New value for property <code>imageDescription<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new GenericTile2X2.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getFailedText failedText} : string<\/li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: Auto)<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI<\/li>\n<li>{@link #getFrameType frameType} : sap.suite.ui.commons.FrameType (default: OneByOne)<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: Loaded)<\/li>\n<li>{@link #getImageDescription imageDescription} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.suite.ui.commons.TileContent2X2[]<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeAllTileContent":{"!description":"Removes all the controls from the aggregation {@link #getTileContent tileContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.TileContent2X2]","!category":"function","!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.GenericTile2X2<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.GenericTile2X2<\/code> itself.\n\nThe event is fired when the user chooses the tile.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.GenericTile2X2<\/code> itself"},"!static":false},"setHeader":{"!description":"Sets a new value for property {@link #getHeader header}.\n\nThe header of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeader: String) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"},"!static":false},"setHeaderImage":{"!description":"Sets a new value for property {@link #getHeaderImage headerImage}.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeaderImage: sap.ui.core.URI) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sHeaderImage":"type: sap.ui.core.URI, description: New value for property <code>headerImage<\/code>"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The tile control that displays the title, description, and customizable main area.","insertTileContent":{"!description":"Inserts a tileContent into the aggregation {@link #getTileContent tileContent}.","!type":"fn(oTileContent: sap.suite.ui.commons.TileContent2X2, iIndex: Number) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the tileContent should be inserted at; for a negative value of <code>iIndex<\/code>, the tileContent is inserted at position 0; for a value greater than the current size of the aggregation, the tileContent is inserted at the last position","oTileContent":"type: sap.suite.ui.commons.TileContent2X2, description: The tileContent to insert; if empty, nothing is inserted"},"!static":false},"getFailedText":{"!description":"Gets current value of property {@link #getFailedText failedText}.\n\nThe message that appears when the control is in the Failed state.","!type":"fn() -> String","!category":"function","!static":false},"getHeaderImage":{"!description":"Gets current value of property {@link #getHeaderImage headerImage}.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getTileContent":{"!description":"Gets content of aggregation {@link #getTileContent tileContent}.\n\nThe switchable view that depends on the tile type.","!type":"fn() -> [sap.suite.ui.commons.TileContent2X2]","!category":"function","!static":false},"setIcon":{"!description":"Sets the aggregated {@link #getIcon icon}.","!type":"fn(oIcon: sap.ui.core.Control) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"oIcon":"type: sap.ui.core.Control, description: The icon to set"},"!static":false},"setFrameType":{"!description":"Sets a new value for property {@link #getFrameType frameType}.\n\nThe frame type: 1x1 or 2x1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>OneByOne<\/code>.","!type":"fn(sFrameType: sap.suite.ui.commons.FrameType) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"sFrameType":"type: sap.suite.ui.commons.FrameType, description: New value for property <code>frameType<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.GenericTile2X2<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.GenericTile2X2","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The tile control that displays the title, description, and customizable main area.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.GenericTile2X2.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.InfoTileSize":{"XS":{"!description":"Extra small size.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.m.InfoTileSize should be used.<br>Enumeration of possible PointTile size settings.","S":{"!description":"Small size.","!type":"String","!category":"enum"},"L":{"!description":"Large size.","!type":"String","!category":"enum"},"Auto":{"!description":"The size of the tile depends on the device it is running on. It is large on desktop, medium on tablet and small on phone.","!type":"String","!category":"enum"},"!category":"static class","M":{"!description":"Medium size.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.statusindicator.ShapeGroup":{"destroyShapes":{"!description":"Destroys all the shapes in the aggregation {@link #getShapes shapes}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.ShapeGroup","!category":"function","!static":false},"getShapes":{"!description":"Gets content of aggregation {@link #getShapes shapes}.\n\nList of shapes that belong to this group.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.Shape]","!category":"function","!static":false},"removeAllShapes":{"!description":"Removes all the controls from the aggregation {@link #getShapes shapes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.Shape]","!category":"function","!static":false},"indexOfShape":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.Shape<\/code> in the aggregation {@link #getShapes shapes}. and returns its index if found or -1 otherwise.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.Shape) -> Number","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.Shape, description: The shape whose index is looked for"},"!static":false},"setWeight":{"!description":"Sets a new value for property {@link #getWeight weight}.\n\nWeight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.<\/li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.<\/li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.<\/li> <li>If the status indicator's value is 100, all three groups of shapes are filled.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!type":"fn(iWeight: Number) -> sap.suite.ui.commons.statusindicator.ShapeGroup","!category":"function","parameters":{"iWeight":"type: int, description: New value for property <code>weight<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.ShapeGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new ShapeGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWeight weight} : int (default: 10)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getShapes shapes} : sap.suite.ui.commons.statusindicator.Shape[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/ShapeGroup","getWeight":{"!description":"Gets current value of property {@link #getWeight weight}.\n\nWeight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.<\/li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.<\/li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.<\/li> <li>If the status indicator's value is 100, all three groups of shapes are filled.<\/li> <\/ul>\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"insertShape":{"!description":"Inserts a shape into the aggregation {@link #getShapes shapes}.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.Shape, iIndex: Number) -> sap.suite.ui.commons.statusindicator.ShapeGroup","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.Shape, description: The shape to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the shape should be inserted at; for a negative value of <code>iIndex<\/code>, the shape is inserted at position 0; for a value greater than the current size of the aggregation, the shape is inserted at the last position"},"!static":false},"!description":"Group of shapes that display status indicator value. Shapes in the group are filled in parallel, actual animation might depend on particular shape setting.","!category":"class","addShape":{"!description":"Adds some shape to the aggregation {@link #getShapes shapes}.","!type":"fn(oShape: sap.suite.ui.commons.statusindicator.Shape) -> sap.suite.ui.commons.statusindicator.ShapeGroup","!category":"function","parameters":{"oShape":"type: sap.suite.ui.commons.statusindicator.Shape, description: The shape to add; if empty, nothing is inserted"},"!static":false},"removeShape":{"!description":"Removes a shape from the aggregation {@link #getShapes shapes}.","!type":"fn(vShape: Number | String | sap.suite.ui.commons.statusindicator.Shape) -> sap.suite.ui.commons.statusindicator.Shape","!category":"function","parameters":{"vShape":"type: int|string|sap.suite.ui.commons.statusindicator.Shape, description: The shape to remove or its index or id"},"!static":false},"!helpDescription":"Group of shapes that display status indicator value. Shapes in the group are filled in parallel, actual animation might depend on particular shape setting.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.ShapeGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ThingGroupDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>Defines the way how UnifiedThingGroup control is rendered.","!category":"static class","!module":"sap/suite/ui/commons/library","TopIndent":{"!description":"In this design there is indentation between header and content of the group.","!type":"String","!category":"enum"},"ZeroIndent":{"!description":"In this design there is no indentation between header and content of the group.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.HarveyBallMicroChartItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChartItem.<br>The configuration of the slice on the pie chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChartItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new HarveyBallMicroChartItem.","!module":"sap/suite/ui/commons/HarveyBallMicroChartItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChartItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.HarveyBallMicroChartItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChartItem.<br>The configuration of the slice on the pie chart."},"sap.suite.ui.commons.statusindicator.DiscreteThreshold_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.DiscreteThreshold with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.DiscreteThreshold"},"sap.suite.ui.commons.BulletChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BulletChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.BulletChart"},"sap.suite.ui.commons.networkgraph.ElementBase":{"getStatus":{"!description":"Gets current value of property {@link #getStatus status}.\n\nStatus associated with this element. You can use any of the custom statuses defined by the <code>statuses<\/code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.\n\nDefault value is <code>sap.suite.ui.commons.networkgraph.ElementStatus.Standard<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDescription.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new ElementBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getStatus status} : string (default: sap.suite.ui.commons.networkgraph.ElementStatus.Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.suite.ui.commons.networkgraph.ElementAttribute[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.SvgBase#constructor sap.suite.ui.commons.networkgraph.SvgBase}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/ElementBase","insertAttribute":{"!description":"Inserts a attribute into the aggregation {@link #getAttributes attributes}.","!type":"fn(oAttribute: sap.suite.ui.commons.networkgraph.ElementAttribute, iIndex: Number) -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","parameters":{"oAttribute":"type: sap.suite.ui.commons.networkgraph.ElementAttribute, description: The attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attribute should be inserted at; for a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"},"!static":false},"!description":"ElementBase class","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nA title associated with the element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDescription.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"scrollToElement":{"!description":"Scrolls the view port to show this element","!type":"fn()","!category":"function","!static":false},"!category":"class","indexOfAttribute":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.ElementAttribute<\/code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.suite.ui.commons.networkgraph.ElementAttribute) -> Number","!category":"function","parameters":{"oAttribute":"type: sap.suite.ui.commons.networkgraph.ElementAttribute, description: The attribute whose index is looked for"},"!static":false},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation {@link #getAttributes attributes}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","!static":false},"removeAttribute":{"!description":"Removes a attribute from the aggregation {@link #getAttributes attributes}.","!type":"fn(vAttribute: Number | String | sap.suite.ui.commons.networkgraph.ElementAttribute) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"vAttribute":"type: int|string|sap.suite.ui.commons.networkgraph.ElementAttribute, description: The attribute to remove or its index or id"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nA title associated with the element.","!type":"fn() -> String","!category":"function","!static":false},"setStatus":{"!description":"Sets a new value for property {@link #getStatus status}.\n\nStatus associated with this element. You can use any of the custom statuses defined by the <code>statuses<\/code> aggregation in the {@link sap.suite.ui.commons.networkgraph.Graph} or use the default statuses provided by {@link sap.suite.ui.commons.networkgraph.ElementStatus}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap.suite.ui.commons.networkgraph.ElementStatus.Standard<\/code>.","!type":"fn(sStatus: String) -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","parameters":{"sStatus":"type: string, description: New value for property <code>status<\/code>"},"!static":false},"getAttributes":{"!description":"Gets content of aggregation {@link #getAttributes attributes}.\n\nAttributes associated with the element.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ElementAttribute]","!category":"function","!static":false},"removeAllAttributes":{"!description":"Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ElementAttribute]","!category":"function","!static":false},"!helpDescription":"ElementBase class","!proto":"sap.suite.ui.commons.networkgraph.SvgBase","addAttribute":{"!description":"Adds some attribute to the aggregation {@link #getAttributes attributes}.","!type":"fn(oAttribute: sap.suite.ui.commons.networkgraph.ElementAttribute) -> sap.suite.ui.commons.networkgraph.ElementBase","!category":"function","parameters":{"oAttribute":"type: sap.suite.ui.commons.networkgraph.ElementAttribute, description: The attribute to add; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.ElementBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ProcessFlowConnectionType":{"!description":"Describes the type of a connection.","Normal":{"!description":"Normal connection.","!type":"String","!category":"enum"},"!category":"static class","Planned":{"!description":"Planned connection.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.NodePlacement":{"Simple":{"!description":"Minimizes the area taken by the graph at the expense of everything else.","!type":"String","!category":"enum"},"!description":"Type of node placement for Layered Algorithm. See {@link https://rtsys.informatik.uni-kiel.de/confluence/display/KIELER/KLay+Layered+Layout+Options#KLayLayeredLayoutOptions-nodePlacement}","LinearSegments":{"!description":"Calculates the most optimal layout balance.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library","BrandesKoepf":{"!description":"Minimizes the number of edge bends at the expense of the graph size.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.networkgraph.LineType":{"Solid":{"!description":"Solid connector line.","!type":"String","!category":"enum"},"!description":"Type of connector line used in the network graph.","Dashed":{"!description":"Dashed connector line.","!type":"String","!category":"enum"},"Dotted":{"!description":"Dotted connector line.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.util.HtmlElementRenderer":{"!description":"HtmlElementRenderer A renderer for HtmlElement.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.HtmlElementRenderer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"_renderAttributes":{"!description":"Renders all attributes of parent tag.","!type":"fn(oRm: sap.ui.core.RenderManager)","!category":"function","parameters":{"oRm":"type: sap.ui.core.RenderManager, description: RenderManager used for outputting content."},"!static":false},"!category":"class","!constructorDescription":"Creates a renderer for HtmlElement.","_renderChildren":{"!description":"Renders children of given node.","!type":"fn(oRm: sap.ui.core.RenderManager)","!category":"function","parameters":{"oRm":"type: sap.ui.core.RenderManager, description: RenderManager used for outputting content."},"!static":false},"!module":"sap/suite/ui/commons/util/HtmlElementRenderer","render":{"!description":"Renders HtmlElement to given render manager.","!type":"fn(oRm: sap.ui.core.RenderManager)","!category":"function","parameters":{"oRm":"type: sap.ui.core.RenderManager, description: RenderManager used for outputting content."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.util.HtmlElementRenderer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"HtmlElementRenderer A renderer for HtmlElement."},"sap.suite.ui.commons.MicroAreaChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MicroAreaChart"},"sap.suite.ui.commons.util.ManagedObjectRegister_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.ManagedObjectRegister with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.util.ManagedObjectRegister"},"sap.suite.ui.commons.MicroAreaChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartLabel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MicroAreaChartLabel"},"sap.suite.ui.commons.ChartContainerToolbarPlaceholder_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainerToolbarPlaceholder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ChartContainerToolbarPlaceholder"},"sap.suite.ui.commons.BusinessCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BusinessCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.BusinessCard"},"sap.suite.ui.commons.AriaProperties":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.AriaProperties with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nDefines a string value that labels the current element. See the related <code>labelledBy<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.AriaProperties","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new AriaProperties.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getLabelledBy labelledBy} : string<\/li>\n<li>{@link #getDescribedBy describedBy} : string<\/li>\n<li>{@link #getRole role} : string<\/li>\n<li>{@link #getHasPopup hasPopup} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setDescribedBy":{"!description":"Sets a new value for property {@link #getDescribedBy describedBy}.\n\nIdentifies one or more elements that describe the object. See the related <code>labelledBy<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescribedBy: String) -> sap.suite.ui.commons.AriaProperties","!category":"function","parameters":{"sDescribedBy":"type: string, description: New value for property <code>describedBy<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/AriaProperties","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nDefines a string value that labels the current element. See the related <code>labelledBy<\/code> property.","!type":"fn() -> String","!category":"function","!static":false},"setHasPopup":{"!description":"Sets a new value for property {@link #getHasPopup hasPopup}.\n\nIndicates that the element has a popup context menu or a submenu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHasPopup: String) -> sap.suite.ui.commons.AriaProperties","!category":"function","parameters":{"sHasPopup":"type: string, description: New value for property <code>hasPopup<\/code>"},"!static":false},"!description":"<code>AriaProperties<\/code> provides ARIA-compliant properties for screen reader software that can be added to any control renderer.","getDescribedBy":{"!description":"Gets current value of property {@link #getDescribedBy describedBy}.\n\nIdentifies one or more elements that describe the object. See the related <code>labelledBy<\/code> property.","!type":"fn() -> String","!category":"function","!static":false},"getRole":{"!description":"Gets current value of property {@link #getRole role}.\n\nIdentifies the element role.","!type":"fn() -> String","!category":"function","!static":false},"setRole":{"!description":"Sets a new value for property {@link #getRole role}.\n\nIdentifies the element role.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sRole: String) -> sap.suite.ui.commons.AriaProperties","!category":"function","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"},"!static":false},"!category":"class","writeAriaProperties":{"!description":"Adds the provided ARIA-compliant properties to a control.","!type":"fn(oRm: sap.ui.core.RenderManager, oDefaultProperties: Object, oAriaProperties: sap.suite.ui.commons.AriaProperties)","!category":"function","parameters":{"oAriaProperties":"type: sap.suite.ui.commons.AriaProperties, description: ARIA-compliant properties from data binding","oRm":"type: sap.ui.core.RenderManager, description: The RenderManager that can be used for writing to the render output buffer","oDefaultProperties":"type: object, description: Default ARIA-compliant properties of the control"},"!static":true},"getLabelledBy":{"!description":"Gets current value of property {@link #getLabelledBy labelledBy}.\n\nIdentifies one or more elements that label the current element. See the related <code>label<\/code> and <code>describedBy<\/code> properties.","!type":"fn() -> String","!category":"function","!static":false},"setLabelledBy":{"!description":"Sets a new value for property {@link #getLabelledBy labelledBy}.\n\nIdentifies one or more elements that label the current element. See the related <code>label<\/code> and <code>describedBy<\/code> properties.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabelledBy: String) -> sap.suite.ui.commons.AriaProperties","!category":"function","parameters":{"sLabelledBy":"type: string, description: New value for property <code>labelledBy<\/code>"},"!static":false},"!helpDescription":"<code>AriaProperties<\/code> provides ARIA-compliant properties for screen reader software that can be added to any control renderer.","!proto":"sap.ui.core.Element","getHasPopup":{"!description":"Gets current value of property {@link #getHasPopup hasPopup}.\n\nIndicates that the element has a popup context menu or a submenu.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.AriaProperties.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.taccount.TAccountGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.taccount.TAccountGroup"},"sap.suite.ui.commons.ProcessFlowNodeState":{"!description":"Describes the state connected to the content it is representing in the Process Flow Node. The state is also displayed in the Process Flow Lane Header as a color segment of the donut.","Neutral":{"!description":"Neutral status for a created document: the document is in progress.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical status for a created document: with this document, a critical issue occurred, for example, the business process can be interrupted.","!type":"String","!category":"enum"},"Positive":{"!description":"Positive status for a created document: the document is done, finished, solved.","!type":"String","!category":"enum"},"Planned":{"!description":"Planned status for a document: the document is planned to be started.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","PlannedNegative":{"!description":"Planned, but negative status for a document: the planned document has an issue but has not yet been started.","!type":"String","!category":"enum"},"Negative":{"!description":"Negative status for a created document: with this document, an issue occurred.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.CalculationBuilderValidationMode":{"!description":"Types of expression validation that define when the expression entered into the {@link sap.suite.ui.commons.CalculationBuilder} is validated.","!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.imageeditor.RotateHistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.RotateHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mProperties: Object)","prototype":"sap.suite.ui.commons.imageeditor.RotateHistoryItem"},"sap.suite.ui.commons.statusindicator.SimpleShape":{"getStrokeWidth":{"!description":"Gets current value of property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nDefault value is <code>0.25<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setStrokeWidth":{"!description":"Sets a new value for property {@link #getStrokeWidth strokeWidth}.\n\nSpecifies the width of the shape's outline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0.25<\/code>.","!type":"fn(fStrokeWidth: Number) -> sap.suite.ui.commons.statusindicator.SimpleShape","!category":"function","parameters":{"fStrokeWidth":"type: float, description: New value for property <code>strokeWidth<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.SimpleShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getStrokeColor":{"!description":"Gets current value of property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.m.ValueCSSColor","!category":"function","!static":false},"!constructorDescription":"Constructor for a new SimpleShape.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStrokeWidth strokeWidth} : float (default: 0.25)<\/li>\n<li>{@link #getStrokeColor strokeColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.statusindicator.Shape#constructor sap.suite.ui.commons.statusindicator.Shape}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/SimpleShape","setStrokeColor":{"!description":"Sets a new value for property {@link #getStrokeColor strokeColor}.\n\nSpecifies the color of the shape's outline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sStrokeColor: sap.m.ValueCSSColor) -> sap.suite.ui.commons.statusindicator.SimpleShape","!category":"function","parameters":{"sStrokeColor":"type: sap.m.ValueCSSColor, description: New value for property <code>strokeColor<\/code>"},"!static":false},"!description":"A simple shape that consists of a single SVG shape.","!category":"class","getDisplayedValue":{"!description":"Returns currently displayed value.","!type":"fn() -> Number","!category":"function","!static":false},"!helpDescription":"A simple shape that consists of a single SVG shape.","!proto":"sap.suite.ui.commons.statusindicator.Shape","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.SimpleShape.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.statusindicator.FillingOption":{"setWeight":{"!description":"Sets a new value for property {@link #getWeight weight}.\n\nWeight of the fillable shape, relative to other fillable shapes included in this custom shape. This property allows you to distribute the status indicator's value between distinct SVG shapes included in the custom shape. For example, for four SVG shapes with weights 1, 2, 3, and 4 (total weight 10), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 10% (1 out of 10), the first SVG shape (weight 1) is partially filled, depending on the percentage value. For example, if the percentage value of the status indicator is 5, the first SVG shape appears half-full. The rest of the SVG shapes appear empty.<\/li> <li>If the status indicator's value is at least 10% but below 30%, the first SVG shape (weight 1) is filled, and the second shape (weight 2) is filled only partially, depending on the percentage value. The rest of the SVG shapes in this custom shape appear empty.<\/li> <li>If the status indicator's value is at least 30% but below 60%, the first two SVG shapes (weight 1 and 2) are filled, and the third SVG shape (weight 3) is filled only partially. The fourth SVG shape (weight 4) appears empty.<\/li> <li>If the status indicator's value is at least 60% but below 100%, the first three SVG shapes (weight 1, 2, and 3) are filled, but the fourth SVG shape is filled only partially, depending on the percentage value.<\/li> <li>If the status indicator's value is 100, all four SVG shapes appear filled.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iWeight: Number) -> sap.suite.ui.commons.statusindicator.FillingOption","!category":"function","parameters":{"iWeight":"type: int, description: New value for property <code>weight<\/code>"},"!static":false},"getShapeId":{"!description":"Gets current value of property {@link #getShapeId shapeId}.\n\nID of the fillable SVG shape included in a custom shape.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.FillingOption with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new FillingOption.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShapeId shapeId} : string<\/li>\n<li>{@link #getWeight weight} : int (default: 1)<\/li>\n<li>{@link #getOrder order} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/FillingOption","getWeight":{"!description":"Gets current value of property {@link #getWeight weight}.\n\nWeight of the fillable shape, relative to other fillable shapes included in this custom shape. This property allows you to distribute the status indicator's value between distinct SVG shapes included in the custom shape. For example, for four SVG shapes with weights 1, 2, 3, and 4 (total weight 10), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 10% (1 out of 10), the first SVG shape (weight 1) is partially filled, depending on the percentage value. For example, if the percentage value of the status indicator is 5, the first SVG shape appears half-full. The rest of the SVG shapes appear empty.<\/li> <li>If the status indicator's value is at least 10% but below 30%, the first SVG shape (weight 1) is filled, and the second shape (weight 2) is filled only partially, depending on the percentage value. The rest of the SVG shapes in this custom shape appear empty.<\/li> <li>If the status indicator's value is at least 30% but below 60%, the first two SVG shapes (weight 1 and 2) are filled, and the third SVG shape (weight 3) is filled only partially. The fourth SVG shape (weight 4) appears empty.<\/li> <li>If the status indicator's value is at least 60% but below 100%, the first three SVG shapes (weight 1, 2, and 3) are filled, but the fourth SVG shape is filled only partially, depending on the percentage value.<\/li> <li>If the status indicator's value is 100, all four SVG shapes appear filled.<\/li> <\/ul>\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getOrder":{"!description":"Gets current value of property {@link #getOrder order}.\n\nOrder in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Filling options for an SVG shape included in a custom shape.","setOrder":{"!description":"Sets a new value for property {@link #getOrder order}.\n\nOrder in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iOrder: Number) -> sap.suite.ui.commons.statusindicator.FillingOption","!category":"function","parameters":{"iOrder":"type: int, description: New value for property <code>order<\/code>"},"!static":false},"setShapeId":{"!description":"Sets a new value for property {@link #getShapeId shapeId}.\n\nID of the fillable SVG shape included in a custom shape.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sShapeId: String) -> sap.suite.ui.commons.statusindicator.FillingOption","!category":"function","parameters":{"sShapeId":"type: string, description: New value for property <code>shapeId<\/code>"},"!static":false},"!category":"class","!helpDescription":"Filling options for an SVG shape included in a custom shape.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.FillingOption.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.CalculationBuilderFunction":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilderItem","!category":"function","parameters":{"vItem":"type: int|string|sap.suite.ui.commons.CalculationBuilderItem, description: The item to remove or its index or id"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nA key associated with the function. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.","!type":"fn() -> String","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDescription of the function.<br> The description is displayed in the functions menu on the calculation builder's toolbar. If no description is specified, it is generated automatically based on the <code>key<\/code> property and the parameters defined in the <code>items<\/code> aggregation.","!type":"fn() -> String","!category":"function","!static":false},"setUseDefaultValidation":{"!description":"Sets a new value for property {@link #getUseDefaultValidation useDefaultValidation}.\n\nDefines whether default validation should be used.<br> Set this property to <code>false<\/code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true<\/code>, and the function will be validated by the calculation builder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseDefaultValidation: Boolean) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"bUseDefaultValidation":"type: boolean, description: New value for property <code>useDefaultValidation<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderFunction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the function.<br> The label is displayed in the visual editor of the calculation builder and in the functions menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"getUseDefaultValidation":{"!description":"Gets current value of property {@link #getUseDefaultValidation useDefaultValidation}.\n\nDefines whether default validation should be used.<br> Set this property to <code>false<\/code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true<\/code>, and the function will be validated by the calculation builder.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new custom function.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getUseDefaultValidation useDefaultValidation} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.CalculationBuilderItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/CalculationBuilderFunction","addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item to add; if empty, nothing is inserted"},"!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item whose index is looked for"},"!static":false},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the function.<br> The label is displayed in the visual editor of the calculation builder and in the functions menu on the calculation builder's toolbar.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nA key associated with the function. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"!description":"A custom function to be used in the calculation builder.<br> The default functions available for the calculation builder are defined in {@link sap.suite.ui.commons.CalculationBuilderFunctionType}.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nHolds the parameters that can be passed to the function.<br> For example, if the function has two parameters, the <code>items<\/code> aggregation may consist of: <ol> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the first argument entered by the user.<\/li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with a \"<code>,<\/code>\" (comma) key for the comma that separates the arguments.<\/li> <li>A {@link sap.suite.ui.commons.CalculationBuilderItem} with an empty key for the second argument entered by the user.<\/li> <\/ol>","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDescription of the function.<br> The description is displayed in the functions menu on the calculation builder's toolbar. If no description is specified, it is generated automatically based on the <code>key<\/code> property and the parameters defined in the <code>items<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item to insert; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderFunction.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A custom function to be used in the calculation builder.<br> The default functions available for the calculation builder are defined in {@link sap.suite.ui.commons.CalculationBuilderFunctionType}.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.networkgraph.ElementAttribute":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nValue of the attribute. If set to null, the value is not displayed.","!type":"fn() -> String","!category":"function","!static":false},"getLabelStatus":{"!description":"Gets current value of property {@link #getLabelStatus labelStatus}.\n\nName of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.","!type":"fn() -> String","!category":"function","!static":false},"setValueStatus":{"!description":"Sets a new value for property {@link #getValueStatus valueStatus}.\n\nName of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValueStatus: String) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"sValueStatus":"type: string, description: New value for property <code>valueStatus<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDefines whether the attribute is visible. This option is used for rectangular nodes. Visible attributes are displayed right inside the rectangular node. The node's details popup shows all attributes, including the invisible ones.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel of the attribute. If set to null, the label is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nValue of the attribute. If set to null, the value is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ElementAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getLabelStatus labelStatus} : string<\/li>\n<li>{@link #getValueStatus valueStatus} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/ElementAttribute","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon assigned to the attribute.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel of the attribute. If set to null, the label is not displayed.","!type":"fn() -> String","!category":"function","!static":false},"getValueStatus":{"!description":"Gets current value of property {@link #getValueStatus valueStatus}.\n\nName of custom status that can change the color of the value. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.","!type":"fn() -> String","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDefines whether the attribute is visible. This option is used for rectangular nodes. Visible attributes are displayed right inside the rectangular node. The node's details popup shows all attributes, including the invisible ones.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Holds details of an attribute used in the graph.","!category":"class","setLabelStatus":{"!description":"Sets a new value for property {@link #getLabelStatus labelStatus}.\n\nName of custom status that can change the color of the label. Note that only contentColor, selectedContentColor and hoverContentColor are relevant to this attribute.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabelStatus: String) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"sLabelStatus":"type: string, description: New value for property <code>labelStatus<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon assigned to the attribute.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.networkgraph.ElementAttribute","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"!helpDescription":"Holds details of an attribute used in the graph.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.ElementAttribute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.CalculationBuilderVariable":{"removeItem":{"!description":"Removes a Item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilderItem","!category":"function","parameters":{"vItem":"type: int|string|sap.suite.ui.commons.CalculationBuilderItem, description: The Item to remove or its index or id"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nA key associated with the variable. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderVariable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel for the variable.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new variable.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getGroup group} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.CalculationBuilderItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/CalculationBuilderVariable","addItem":{"!description":"Adds some Item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The Item to add; if empty, nothing is inserted"},"!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The Item whose index is looked for"},"!static":false},"getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel for the variable.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nA key associated with the variable. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"setGroup":{"!description":"Sets a new value for property {@link #getGroup group}.\n\nThe group where this variable belongs.<br> To define variable groups, use {@link sap.suite.ui.commons.CalculationBuilderGroup}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sGroup: String) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"sGroup":"type: string, description: New value for property <code>group<\/code>"},"!static":false},"!description":"A variable used in the expression entered into the calculation builder.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nHolds the items included in the variable.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"!category":"class","destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"getGroup":{"!description":"Gets current value of property {@link #getGroup group}.\n\nThe group where this variable belongs.<br> To define variable groups, use {@link sap.suite.ui.commons.CalculationBuilderGroup}.","!type":"fn() -> String","!category":"function","!static":false},"insertItem":{"!description":"Inserts a Item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the Item should be inserted at; for a negative value of <code>iIndex<\/code>, the Item is inserted at position 0; for a value greater than the current size of the aggregation, the Item is inserted at the last position","oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The Item to insert; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderVariable.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A variable used in the expression entered into the calculation builder.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.imageeditor.RotateHistoryItem":{"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rotate} method.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.RotateHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new RotateHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/RotateHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.RotateHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rotate} method."},"sap.suite.ui.commons.MonitoringContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MonitoringContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MonitoringContent"},"sap.suite.ui.commons.MicroAreaChartPoint":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartPoint.<br>This control contains data for the point.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartPoint.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new MicroAreaChartPoint.","!module":"sap/suite/ui/commons/MicroAreaChartPoint","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartPoint.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.AreaMicroChartPoint","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartPoint.<br>This control contains data for the point."},"sap.suite.ui.commons.CalculationBuilder":{"setReadOnly":{"!description":"Sets a new value for property {@link #getReadOnly readOnly}.\n\nDefines whether the control is read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bReadOnly: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"},"!static":false},"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilderItem","!category":"function","parameters":{"vItem":"type: int|string|sap.suite.ui.commons.CalculationBuilderItem, description: The item to remove or its index or id"},"!static":false},"indexOfGroup":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderGroup<\/code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise.","!type":"fn(oGroup: sap.suite.ui.commons.CalculationBuilderGroup) -> Number","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.CalculationBuilderGroup, description: The Group whose index is looked for"},"!static":false},"appendError":{"!description":"Records a new error detected in the expression.","!type":"fn(oError: Object)","!category":"function","parameters":{"oError":"type: object, description: Error object with contains following properties:"},"!static":false},"addGroup":{"!description":"Adds some Group to the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.CalculationBuilderGroup) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.CalculationBuilderGroup, description: The Group to add; if empty, nothing is inserted"},"!static":false},"setLayoutType":{"!description":"Sets a new value for property {@link #getLayoutType layoutType}.\n\nDefines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sLayoutType: String) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"sLayoutType":"type: string, description: New value for property <code>layoutType<\/code>"},"!static":false},"getDisabledDefaultTokens":{"!description":"Gets current value of property {@link #getDisabledDefaultTokens disabledDefaultTokens}.\n\nDefault operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"detachValidateFunction":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:validateFunction validateFunction} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setAllowSuggestions":{"!description":"Sets a new value for property {@link #getAllowSuggestions allowSuggestions}.\n\nDefines whether autocomplete suggestions are shown when you type. Available only for desktop devices.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAllowSuggestions: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bAllowSuggestions":"type: boolean, description: New value for property <code>allowSuggestions<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/CalculationBuilder","getExpression":{"!description":"Gets current value of property {@link #getExpression expression}.\n\nHolds the arithmetic expression.<br> Not usable for clearing. If you want to clear the whole expression, call the <code>removeAllItems<\/code> method.","!type":"fn() -> String","!category":"function","!static":false},"indexOfOperator":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation {@link #getOperators operators}. and returns its index if found or -1 otherwise.","!type":"fn(oOperator: sap.ui.core.Item) -> Number","!category":"function","parameters":{"oOperator":"type: sap.ui.core.Item, description: The Operator whose index is looked for"},"!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item whose index is looked for"},"!static":false},"attachValidateFunction":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:validateFunction validateFunction} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself.\n\nThis event is fired for each custom function included in the expression.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction} and validated using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself"},"!static":false},"unbindItems":{"!description":"Unbinds aggregation {@link #getItems items} from model data.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"fireValidateFunction":{"!description":"Fires event {@link #event:validateFunction validateFunction} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyOperators":{"!description":"Destroys all the operators in the aggregation {@link #getOperators operators}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"setShowInputToolbar":{"!description":"Sets a new value for property {@link #getShowInputToolbar showInputToolbar}.\n\nDefines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowInputToolbar: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bShowInputToolbar":"type: boolean, description: New value for property <code>showInputToolbar<\/code>"},"!static":false},"indexOfVariable":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderVariable<\/code> in the aggregation {@link #getVariables variables}. and returns its index if found or -1 otherwise.","!type":"fn(oVariable: sap.suite.ui.commons.CalculationBuilderVariable) -> Number","!category":"function","parameters":{"oVariable":"type: sap.suite.ui.commons.CalculationBuilderVariable, description: The Variable whose index is looked for"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the calculation builder element.","!type":"fn() -> String","!category":"function","!static":false},"indexOfFunction":{"!description":"Checks for the provided <code>sap.suite.ui.commons.CalculationBuilderFunction<\/code> in the aggregation {@link #getFunctions functions}. and returns its index if found or -1 otherwise.","!type":"fn(oFunction: sap.suite.ui.commons.CalculationBuilderFunction) -> Number","!category":"function","parameters":{"oFunction":"type: sap.suite.ui.commons.CalculationBuilderFunction, description: The Function whose index is looked for"},"!static":false},"updateOrCreateItem":{"!description":"Creates or updates the currently selected item. <br> Call this function only when using the <code>customView<\/code> aggregation in the {@link sap.suite.ui.commons.CalculationBuilderGroup}.","!type":"fn(sKey: String)","!category":"function","parameters":{"sKey":"type: string, description: New key for current item (new or old)"},"!static":false},"setAllowStringConstants":{"!description":"Sets a new value for property {@link #getAllowStringConstants allowStringConstants}.\n\nDefines whether string constants are allowed.<br> If set to <code>true<\/code>, the calculation builder doesn't validate custom strings as errors.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAllowStringConstants: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bAllowStringConstants":"type: boolean, description: New value for property <code>allowStringConstants<\/code>"},"!static":false},"destroyVariables":{"!description":"Destroys all the variables in the aggregation {@link #getVariables variables}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"destroyFunctions":{"!description":"Destroys all the functions in the aggregation {@link #getFunctions functions}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"getGroups":{"!description":"Gets content of aggregation {@link #getGroups groups}.\n\nDefines groups of variables.<br> Variables can be organized into multiple groups for better orientation among different types of variables.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderGroup]","!category":"function","!static":false},"setValidationMode":{"!description":"Sets a new value for property {@link #getValidationMode validationMode}.\n\nDefines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange<\/code>, the input is validated as you type.<\/li> <li>If set to <code>FocusOut<\/code>, the input is validated, once you press Enter or Tab.<\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>LiveChange<\/code>.","!type":"fn(sValidationMode: sap.suite.ui.commons.CalculationBuilderValidationMode) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"sValidationMode":"type: sap.suite.ui.commons.CalculationBuilderValidationMode, description: New value for property <code>validationMode<\/code>"},"!static":false},"insertGroup":{"!description":"Inserts a Group into the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.CalculationBuilderGroup, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.CalculationBuilderGroup, description: The Group to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the Group should be inserted at; for a negative value of <code>iIndex<\/code>, the Group is inserted at position 0; for a value greater than the current size of the aggregation, the Group is inserted at the last position"},"!static":false},"getValidationMode":{"!description":"Gets current value of property {@link #getValidationMode validationMode}.\n\nDefines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange<\/code>, the input is validated as you type.<\/li> <li>If set to <code>FocusOut<\/code>, the input is validated, once you press Enter or Tab.<\/li> <\/ul>\n\nDefault value is <code>LiveChange<\/code>.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilderValidationMode","!category":"function","!static":false},"removeGroup":{"!description":"Removes a Group from the aggregation {@link #getGroups groups}.","!type":"fn(vGroup: Number | String | sap.suite.ui.commons.CalculationBuilderGroup) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"vGroup":"type: int|string|sap.suite.ui.commons.CalculationBuilderGroup, description: The Group to remove or its index or id"},"!static":false},"getFunctions":{"!description":"Gets content of aggregation {@link #getFunctions functions}.\n\nHolds the custom functions that can be used in the calculation builder.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderFunction]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new calculation builder.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpression expression} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowToolbar showToolbar} : boolean (default: true)<\/li>\n<li>{@link #getWrapItemsInExpression wrapItemsInExpression} : boolean (default: true)<\/li>\n<li>{@link #getLayoutType layoutType} : string (default: Default)<\/li>\n<li>{@link #getShowInputToolbar showInputToolbar} : boolean (default: false)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<li>{@link #getAllowComparisonOperators allowComparisonOperators} : boolean (default: true)<\/li>\n<li>{@link #getAllowLogicalOperators allowLogicalOperators} : boolean (default: true)<\/li>\n<li>{@link #getAllowSuggestions allowSuggestions} : boolean (default: true)<\/li>\n<li>{@link #getAllowStringConstants allowStringConstants} : boolean (default: false)<\/li>\n<li>{@link #getValidationMode validationMode} : sap.suite.ui.commons.CalculationBuilderValidationMode (default: LiveChange)<\/li>\n<li>{@link #getDisabledDefaultTokens disabledDefaultTokens} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.suite.ui.commons.CalculationBuilderItem[] (default)<\/li>\n<li>{@link #getVariables variables} : sap.suite.ui.commons.CalculationBuilderVariable[]<\/li>\n<li>{@link #getFunctions functions} : sap.suite.ui.commons.CalculationBuilderFunction[]<\/li>\n<li>{@link #getOperators operators} : sap.ui.core.Item[]<\/li>\n<li>{@link #getGroups groups} : sap.suite.ui.commons.CalculationBuilderGroup[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:validateFunction validateFunction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterValidation afterValidation} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getToolbar":{"!description":"Returns the toolbar of the calculation builder.","!type":"fn() -> Object","!category":"function","!static":false},"removeAllOperators":{"!description":"Removes all the controls from the aggregation {@link #getOperators operators}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"addFunction":{"!description":"Adds some Function to the aggregation {@link #getFunctions functions}.","!type":"fn(oFunction: sap.suite.ui.commons.CalculationBuilderFunction) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oFunction":"type: sap.suite.ui.commons.CalculationBuilderFunction, description: The Function to add; if empty, nothing is inserted"},"!static":false},"removeAllVariables":{"!description":"Removes all the controls from the aggregation {@link #getVariables variables}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderVariable]","!category":"function","!static":false},"setShowToolbar":{"!description":"Sets a new value for property {@link #getShowToolbar showToolbar}.\n\nDefines whether the toolbar is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowToolbar: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bShowToolbar":"type: boolean, description: New value for property <code>showToolbar<\/code>"},"!static":false},"removeFunction":{"!description":"Removes a Function from the aggregation {@link #getFunctions functions}.","!type":"fn(vFunction: Number | String | sap.suite.ui.commons.CalculationBuilderFunction) -> sap.suite.ui.commons.CalculationBuilderFunction","!category":"function","parameters":{"vFunction":"type: int|string|sap.suite.ui.commons.CalculationBuilderFunction, description: The Function to remove or its index or id"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the calculation builder element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"removeAllGroups":{"!description":"Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderGroup]","!category":"function","!static":false},"removeOperator":{"!description":"Removes a Operator from the aggregation {@link #getOperators operators}.","!type":"fn(vOperator: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","!category":"function","parameters":{"vOperator":"type: int|string|sap.ui.core.Item, description: The Operator to remove or its index or id"},"!static":false},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getReadOnly":{"!description":"Gets current value of property {@link #getReadOnly readOnly}.\n\nDefines whether the control is read-only.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"insertVariable":{"!description":"Inserts a Variable into the aggregation {@link #getVariables variables}.","!type":"fn(oVariable: sap.suite.ui.commons.CalculationBuilderVariable, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oVariable":"type: sap.suite.ui.commons.CalculationBuilderVariable, description: The Variable to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the Variable should be inserted at; for a negative value of <code>iIndex<\/code>, the Variable is inserted at position 0; for a value greater than the current size of the aggregation, the Variable is inserted at the last position"},"!static":false},"!helpDescription":"Calculation Builder allows you to perform arithmetic calculations on constants and variables using standard arithmetic operators as well as most common logical operators and functions.<br> You can customize the sets of variables and functions that are visible in the calculation builder and introduce your own custom functions, as needed.<br> Arithmetic expressions can be entered using a touch-friendly visual editor or a textual editor that provides autocomplete suggestions for variables and checks the expression syntax as you type.","!proto":"sap.ui.core.Control","getVariables":{"!description":"Gets content of aggregation {@link #getVariables variables}.\n\nHolds the variables that can be used in the calculation builder.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderVariable]","!category":"function","!static":false},"attachAfterValidation":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterValidation afterValidation} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself.\n\nThis event is fired after the expression is validated.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself"},"!static":false},"validateParts":{"!description":"Checks if the expression syntax is valid.","!type":"fn() -> Array","!category":"function","!static":false},"getLayoutType":{"!description":"Gets current value of property {@link #getLayoutType layoutType}.\n\nDefines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setAllowLogicalOperators":{"!description":"Sets a new value for property {@link #getAllowLogicalOperators allowLogicalOperators}.\n\nDefines whether logical operators (AND, OR, XOR, NOT) are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAllowLogicalOperators: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bAllowLogicalOperators":"type: boolean, description: New value for property <code>allowLogicalOperators<\/code>"},"!static":false},"bindItems":{"!description":"Binds aggregation {@link #getItems items} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oBindingInfo":"type: object, description: The binding information"},"!static":false},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item to add; if empty, nothing is inserted"},"!static":false},"removeAllFunctions":{"!description":"Removes all the controls from the aggregation {@link #getFunctions functions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderFunction]","!category":"function","!static":false},"getErrors":{"!description":"Returns syntax errors.","!type":"fn()","!category":"function","!static":false},"fireAfterValidation":{"!description":"Fires event {@link #event:afterValidation afterValidation} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setExpression":{"!description":"Sets a new value for property {@link #getExpression expression}.\n\nHolds the arithmetic expression.<br> Not usable for clearing. If you want to clear the whole expression, call the <code>removeAllItems<\/code> method.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExpression: String) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"sExpression":"type: string, description: New value for property <code>expression<\/code>"},"!static":false},"getShowToolbar":{"!description":"Gets current value of property {@link #getShowToolbar showToolbar}.\n\nDefines whether the toolbar is visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","addVariable":{"!description":"Adds some Variable to the aggregation {@link #getVariables variables}.","!type":"fn(oVariable: sap.suite.ui.commons.CalculationBuilderVariable) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oVariable":"type: sap.suite.ui.commons.CalculationBuilderVariable, description: The Variable to add; if empty, nothing is inserted"},"!static":false},"allowFunction":{"!description":"Checks if the function is visible to the user.","!type":"fn(sFunction: sap.suite.ui.commons.CalculationBuilderFunctionType, bAllow: Boolean)","!category":"function","parameters":{"bAllow":"type: boolean, description: True if the function should be visible to the user","sFunction":"type: sap.suite.ui.commons.CalculationBuilderFunctionType, description: Name of the function"},"!static":false},"getAllowSuggestions":{"!description":"Gets current value of property {@link #getAllowSuggestions allowSuggestions}.\n\nDefines whether autocomplete suggestions are shown when you type. Available only for desktop devices.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDisabledDefaultTokens":{"!description":"Sets a new value for property {@link #getDisabledDefaultTokens disabledDefaultTokens}.\n\nDefault operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sDisabledDefaultTokens: String) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"sDisabledDefaultTokens":"type: string, description: New value for property <code>disabledDefaultTokens<\/code>"},"!static":false},"addOperator":{"!description":"Adds some Operator to the aggregation {@link #getOperators operators}.","!type":"fn(oOperator: sap.ui.core.Item) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oOperator":"type: sap.ui.core.Item, description: The Operator to add; if empty, nothing is inserted"},"!static":false},"getOperators":{"!description":"Gets content of aggregation {@link #getOperators operators}.\n\nHolds additional operators defined by the application.<br>These operators are not validated.","!type":"fn() -> [sap.ui.core.Item]","!category":"function","!static":false},"getAllowComparisonOperators":{"!description":"Gets current value of property {@link #getAllowComparisonOperators allowComparisonOperators}.\n\nDefines whether comparison operators (<, >, <=, >=, =, !=) are allowed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAllowLogicalOperators":{"!description":"Gets current value of property {@link #getAllowLogicalOperators allowLogicalOperators}.\n\nDefines whether logical operators (AND, OR, XOR, NOT) are allowed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getAllowStringConstants":{"!description":"Gets current value of property {@link #getAllowStringConstants allowStringConstants}.\n\nDefines whether string constants are allowed.<br> If set to <code>true<\/code>, the calculation builder doesn't validate custom strings as errors.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"insertFunction":{"!description":"Inserts a Function into the aggregation {@link #getFunctions functions}.","!type":"fn(oFunction: sap.suite.ui.commons.CalculationBuilderFunction, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oFunction":"type: sap.suite.ui.commons.CalculationBuilderFunction, description: The Function to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the Function should be inserted at; for a negative value of <code>iIndex<\/code>, the Function is inserted at position 0; for a value greater than the current size of the aggregation, the Function is inserted at the last position"},"!static":false},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAfterValidation":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterValidation afterValidation} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertOperator":{"!description":"Inserts a Operator into the aggregation {@link #getOperators operators}.","!type":"fn(oOperator: sap.ui.core.Item, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"oOperator":"type: sap.ui.core.Item, description: The Operator to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the Operator should be inserted at; for a negative value of <code>iIndex<\/code>, the Operator is inserted at position 0; for a value greater than the current size of the aggregation, the Operator is inserted at the last position"},"!static":false},"setAllowComparisonOperators":{"!description":"Sets a new value for property {@link #getAllowComparisonOperators allowComparisonOperators}.\n\nDefines whether comparison operators (<, >, <=, >=, =, !=) are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bAllowComparisonOperators: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bAllowComparisonOperators":"type: boolean, description: New value for property <code>allowComparisonOperators<\/code>"},"!static":false},"getShowInputToolbar":{"!description":"Gets current value of property {@link #getShowInputToolbar showInputToolbar}.\n\nDefines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyGroups":{"!description":"Destroys all the groups in the aggregation {@link #getGroups groups}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"setWrapItemsInExpression":{"!description":"Sets a new value for property {@link #getWrapItemsInExpression wrapItemsInExpression}.\n\nDefines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false<\/code>, the expression is rearranged into a single scrollable row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bWrapItemsInExpression: Boolean) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"bWrapItemsInExpression":"type: boolean, description: New value for property <code>wrapItemsInExpression<\/code>"},"!static":false},"!description":"Calculation Builder allows you to perform arithmetic calculations on constants and variables using standard arithmetic operators as well as most common logical operators and functions.<br> You can customize the sets of variables and functions that are visible in the calculation builder and introduce your own custom functions, as needed.<br> Arithmetic expressions can be entered using a touch-friendly visual editor or a textual editor that provides autocomplete suggestions for variables and checks the expression syntax as you type.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nHolds the items (operators and operands) to be displayed in the calculation builder.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"getWrapItemsInExpression":{"!description":"Gets current value of property {@link #getWrapItemsInExpression wrapItemsInExpression}.\n\nDefines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false<\/code>, the expression is rearranged into a single scrollable row.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilder","!category":"function","!static":false},"getInputToolbar":{"!description":"Returns the input toolbar of the calculation builder.","!type":"fn() -> Object","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.CalculationBuilderItem]","!category":"function","!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.CalculationBuilder<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself.\n\nThis event is fired when the order of items changes, or when some items are added or removed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilder<\/code> itself"},"!static":false},"removeVariable":{"!description":"Removes a Variable from the aggregation {@link #getVariables variables}.","!type":"fn(vVariable: Number | String | sap.suite.ui.commons.CalculationBuilderVariable) -> sap.suite.ui.commons.CalculationBuilderVariable","!category":"function","parameters":{"vVariable":"type: int|string|sap.suite.ui.commons.CalculationBuilderVariable, description: The Variable to remove or its index or id"},"!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.suite.ui.commons.CalculationBuilderItem, iIndex: Number) -> sap.suite.ui.commons.CalculationBuilder","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.suite.ui.commons.CalculationBuilderItem, description: The item to insert; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilder.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ThreePanelThingViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingViewer.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ThreePanelThingViewer"},"sap.suite.ui.commons.networkgraph.Node_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Node with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Node"},"sap.suite.ui.commons.CalculationBuilderValidationResult_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderValidationResult with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(function: fn())","prototype":"sap.suite.ui.commons.CalculationBuilderValidationResult"},"sap.suite.ui.commons.NoteTakerCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTakerCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.NoteTakerCard"},"sap.suite.ui.commons.networkgraph.ActionButtonPosition":{"Right":{"!description":"The action button is aligned to the right.","!type":"String","!category":"enum"},"!description":"Position of a custom action button.","!category":"static class","!module":"sap/suite/ui/commons/library","Left":{"!description":"The action button is aligned to the left.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.CalculationBuilderGroup":{"fireSetSelection":{"!description":"Fires event {@link #event:setSelection setSelection} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nA key associated with the group. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.","!type":"fn() -> String","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nAdditional description for the variable group.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new calculation builder variable group.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomView customView} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:setSelection setSelection} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachSetSelection":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:setSelection setSelection} event of this <code>sap.suite.ui.commons.CalculationBuilderGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!module":"sap/suite/ui/commons/CalculationBuilderGroup","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon for the variable group. This icon is displayed in the Variables menu.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nA key associated with the group. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"!description":"A variable group is used to organize the variables that the user can insert into the {@link sap.suite.ui.commons.CalculationBuilder} expression.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nLabel for the group.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nAdditional description for the variable group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","setCustomView":{"!description":"Sets the aggregated {@link #getCustomView customView}.","!type":"fn(oCustomView: sap.ui.core.Control) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"oCustomView":"type: sap.ui.core.Control, description: The customView to set"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nLabel for the group.<br> The label is displayed in the visual editor of the calculation builder and in the variables menu on the calculation builder's toolbar.","!type":"fn() -> String","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon for the variable group. This icon is displayed in the Variables menu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"getCustomView":{"!description":"Gets content of aggregation {@link #getCustomView customView}.\n\nHolds the variables included in the variable group.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"destroyCustomView":{"!description":"Destroys the customView in the aggregation {@link #getCustomView customView}.","!type":"fn() -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A variable group is used to organize the variables that the user can insert into the {@link sap.suite.ui.commons.CalculationBuilder} expression.","!proto":"sap.ui.core.Control","attachSetSelection":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:setSelection setSelection} event of this <code>sap.suite.ui.commons.CalculationBuilderGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.CalculationBuilderGroup<\/code> itself.\n\nThis event is fired when the user selects the variable group.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.CalculationBuilderGroup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.CalculationBuilderGroup<\/code> itself"},"!static":false}},"sap.suite.ui.commons.DeltaMicroChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.suite.ui.microchart.DeltaMicroChart should be used.<br>This control displays a delta of two values as a chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DeltaMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.DeltaMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new DeltaMicroChart.","!module":"sap/suite/ui/commons/DeltaMicroChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.DeltaMicroChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.DeltaMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.suite.ui.microchart.DeltaMicroChart should be used.<br>This control displays a delta of two values as a chart."},"sap.suite.ui.commons.imageeditor.ImageEditor_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.imageeditor.ImageEditor"},"sap.suite.ui.commons.networkgraph.Coordinate_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Coordinate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Coordinate"},"sap.suite.ui.commons.util.HtmlElementRenderer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.HtmlElementRenderer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oHtmlElement: sap.suite.ui.commons.util.HtmlElement)","prototype":"sap.suite.ui.commons.util.HtmlElementRenderer"},"sap.suite.ui.commons.networkgraph.Status":{"setSelectedBackgroundColor":{"!description":"Sets a new value for property {@link #getSelectedBackgroundColor selectedBackgroundColor}.\n\nFill color when selected.<br> The fill color of a custom status node, line, or group when you select it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedBackgroundColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sSelectedBackgroundColor":"type: string, description: New value for property <code>selectedBackgroundColor<\/code>"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.","!type":"fn() -> String","!category":"function","!static":false},"setLegendColor":{"!description":"Sets a new value for property {@link #getLegendColor legendColor}.\n\nColor displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor<\/code> property is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLegendColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sLegendColor":"type: string, description: New value for property <code>legendColor<\/code>"},"!static":false},"getSelectedBackgroundColor":{"!description":"Gets current value of property {@link #getSelectedBackgroundColor selectedBackgroundColor}.\n\nFill color when selected.<br> The fill color of a custom status node, line, or group when you select it.","!type":"fn() -> String","!category":"function","!static":false},"getHoverContentColor":{"!description":"Gets current value of property {@link #getHoverContentColor hoverContentColor}.\n\nContent color on hover. Color of the content (text or icon) inside the custom status node when you hover over it.","!type":"fn() -> String","!category":"function","!static":false},"getBackgroundColor":{"!description":"Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nFill color.<br> The fill color that is applied to nodes and lines that are in this custom status.","!type":"fn() -> String","!category":"function","!static":false},"setUseFocusColorAsContentColor":{"!description":"Sets a new value for property {@link #getUseFocusColorAsContentColor useFocusColorAsContentColor}.\n\nDefines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseFocusColorAsContentColor: Boolean) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"bUseFocusColorAsContentColor":"type: boolean, description: New value for property <code>useFocusColorAsContentColor<\/code>"},"!static":false},"setBorderColor":{"!description":"Sets a new value for property {@link #getBorderColor borderColor}.\n\nBorder color.<br> The border color that is applied to nodes in this custom status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBorderColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sBorderColor":"type: string, description: New value for property <code>borderColor<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/networkgraph/Status","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"setHoverBorderColor":{"!description":"Sets a new value for property {@link #getHoverBorderColor hoverBorderColor}.\n\nBorder color on hover.<br> The border color of a custom status node when you hover over it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverBorderColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sHoverBorderColor":"type: string, description: New value for property <code>hoverBorderColor<\/code>"},"!static":false},"setContentColor":{"!description":"Sets a new value for property {@link #getContentColor contentColor}.\n\nColor of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContentColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sContentColor":"type: string, description: New value for property <code>contentColor<\/code>"},"!static":false},"setHoverBackgroundColor":{"!description":"Sets a new value for property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nFill color on hover.<br> The fill color of a custom status node, line, or group when you hover over it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverBackgroundColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sHoverBackgroundColor":"type: string, description: New value for property <code>hoverBackgroundColor<\/code>"},"!static":false},"setHeaderContentColor":{"!description":"Sets a new value for property {@link #getHeaderContentColor headerContentColor}.\n\nColor of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeaderContentColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sHeaderContentColor":"type: string, description: New value for property <code>headerContentColor<\/code>"},"!static":false},"!category":"class","setBorderWidth":{"!description":"Sets a new value for property {@link #getBorderWidth borderWidth}.\n\nBorder width of the element in specific units (for example 2px).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBorderWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sBorderWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>borderWidth<\/code>"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the node.<br> The title that is applied to nodes that are in this custom status.","!type":"fn() -> String","!category":"function","!static":false},"getHoverBorderColor":{"!description":"Gets current value of property {@link #getHoverBorderColor hoverBorderColor}.\n\nBorder color on hover.<br> The border color of a custom status node when you hover over it.","!type":"fn() -> String","!category":"function","!static":false},"setBorderStyle":{"!description":"Sets a new value for property {@link #getBorderStyle borderStyle}.\n\nStyle of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBorderStyle: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sBorderStyle":"type: string, description: New value for property <code>borderStyle<\/code>"},"!static":false},"getSelectedBorderColor":{"!description":"Gets current value of property {@link #getSelectedBorderColor selectedBorderColor}.\n\nBorder color when selected. The border color of a custom status node when you select it.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Status with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getBorderWidth":{"!description":"Gets current value of property {@link #getBorderWidth borderWidth}.\n\nBorder width of the element in specific units (for example 2px).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setSelectedBorderColor":{"!description":"Sets a new value for property {@link #getSelectedBorderColor selectedBorderColor}.\n\nBorder color when selected. The border color of a custom status node when you select it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedBorderColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sSelectedBorderColor":"type: string, description: New value for property <code>selectedBorderColor<\/code>"},"!static":false},"getLegendColor":{"!description":"Gets current value of property {@link #getLegendColor legendColor}.\n\nColor displayed in the graph's legend.<br> If not set, the fill color defined in the <code>backgroundColor<\/code> property is used.","!type":"fn() -> String","!category":"function","!static":false},"setBackgroundColor":{"!description":"Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nFill color.<br> The fill color that is applied to nodes and lines that are in this custom status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBackgroundColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sBackgroundColor":"type: string, description: New value for property <code>backgroundColor<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new Status.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getBorderColor borderColor} : string<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getContentColor contentColor} : string<\/li>\n<li>{@link #getHeaderContentColor headerContentColor} : string<\/li>\n<li>{@link #getHoverBackgroundColor hoverBackgroundColor} : string<\/li>\n<li>{@link #getHoverBorderColor hoverBorderColor} : string<\/li>\n<li>{@link #getHoverContentColor hoverContentColor} : string<\/li>\n<li>{@link #getSelectedBackgroundColor selectedBackgroundColor} : string<\/li>\n<li>{@link #getSelectedBorderColor selectedBorderColor} : string<\/li>\n<li>{@link #getSelectedContentColor selectedContentColor} : string<\/li>\n<li>{@link #getLegendColor legendColor} : string<\/li>\n<li>{@link #getUseFocusColorAsContentColor useFocusColorAsContentColor} : boolean (default: false)<\/li>\n<li>{@link #getBorderWidth borderWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBorderStyle borderStyle} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getBorderColor":{"!description":"Gets current value of property {@link #getBorderColor borderColor}.\n\nBorder color.<br> The border color that is applied to nodes in this custom status.","!type":"fn() -> String","!category":"function","!static":false},"getContentColor":{"!description":"Gets current value of property {@link #getContentColor contentColor}.\n\nColor of the content (text or icon) inside the node.<br> The color is applied to a node's content when it enters this custom status.","!type":"fn() -> String","!category":"function","!static":false},"getHoverBackgroundColor":{"!description":"Gets current value of property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nFill color on hover.<br> The fill color of a custom status node, line, or group when you hover over it.","!type":"fn() -> String","!category":"function","!static":false},"getUseFocusColorAsContentColor":{"!description":"Gets current value of property {@link #getUseFocusColorAsContentColor useFocusColorAsContentColor}.\n\nDefines whether the focus border should match the color of the content in focus. If false, the focus border has the default color.<br>This property can be used only for nodes and groups of nodes.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"The status element holds information about a custom status that can be applied to nodes, lines, and groups of nodes.<br> <br> You can create multiple custom statuses and assign them to your graph using the <code>statuses<\/code> aggregation of the {@link sap.suite.ui.commons.networkgraph.Graph} control.<br> <br> Alternatively, you can use default statuses provided by the {@link sap.suite.ui.commons.networkgraph.ElementStatus} element.","getSelectedContentColor":{"!description":"Gets current value of property {@link #getSelectedContentColor selectedContentColor}.\n\nContent color when selected. Color of the content (text or icon) inside the custom status node when you select it.","!type":"fn() -> String","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the node.<br> The title that is applied to nodes that are in this custom status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"getBorderStyle":{"!description":"Gets current value of property {@link #getBorderStyle borderStyle}.\n\nStyle of the border. For {@link sap.suite.ui.commons.networkgraph.Line} elements use this value as parameter for <code>stroke-dasharray<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setSelectedContentColor":{"!description":"Sets a new value for property {@link #getSelectedContentColor selectedContentColor}.\n\nContent color when selected. Color of the content (text or icon) inside the custom status node when you select it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSelectedContentColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sSelectedContentColor":"type: string, description: New value for property <code>selectedContentColor<\/code>"},"!static":false},"setHoverContentColor":{"!description":"Sets a new value for property {@link #getHoverContentColor hoverContentColor}.\n\nContent color on hover. Color of the content (text or icon) inside the custom status node when you hover over it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverContentColor: String) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"sHoverContentColor":"type: string, description: New value for property <code>hoverContentColor<\/code>"},"!static":false},"getHeaderContentColor":{"!description":"Gets current value of property {@link #getHeaderContentColor headerContentColor}.\n\nColor of the header content (title and icon) of the node.<br> Applicable only to the rectangular nodes.","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.Element","!helpDescription":"The status element holds information about a custom status that can be applied to nodes, lines, and groups of nodes.<br> <br> You can create multiple custom statuses and assign them to your graph using the <code>statuses<\/code> aggregation of the {@link sap.suite.ui.commons.networkgraph.Graph} control.<br> <br> Alternatively, you can use default statuses provided by the {@link sap.suite.ui.commons.networkgraph.ElementStatus} element.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Status.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.MicroAreaChartPoint_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartPoint with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartPoint.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MicroAreaChartPoint"},"sap.suite.ui.commons.taccount.TAccountItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.taccount.TAccountItem"},"sap.suite.ui.commons.statusindicator.StatusIndicator":{"indexOfGroup":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.ShapeGroup<\/code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise.","!type":"fn(oGroup: sap.suite.ui.commons.statusindicator.ShapeGroup) -> Number","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.statusindicator.ShapeGroup, description: The group whose index is looked for"},"!static":false},"addGroup":{"!description":"Adds some group to the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.statusindicator.ShapeGroup) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.statusindicator.ShapeGroup, description: The group to add; if empty, nothing is inserted"},"!static":false},"indexOfPropertyThreshold":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.PropertyThreshold<\/code> in the aggregation {@link #getPropertyThresholds propertyThresholds}. and returns its index if found or -1 otherwise.","!type":"fn(oPropertyThreshold: sap.suite.ui.commons.statusindicator.PropertyThreshold) -> Number","!category":"function","parameters":{"oPropertyThreshold":"type: sap.suite.ui.commons.statusindicator.PropertyThreshold, description: The propertyThreshold whose index is looked for"},"!static":false},"insertPropertyThreshold":{"!description":"Inserts a propertyThreshold into the aggregation {@link #getPropertyThresholds propertyThresholds}.","!type":"fn(oPropertyThreshold: sap.suite.ui.commons.statusindicator.PropertyThreshold, iIndex: Number) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oPropertyThreshold":"type: sap.suite.ui.commons.statusindicator.PropertyThreshold, description: The propertyThreshold to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the propertyThreshold should be inserted at; for a negative value of <code>iIndex<\/code>, the propertyThreshold is inserted at position 0; for a value greater than the current size of the aggregation, the propertyThreshold is inserted at the last position"},"!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getPropertyThresholds":{"!description":"Gets content of aggregation {@link #getPropertyThresholds propertyThresholds}.\n\nDefines how shapes are filled based on the status indicator's percentage value.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.PropertyThreshold]","!category":"function","!static":false},"addDiscreteThreshold":{"!description":"Adds some discreteThreshold to the aggregation {@link #getDiscreteThresholds discreteThresholds}.","!type":"fn(oDiscreteThreshold: sap.suite.ui.commons.statusindicator.DiscreteThreshold) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oDiscreteThreshold":"type: sap.suite.ui.commons.statusindicator.DiscreteThreshold, description: The discreteThreshold to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/suite/ui/commons/statusindicator/StatusIndicator","insertDiscreteThreshold":{"!description":"Inserts a discreteThreshold into the aggregation {@link #getDiscreteThresholds discreteThresholds}.","!type":"fn(oDiscreteThreshold: sap.suite.ui.commons.statusindicator.DiscreteThreshold, iIndex: Number) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oDiscreteThreshold":"type: sap.suite.ui.commons.statusindicator.DiscreteThreshold, description: The discreteThreshold to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the discreteThreshold should be inserted at; for a negative value of <code>iIndex<\/code>, the discreteThreshold is inserted at position 0; for a value greater than the current size of the aggregation, the discreteThreshold is inserted at the last position"},"!static":false},"addPropertyThreshold":{"!description":"Adds some propertyThreshold to the aggregation {@link #getPropertyThresholds propertyThresholds}.","!type":"fn(oPropertyThreshold: sap.suite.ui.commons.statusindicator.PropertyThreshold) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oPropertyThreshold":"type: sap.suite.ui.commons.statusindicator.PropertyThreshold, description: The propertyThreshold to add; if empty, nothing is inserted"},"!static":false},"setLabelPosition":{"!description":"Sets a new value for property {@link #getLabelPosition labelPosition}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Left<\/code>.","!type":"fn(sLabelPosition: sap.suite.ui.commons.statusindicator.LabelPositionType) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sLabelPosition":"type: sap.suite.ui.commons.statusindicator.LabelPositionType, description: New value for property <code>labelPosition<\/code>"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nPredefined sizes for the status indicator.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.SizeType","!category":"function","!static":false},"setShowLabel":{"!description":"Sets a new value for property {@link #getShowLabel showLabel}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowLabel: Boolean) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"},"!static":false},"getGroups":{"!description":"Gets content of aggregation {@link #getGroups groups}.\n\nGroups of shapes that display the status indicator's percentage value. A status indicator must always include at least one group.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.ShapeGroup]","!category":"function","!static":false},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAriaLabel: String) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"insertGroup":{"!description":"Inserts a group into the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.statusindicator.ShapeGroup, iIndex: Number) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.statusindicator.ShapeGroup, description: The group to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the group should be inserted at; for a negative value of <code>iIndex<\/code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"},"!static":false},"removeGroup":{"!description":"Removes a group from the aggregation {@link #getGroups groups}.","!type":"fn(vGroup: Number | String | sap.suite.ui.commons.statusindicator.ShapeGroup) -> sap.suite.ui.commons.statusindicator.ShapeGroup","!category":"function","parameters":{"vGroup":"type: int|string|sap.suite.ui.commons.statusindicator.ShapeGroup, description: The group to remove or its index or id"},"!static":false},"removeAllDiscreteThresholds":{"!description":"Removes all the controls from the aggregation {@link #getDiscreteThresholds discreteThresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.DiscreteThreshold]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new StatusIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getValue value} : int (default: 0)<\/li>\n<li>{@link #getViewBox viewBox} : string<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<li>{@link #getSize size} : sap.suite.ui.commons.statusindicator.SizeType (default: None)<\/li>\n<li>{@link #getLabelPosition labelPosition} : sap.suite.ui.commons.statusindicator.LabelPositionType (default: Left)<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.suite.ui.commons.statusindicator.ShapeGroup[] (default)<\/li>\n<li>{@link #getPropertyThresholds propertyThresholds} : sap.suite.ui.commons.statusindicator.PropertyThreshold[]<\/li>\n<li>{@link #getDiscreteThresholds discreteThresholds} : sap.suite.ui.commons.statusindicator.DiscreteThreshold[]<\/li>\n<li>{@link #getLabel label} : sap.m.Text<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setViewBox":{"!description":"Sets a new value for property {@link #getViewBox viewBox}.\n\nDefines the view box surrounding the shapes included in the status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sViewBox: String) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sViewBox":"type: string, description: New value for property <code>viewBox<\/code>"},"!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"},"!static":false},"getLabelPosition":{"!description":"Gets current value of property {@link #getLabelPosition labelPosition}.\n\nDefault value is <code>Left<\/code>.","!type":"fn() -> sap.suite.ui.commons.statusindicator.LabelPositionType","!category":"function","!static":false},"destroyDiscreteThresholds":{"!description":"Destroys all the discreteThresholds in the aggregation {@link #getDiscreteThresholds discreteThresholds}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","!static":false},"removeAllGroups":{"!description":"Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.ShapeGroup]","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"indexOfDiscreteThreshold":{"!description":"Checks for the provided <code>sap.suite.ui.commons.statusindicator.DiscreteThreshold<\/code> in the aggregation {@link #getDiscreteThresholds discreteThresholds}. and returns its index if found or -1 otherwise.","!type":"fn(oDiscreteThreshold: sap.suite.ui.commons.statusindicator.DiscreteThreshold) -> Number","!category":"function","parameters":{"oDiscreteThreshold":"type: sap.suite.ui.commons.statusindicator.DiscreteThreshold, description: The discreteThreshold whose index is looked for"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.statusindicator.StatusIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!helpDescription":"The status indicator control displays a value between 0 and 100.\n\nA status indicator may consist of multiple groups that gradually display the value. The shapes in the first group are filled first, the shapes in the second group second, and so on.\n\nThe value of the status indicator is distributed between the groups depending on their weight.\n\nThe filling of the shapes in the groups can be proportional to the value of the status indicator or can be based on thresholds specified in the <code>discreteThresholds<\/code> aggregation.","!proto":"sap.ui.core.Control","getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nPercentage value, between 0 and 100, that the status indicator reflects.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setLabel":{"!description":"Sets the aggregated {@link #getLabel label}.","!type":"fn(oLabel: sap.m.Text) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"oLabel":"type: sap.m.Text, description: The label to set"},"!static":false},"getViewBox":{"!description":"Gets current value of property {@link #getViewBox viewBox}.\n\nDefines the view box surrounding the shapes included in the status indicator.","!type":"fn() -> String","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"},"!static":false},"getShowLabel":{"!description":"Gets current value of property {@link #getShowLabel showLabel}.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeDiscreteThreshold":{"!description":"Removes a discreteThreshold from the aggregation {@link #getDiscreteThresholds discreteThresholds}.","!type":"fn(vDiscreteThreshold: Number | String | sap.suite.ui.commons.statusindicator.DiscreteThreshold) -> sap.suite.ui.commons.statusindicator.DiscreteThreshold","!category":"function","parameters":{"vDiscreteThreshold":"type: int|string|sap.suite.ui.commons.statusindicator.DiscreteThreshold, description: The discreteThreshold to remove or its index or id"},"!static":false},"destroyLabel":{"!description":"Destroys the label in the aggregation {@link #getLabel label}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"},"!static":false},"!category":"class","removePropertyThreshold":{"!description":"Removes a propertyThreshold from the aggregation {@link #getPropertyThresholds propertyThresholds}.","!type":"fn(vPropertyThreshold: Number | String | sap.suite.ui.commons.statusindicator.PropertyThreshold) -> sap.suite.ui.commons.statusindicator.PropertyThreshold","!category":"function","parameters":{"vPropertyThreshold":"type: int|string|sap.suite.ui.commons.statusindicator.PropertyThreshold, description: The propertyThreshold to remove or its index or id"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"removeAllPropertyThresholds":{"!description":"Removes all the controls from the aggregation {@link #getPropertyThresholds propertyThresholds}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.PropertyThreshold]","!category":"function","!static":false},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this control to be used by screen reader software.","!type":"fn() -> String","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nPredefined sizes for the status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sSize: sap.suite.ui.commons.statusindicator.SizeType) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"sSize":"type: sap.suite.ui.commons.statusindicator.SizeType, description: New value for property <code>size<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.StatusIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"setValue":{"!type":"fn(iValue: Number) -> Object","!category":"function","parameters":{"iValue":"type: int, description: Value that should be displayed"},"!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.statusindicator.StatusIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.statusindicator.StatusIndicator<\/code> itself.\n\nThis event is fired when the user clicks or taps the status indicator.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.statusindicator.StatusIndicator<\/code> itself"},"!static":false},"getLabel":{"!description":"Gets content of aggregation {@link #getLabel label}.","!type":"fn() -> sap.m.Text","!category":"function","!static":false},"destroyGroups":{"!description":"Destroys all the groups in the aggregation {@link #getGroups groups}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","!static":false},"getDiscreteThresholds":{"!description":"Gets content of aggregation {@link #getDiscreteThresholds discreteThresholds}.\n\nSpecifies discrete thresholds for the status indicator. If discrete thresholds are set, the status indicator adjusts its appearance to the closest threshold value that is not greater than the actual percentage value of the status indicator. For example, if the following discrete thresholds are specified: <ul> <li><code>value = \"20\"<\/code><\/li> <li><code>value = \"60\"<\/code><\/li> <li><code>value = \"100\"<\/code><\/li> <\/ul> The status indicator displays the following percentage values: <ul> <li><code>0<\/code> if the actual value is 15<\/li> <li><code>20<\/code> if the actual value is 20<\/li> <li><code>20<\/code> if the actual value is 55<\/li> <li><code>60<\/code> if the actual value is 60<\/li> <li><code>60<\/code> if the actual value is 79<\/li> <li><code>100<\/code> if the actual value is 100<\/li> <\/ul> Please note that these thresholds affect only the appearance of the status inicator, not its stored value.","!type":"fn() -> [sap.suite.ui.commons.statusindicator.DiscreteThreshold]","!category":"function","!static":false},"!description":"The status indicator control displays a value between 0 and 100.\n\nA status indicator may consist of multiple groups that gradually display the value. The shapes in the first group are filled first, the shapes in the second group second, and so on.\n\nThe value of the status indicator is distributed between the groups depending on their weight.\n\nThe filling of the shapes in the groups can be proportional to the value of the status indicator or can be based on thresholds specified in the <code>discreteThresholds<\/code> aggregation.","removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"destroyPropertyThresholds":{"!description":"Destroys all the propertyThresholds in the aggregation {@link #getPropertyThresholds propertyThresholds}.","!type":"fn() -> sap.suite.ui.commons.statusindicator.StatusIndicator","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.StatusIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.imageeditor.FilterHistoryItem":{"getValue":{"!description":"Gets the filter value (its intensity).","!type":"fn() -> Number","!category":"function","!static":false},"getType":{"!description":"Gets the type of the filter applied.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that apply filters to the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#sepia}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#grayscale}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#saturate}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#invert}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#brightness}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#contrast}.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.FilterHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getUnit":{"!description":"Gets the units of the filter value.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new FilterHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/FilterHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.FilterHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the methods that apply filters to the image, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#sepia}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#grayscale}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#saturate}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#invert}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#brightness}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#contrast}."},"sap.suite.ui.commons.statusindicator.FillingType":{"Linear":{"!description":"The shape is filled with a linear gradient.","!type":"String","!category":"enum"},"!description":"The type of filling.","!category":"static class","None":{"!description":"No filling is applied.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Circular":{"!description":"Clockwise or counterclockwise circular filling is applied.\n\n<p> For details, see {@link sap.suite.ui.commons.statusindicator.FillingDirectionType}. <\/p>","!type":"String","!category":"enum"}},"sap.suite.ui.commons":{"total":{"!description":"The total value. The total value is represented by a full circle, or 360 degrees value on the chart.","!type":"Number","!category":"enum"},"external":{"!description":"Indicates if the external representation of the current view is rendered.","!type":"Boolean","!category":"enum"},"ProcessFlowConnectionLabelState":"sap.suite.ui.commons.ProcessFlowConnectionLabelState","fullScreen":{"!description":"Display the chart and the toolbar in full screen or normal mode.","!type":"Boolean","!category":"enum"},"allowSuggestions":{"!description":"Defines whether autocomplete suggestions are shown when you type. Available only for desktop devices.","!type":"Boolean","!category":"enum"},"totalUnits":{"!description":"Number of units that are displayed by ticks. The PageUp and PageDown keys navigate according to these units.","!type":"Number","!category":"enum"},"showIcons":{"!description":"Shows an icon on the timeline axis as an anchor for each entry node. If set to <code>false<\/code>, all icons are replaced by dots.","!type":"Boolean","!category":"enum"},"colorPalette":{"!description":"The color palette for the chart. If this property is set, semantic colors defined in AreaMicroChartItem are ignored. As a result, colors of the palette are assigned to each line. When all the palette colors are used up, assignment of the colors starts again from the beginning of the palette.","!type":"[String]","!category":"enum"},"role":{"!description":"Identifies the element role.","!type":"String","!category":"enum"},"imageTooltip":{"!description":"A tooltip that is set for an image.","!type":"String","!category":"enum"},"showPersonalization":{"!description":"Set to true to display the personalization icon. Set to false to hide it.","!type":"Boolean","!category":"enum"},"FacetOverviewHeight":"sap.suite.ui.commons.FacetOverviewHeight","backgroundDesign":{"!description":"Specifies the background color of the content. The visualization of the different options depends on the used theme.","!type":"sap.m.BackgroundDesign","!category":"enum"},"iconSrc":{"!description":"Icon to be displayed in the middle of the control.","!type":"sap.ui.core.URI","!category":"enum"},"allowComparisonOperators":{"!description":"Defines whether comparison operators (<, >, <=, >=, =, !=) are allowed.","!type":"Boolean","!category":"enum"},"MicroAreaChartLabel":"sap.suite.ui.commons.MicroAreaChartLabel_obj","firstTitle":{"!description":"First Line of the Thing Inspector Title","!type":"String","!category":"enum"},"image":{"!description":"The image associated with the feed item.","!type":"sap.ui.core.URI","!category":"enum"},"networkgraph":"sap.suite.ui.commons.networkgraph","doubleFontSize":{"!description":"If true, the value text will have 2 rem, if false - 1 rem.","!type":"Boolean","!category":"enum"},"header":{"!description":"Stores the Note Taker card header.","!type":"String","!category":"enum"},"valueUnit":{"!description":"The percent sign, currency symbol, or unit for a value.","!type":"String","!category":"enum"},"minHeight":{"!description":"The minimal height of the control.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ProcessFlowConnectionType":"sap.suite.ui.commons.ProcessFlowConnectionType","titleAbbreviation":{"!description":"Title abbreviation is used in zoom level 'Three'.","!type":"String","!category":"enum"},"DynamicContainer":"sap.suite.ui.commons.DynamicContainer_obj","showFullScreen":{"!description":"Set to true to display the full screen icon. Set to false to hide it.","!type":"Boolean","!category":"enum"},"CalculationBuilderOperatorType":"sap.suite.ui.commons.CalculationBuilderOperatorType","CalculationBuilderItem":"sap.suite.ui.commons.CalculationBuilderItem_obj","view":{"!description":"The view of the chart.","!type":"sap.suite.ui.microchart.AreaMicroChartViewType","!category":"enum"},"iconTooltip":{"!description":"Tooltip for an icon displayed on the timeline axis.","!type":"String","!category":"enum"},"RepeaterViewConfiguration":"sap.suite.ui.commons.RepeaterViewConfiguration_obj","LinkActionSheet":"sap.suite.ui.commons.LinkActionSheet_obj","ProcessFlowLaneHeader":"sap.suite.ui.commons.ProcessFlowLaneHeader_obj","maxYValue":{"!description":"If this property is set it indicates the value X axis ends with.","!type":"Number","!category":"enum"},"enableModelFilter":{"!description":"Enables filtering directly on the binding level. If set to <code>true<\/code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false<\/code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold<\/code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.","!type":"Boolean","!category":"enum"},"rowSpan":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.1 It is not used any more for the laoyut calculations in UnifiedThingInspector.<br>Defines the number of rows that the control represents in an external layout.","!type":"Number","!category":"enum"},"tags":{"!description":"The list of tags selected for addition to a new note card.","!type":"Object","!category":"enum"},"ProcessFlowNodeState":"sap.suite.ui.commons.ProcessFlowNodeState","max":{"!description":"Maximal value of the slider\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"transitionTime":{"!description":"The time of the slide changing in milliseconds.","!type":"Number","!category":"enum"},"actualValueLabel":{"!description":"If set, displays a specified label instead of the numeric actual value.","!type":"String","!category":"enum"},"ViewRepeater":"sap.suite.ui.commons.ViewRepeater_obj","ariaLabel":{"!description":"ARIA label for this control to be used by screen reader software.","!type":"String","!category":"enum"},"iconPath":{"!description":"A path to the BusinessCard icon.","!type":"sap.ui.core.URI","!category":"enum"},"readOnly":{"!description":"Defines whether the control is read-only.","!type":"Boolean","!category":"enum"},"showLabel":{"!description":"Determines if the labels are displayed or not.","!type":"Boolean","!category":"enum"},"flagActionEnabled":{"!description":"Flag action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"alignContent":{"!description":"The alignment of the content. If not set, the <code>Left<\/code> alignment type is used.","!type":"sap.suite.ui.microchart.HorizontalAlignmentType","!category":"enum"},"ProcessFlowLaneState":"sap.suite.ui.commons.ProcessFlowLaneState","y":{"!description":"Y value for the given point.","!type":"Number","!category":"enum"},"x":{"!description":"X value for the given point.","!type":"Number","!category":"enum"},"expression":{"!description":"Holds the arithmetic expression.<br> Not usable for clearing. If you want to clear the whole expression, call the <code>removeAllItems<\/code> method.","!type":"String","!category":"enum"},"body":{"!description":"The text inside the note card.","!type":"String","!category":"enum"},"NoteTakerCard":"sap.suite.ui.commons.NoteTakerCard_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"showLegend":{"!description":"Set to true to display the charts' legends. Set to false to hide them. See also showLegendButton.","!type":"Boolean","!category":"enum"},"displayValue1":{"!description":"If this property is set, it is rendered instead of value1.","!type":"String","!category":"enum"},"displayValue2":{"!description":"If this property is set, it is rendered instead of value2.","!type":"String","!category":"enum"},"transactionsVisible":{"!description":"If set to true, the Transaction button appears.","!type":"Boolean","!category":"enum"},"flagState":{"!description":"State of Flag Action","!type":"Boolean","!category":"enum"},"smallStepWidth":{"!description":"The grip can only be moved in steps of this width.","!type":"Number","!category":"enum"},"formattedLabel":{"!description":"If set to <code>true<\/code>, the <code>fractionLabel<\/code> property is used instead of the combination of the fraction value and scaling factor. <br>The default value is <code>false<\/code>, which means that the fraction value, defined by the <code>fraction<\/code> property, and the scaling factor, defined by the <code>fractionScale<\/code> property are displayed separately.","!type":"Boolean","!category":"enum"},"height":{"!description":"The height of the control. Only applicable if the responsive property is set to true.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ColumnData":"sap.suite.ui.commons.ColumnData_obj","description":{"!description":"The description of the thing.","!type":"String","!category":"enum"},"GenericTile":"sap.suite.ui.commons.GenericTile_obj","priority":{"!description":"Priority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.","!type":"Number","!category":"enum"},"lazyLoading":{"!description":"Enables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.","!type":"Boolean","!category":"enum"},"BulletChartData":"sap.suite.ui.commons.BulletChartData_obj","key":{"!description":"A key for a filter criterion. Each filter criterion must have a unique key.","!type":"String","!category":"enum"},"showFractions":{"!description":"If set to <code>true<\/code>, the fraction values are displayed next to the chart. The default setting is <code>true<\/code>.","!type":"Boolean","!category":"enum"},"enableAllInFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored.<br>Enables to add 'All' at the beginning of the filter list.","!type":"Boolean","!category":"enum"},"MonitoringTile":"sap.suite.ui.commons.MonitoringTile_obj","label":{"!description":"The line title.","!type":"String","!category":"enum"},"ThingGroupDesign":"sap.suite.ui.commons.ThingGroupDesign","editable":{"!description":"Using the slider interactively requires value \"true\".","!type":"Boolean","!category":"enum"},"deltaDisplayValue":{"!description":"If this property is set, it is rendered instead of a calculated delta.","!type":"String","!category":"enum"},"TargetFilterColumn":"sap.suite.ui.commons.TargetFilterColumn_obj","NewsContent":"sap.suite.ui.commons.NewsContent_obj","wrapLabels":{"!description":"Set to true to wrap text labels in the dialog that opens when the user clicks or taps the 'Details' button.","!type":"Boolean","!category":"enum"},"showDividers":{"!description":"If set to true, shows dividers between scrollable items.","!type":"Boolean","!category":"enum"},"BusinessCard":"sap.suite.ui.commons.BusinessCard_obj","CommonBackground":"sap.suite.ui.commons.CommonBackground","activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button. Both active and default icon properties should be defined and have the same type: image or icon font. If the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!type":"sap.ui.core.URI","!category":"enum"},"indicator":{"!description":"The indicator arrow that shows value deviation.","!type":"sap.suite.ui.commons.DeviationIndicator","!category":"enum"},"showSeparator":{"!description":"Defines whether a connector line should be displayed between this node and the node that follows it.","!type":"Boolean","!category":"enum"},"CalculationBuilderFunction":"sap.suite.ui.commons.CalculationBuilderFunction_obj","userNameClickable":{"!description":"Makes the user name clickable. Clicking the name fires a userNameClicked event.","!type":"Boolean","!category":"enum"},"HeaderContainerView":"sap.suite.ui.commons.HeaderContainerView","disabledDefaultTokens":{"!description":"Default operators or functions that are disabled. Delimiter for multiple items is ';'.<br> Example of usage: +;-;sqrt","!type":"String","!category":"enum"},"allowLogicalOperators":{"!description":"Defines whether logical operators (AND, OR, XOR, NOT) are allowed.","!type":"Boolean","!category":"enum"},"drawData":{"!description":"This is an array of the following attributes for one element: 1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters: - \"r\" for right, - \"t\" for top, - \"l\" for left, - \"b\" for bottom. 2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid. If the target node is planned, the line is dashed. 3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control. 4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.","!type":"[Object]","!category":"enum"},"style":{"!description":"Style of the control (e.g. emphasized, accept)","!type":"sap.ui.commons.ButtonStyle","!category":"enum"},"name":{"!description":"The name of the thing.","!type":"String","!category":"enum"},"hasPopup":{"!description":"Indicates that the element has a popup context menu or a submenu.","!type":"String","!category":"enum"},"fraction":{"!description":"The fraction value that defines the size of the colored sector. <br>This property must be set to a value that is a fraction of the <code>total<\/code> value defined for the {@link sap.suite.ui.microchart.HarveyBallMicroChart}.","!type":"Number","!category":"enum"},"imageSrc":{"!description":"Source for image.","!type":"sap.ui.core.URI","!category":"enum"},"destroyPageOnBack":{"!description":"If set to true, destroys a page when the user chooses the Back button to leave this page.","!type":"Boolean","!category":"enum"},"entitySet":{"!description":"The name of the entity set from OData service metadata. The filtering applies to this entity set.","!type":"String","!category":"enum"},"forecastValue":{"!description":"The forecast value that is displayed in Actual mode only. If set, the forecast value bar appears in the background of the actual value bar.","!type":"Number","!category":"enum"},"showLegendButton":{"!description":"Set to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.","!type":"Boolean","!category":"enum"},"showTimeFilter":{"!description":"Shows the time range filter in the filter menu.","!type":"Boolean","!category":"enum"},"HeaderContainer":"sap.suite.ui.commons.HeaderContainer_obj","source":{"!description":"The source of the feed item.","!type":"String","!category":"enum"},"thumbUp":{"!description":"Sets positive indication for a new note.","!type":"Boolean","!category":"enum"},"color":{"!description":"The graphic element color.","!type":"sap.m.ValueCSSColor","!category":"enum"},"showHeader":{"!description":"Shows or hides a middle panel named Header that contains general information.","!type":"Boolean","!category":"enum"},"MicroProcessFlow":"sap.suite.ui.commons.MicroProcessFlow_obj","MicroAreaChartItem":"sap.suite.ui.commons.MicroAreaChartItem_obj","disabled":{"!description":"Disables control if true.","!type":"Boolean","!category":"enum"},"layoutType":{"!description":"Defines the layout type used for the calculation builder.<br> The layout may include a visual editor, a text editor, or both. In addition, you can set the text editor to be read-only.","!type":"String","!category":"enum"},"stepLabels":{"!description":"Display step numbers for the ticks on the slider.","!type":"Boolean","!category":"enum"},"minValue":{"!description":"The minimum scale value for the chart used to define the value range of the scale for comparing different values.","!type":"Number","!category":"enum"},"ValueStatus":"sap.suite.ui.commons.ValueStatus","showSelectionDetails":{"!description":"Set to true to display the 'Details' button that opens a popup dialog with details about the selected data from the VizFrame based chart.","!type":"Boolean","!category":"enum"},"highlight":{"!description":"Defines the highlight state of the list items.\n\nValid values for the <code>highlight<\/code> property are values of the enumerations {@link sap.ui.core.MessageType} or {@link sap.ui.core.IndicationColor}.\n\nAccessibility support is provided through the associated {@link sap.m.ListItemBase#setHighlightText highlightText} property. If the <code>highlight<\/code> property is set to a value of {@link sap.ui.core.MessageType}, the <code>highlightText<\/code> property does not need to be set because a default text is used. However, the default text can be overridden by setting the <code>highlightText<\/code> property. In all other cases the <code>highlightText<\/code> property must be set.","!type":"String","!category":"enum"},"footerColor":{"!description":"The semantic color of the footer.","!type":"sap.m.ValueColor","!category":"enum"},"MicroAreaChart":"sap.suite.ui.commons.MicroAreaChart_obj","showActualValue":{"!description":"If set to true, shows the numeric actual value. This property works in Actual mode only.","!type":"Boolean","!category":"enum"},"DateRangeSlider":"sap.suite.ui.commons.DateRangeSlider_obj","texts":{"!description":"The property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.","!type":"[String]","!category":"enum"},"closeButtonVisible":{"!description":"Defines whether the 'Close' button shall be visible.","!type":"Boolean","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"forceGrowing":{"!description":"If set to <code>true<\/code>, the <i>Show More<\/i> button is displayed when the user scrolls along the timeline axis.","!type":"Boolean","!category":"enum"},"showToolbar":{"!description":"Defines whether the toolbar is visible.","!type":"Boolean","!category":"enum"},"showInputToolbar":{"!description":"Defines whether the input toolbar is visible.<br> The input toolbar contains operators and functions that can be used in the expression.","!type":"Boolean","!category":"enum"},"TileContent":"sap.suite.ui.commons.TileContent_obj","!helpDescription":"SAP UI library: sap.suite.ui.commons","renderType":{"!description":"Determines how the micro process flow should be rendered inside its parent container. <br>When the width of the parent container does not allow for all nodes in the micro process flow to be displayed, you can wrap it inside the parent container or add scrolling icons.","!type":"sap.suite.ui.commons.MicroProcessFlowRenderType","!category":"enum"},"ColumnMicroChartLabel":"sap.suite.ui.commons.ColumnMicroChartLabel_obj","MicroAreaChartPoint":"sap.suite.ui.commons.MicroAreaChartPoint_obj","maxCharacters":{"!description":"The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs.","!type":"Number","!category":"enum"},"VerticalNavigationBar":"sap.suite.ui.commons.VerticalNavigationBar_obj","ProcessFlowNode":"sap.suite.ui.commons.ProcessFlowNode_obj","viewAllTrigger":{"!description":"The View All link appears in the Note Taker card if a body text length exceeds the specified value.","!type":"Number","!category":"enum"},"frameType":{"!description":"Frame types: 1x1, 2x1, and auto.","!type":"sap.m.FrameType","!category":"enum"},"wrapItemsInExpression":{"!description":"Defines whether the expression should be wrapped inside the calculation builder field.<br> If set to <code>false<\/code>, the expression is rearranged into a single scrollable row.","!type":"Boolean","!category":"enum"},"allowColumnLabels":{"!description":"If set to true and there is enough space, top labels of the chart are hidden and labels for each column are shown instead.\n\n* @since 1.60.0","!type":"Boolean","!category":"enum"},"showIntermediary":{"!description":"Defines whether an object should be displayed between this node and the following node. <br>When set to <code>true<\/code>, a vertical red bar is displayed by default. To define custom objects, use the <code>intermediary<\/code> aggregation.","!type":"Boolean","!category":"enum"},"showActualValueInDeltaMode":{"!description":"If set to true, shows the numeric actual value and possibly hides the delta value, if showDeltaValue is set to true. This property works in Delta mode only and has priority over showDeltaValue.","!type":"Boolean","!category":"enum"},"showTopLabels":{"!description":"If this property is set to <code>false<\/code>, both top labels are hidden.","!type":"Boolean","!category":"enum"},"toplevelVariant":{"!description":"Defines whether the navigation bar shall have top-level appearance","!type":"Boolean","!category":"enum"},"imageDescription":{"!description":"Description of a header image that is used in the tooltip.","!type":"String","!category":"enum"},"filterCriteria":{"!description":"A composite object containing criteria for filtering cards in the Note Taker.","!type":"Object","!category":"enum"},"enableBackendFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the enableModelFilter property instead.<br>Enables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.","!type":"Boolean","!category":"enum"},"MicroProcessFlowRenderType":"sap.suite.ui.commons.MicroProcessFlowRenderType","TimelineFilterListItem":"sap.suite.ui.commons.TimelineFilterListItem_obj","ProcessFlowNodeType":"sap.suite.ui.commons.ProcessFlowNodeType","design":{"!description":"The visual design of the control.","!type":"sap.ui.commons.RowRepeaterDesign","!category":"enum"},"defaultImages":{"!description":"A list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.","!type":"[sap.ui.core.URI]","!category":"enum"},"TimelineItem":"sap.suite.ui.commons.TimelineItem_obj","ProcessFlowZoomLevel":"sap.suite.ui.commons.ProcessFlowZoomLevel","fractionLabel":{"!description":"The fraction label. If this property is specified, it is displayed instead of the label that is based on the <code>fraction<\/code> property.","!type":"String","!category":"enum"},"enableBusyIndicator":{"!description":"When this property is set to <code>true<\/code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.","!type":"Boolean","!category":"enum"},"minWidth":{"!description":"The minimal width of the control.","!type":"sap.ui.core.CSSSize","!category":"enum"},"CalculationBuilder":"sap.suite.ui.commons.CalculationBuilder_obj","type":{"!description":"Thing type","!type":"String","!category":"enum"},"CalculationBuilderLogicalOperatorType":"sap.suite.ui.commons.CalculationBuilderLogicalOperatorType","SelectionState":"sap.suite.ui.commons.SelectionState","value":{"!description":"The actual value.","!type":"String","!category":"enum"},"focused":{"!description":"The parameter defines if the node should be displayed in focus state.","!type":"Boolean","!category":"enum"},"TimelineAxisOrientation":"sap.suite.ui.commons.TimelineAxisOrientation","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"numberOfTiles":{"!description":"The number of tiles/rows that will be shown on a single page in this view.","!type":"Number","!category":"enum"},"ProcessFlowConnectionState":"sap.suite.ui.commons.ProcessFlowConnectionState","TileContent2X2":"sap.suite.ui.commons.TileContent2X2_obj","useDefaultValidation":{"!description":"Defines whether default validation should be used.<br> Set this property to <code>false<\/code> to provide your own validation algorithm using {@link sap.suite.ui.commons.CalculationBuilderValidationResult}.<br> If you do not provide your own validation algorithm for this custom function, set this property to <code>true<\/code>, and the function will be validated by the calculation builder.","!type":"Boolean","!category":"enum"},"FrameType":"sap.suite.ui.commons.FrameType","backgroundImage":{"!description":"The URI of the background image.","!type":"sap.ui.core.URI","!category":"enum"},"numberOfRows":{"!description":"Number of rows displayed.","!type":"Number","!category":"enum"},"TimelineFilterType":"sap.suite.ui.commons.TimelineFilterType","Timeline":"sap.suite.ui.commons.Timeline_obj","itemHeight":{"!description":"The height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.","!type":"Number","!category":"enum"},"groupBy":{"!description":"Groups the timeline posts by a field. Only fields that contain date values are supported.","!type":"String","!category":"enum"},"stepWidth":{"!description":"Distance between this node and the following node.<br>When set to a percentage value, the distance is calculated based on the height of the parent container.","!type":"sap.ui.core.CSSSize","!category":"enum"},"cancelButtonText":{"!description":"This is the text displayed in the cancelButton. Default value is \"Cancel\", and it's translated according to the current locale setting. This property will be ignored when running either in iPad or showCancelButton is set to false.","!type":"String","!category":"enum"},"showHeaderBar":{"!description":"Shows the timeline toolbar with search and filter options.","!type":"Boolean","!category":"enum"},"util":"sap.suite.ui.commons.util","scale":{"!description":"The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.","!type":"String","!category":"enum"},"scope":{"!description":"Changes the visualization in order to enable additional actions with the Generic Tile.","!type":"sap.m.GenericTileScope","!category":"enum"},"NoteTakerFeeder":"sap.suite.ui.commons.NoteTakerFeeder_obj","TargetFilter":"sap.suite.ui.commons.TargetFilter_obj","highlighted":{"!description":"The parameter defines if the node should be displayed in highlighted state.","!type":"Boolean","!category":"enum"},"HarveyBallMicroChart":"sap.suite.ui.commons.HarveyBallMicroChart_obj","selected":{"!description":"The parameter defines if the node should be displayed in selected state.","!type":"Boolean","!category":"enum"},"path":{"!description":"The binding path.","!type":"String","!category":"enum"},"lite":{"!description":"The split button is rendered as lite split button.","!type":"Boolean","!category":"enum"},"ImageEditorMode":"sap.suite.ui.commons.ImageEditorMode","TimelineAlignment":"sap.suite.ui.commons.TimelineAlignment","growing":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the growingThreshold property instead, setting it to 0 to disable growing.<br>If set to <code>true<\/code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.","!type":"Boolean","!category":"enum"},"showCancelButton":{"!description":"If this is set to true, there will be a cancel button shown below the action buttons. There won't be any cancel button shown in iPad regardless of this property. The default value is set to true.","!type":"Boolean","!category":"enum"},"valueScale":{"!description":"The scale of a value.","!type":"String","!category":"enum"},"ColumnMicroChart":"sap.suite.ui.commons.ColumnMicroChart_obj","responsive":{"!description":"This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.","!type":"Boolean","!category":"enum"},"subtitle":{"!description":"Subtitle of the Thing Inspector","!type":"String","!category":"enum"},"currentPage":{"!description":"The index of the page currently displayed. The index starts at 1.","!type":"Number","!category":"enum"},"openButtonVisible":{"!description":"Defines whether the 'Open' button shall be visible.","!type":"Boolean","!category":"enum"},"sidebarWidth":{"!description":"The width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is \"244px\".","!type":"sap.ui.core.CSSSize","!category":"enum"},"replyCount":{"!description":"Number of replies to a timeline post.","!type":"Number","!category":"enum"},"showZoom":{"!description":"Set to true to display zoom icons. Set to false to hide them.","!type":"Boolean","!category":"enum"},"ComparisonChart":"sap.suite.ui.commons.ComparisonChart_obj","taccount":"sap.suite.ui.commons.taccount","wheelZoomable":{"!description":"Defines if semantic zooming by mouse wheel events on desktop browsers is enabled.","!type":"Boolean","!category":"enum"},"!module":"sap/suite/ui/commons/library","FeedTile":"sap.suite.ui.commons.FeedTile_obj","headerType":{"!description":"Defines which header type should be used.","!type":"sap.ui.ux3.ThingViewerHeaderType","!category":"enum"},"followState":{"!description":"Follow State of a Thing","!type":"sap.ui.ux3.FollowActionState","!category":"enum"},"ProcessFlowDisplayState":"sap.suite.ui.commons.ProcessFlowDisplayState","quantity":{"!description":"Displays a label with the number of items in the right part of the control.","!type":"Number","!category":"enum"},"styled":{"!description":"Indicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.","!type":"Boolean","!category":"enum"},"noDataText":{"!description":"This text is displayed when the control has no data. The default value is loaded from the component resource bundle.","!type":"String","!category":"enum"},"wrappingType":{"!description":"Defines the type of text wrapping to be used (hyphenated or normal).","!type":"sap.m.WrappingType","!category":"enum"},"ProcessFlowConnection":"sap.suite.ui.commons.ProcessFlowConnection_obj","HeaderCellItem":"sap.suite.ui.commons.HeaderCellItem_obj","isFiltered":{"!description":"Shows whether the note card is hidden by the applied filter.","!type":"Boolean","!category":"enum"},"attachmentUrl":{"!description":"Stores the address of the file attached to the card.","!type":"String","!category":"enum"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!type":"sap.ui.core.TextDirection","!category":"enum"},"favoriteActionEnabled":{"!description":"Favorite action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"totalLabel":{"!description":"The total label. If specified, it is displayed instead of the total value.","!type":"String","!category":"enum"},"headerImage":{"!description":"The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!type":"sap.ui.core.URI","!category":"enum"},"CalculationBuilderValidationResult":"sap.suite.ui.commons.CalculationBuilderValidationResult_obj","sort":{"!description":"Indicates whether the data should be sorted. If set to <code>false<\/code> the data model's default sorting is applied.","!type":"Boolean","!category":"enum"},"FeedItem":"sap.suite.ui.commons.FeedItem_obj","data":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 As of version 1.46, this property was replaced by JSONModel context binding.<br>Data for the Timeline control.","!type":"Object","!category":"enum"},"timestamp":{"!description":"Stores a timestamp of the Note Taker card.","!type":"Object","!category":"enum"},"updateActionEnabled":{"!description":"Update action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"growingThreshold":{"!description":"Number of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0<\/code>, all posts are fetched and displayed on the initial load.","!type":"Number","!category":"enum"},"sortOldestFirst":{"!description":"Whether the oldest item will be displayed first.","!type":"Boolean","!category":"enum"},"!category":"namespace","BulletChartMode":"sap.suite.ui.commons.BulletChartMode","truncateValueTo":{"!description":"The number of characters to display for the value property.","!type":"Number","!category":"enum"},"CalculationBuilderVariable":"sap.suite.ui.commons.CalculationBuilderVariable_obj","maxValue":{"!description":"The maximum scale value for the chart used to define the value range of the scale for comparing different values.","!type":"Number","!category":"enum"},"ComparisonChartView":"sap.suite.ui.commons.ComparisonChartView","thumbDown":{"!description":"Sets negative indication for a new note.","!type":"Boolean","!category":"enum"},"LoadState":"sap.suite.ui.commons.LoadState","InfoTileValueColor":"sap.suite.ui.commons.InfoTileValueColor","UnifiedThingInspector":"sap.suite.ui.commons.UnifiedThingInspector_obj","valueStatus":{"!description":"The status color of the value. Depending on the status the tile is displayed in different colors.","!type":"sap.suite.ui.commons.ValueStatus","!category":"enum"},"!description":"SAP UI library: sap.suite.ui.commons","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!type":"[String]","!category":"enum"},"MicroProcessFlowItem":"sap.suite.ui.commons.MicroProcessFlowItem_obj","overflowItemsToUpperCase":{"!description":"Sets the appearance of the menu items in the overflow menu to uppercase","!type":"Boolean","!category":"enum"},"describedBy":{"!description":"Identifies one or more elements that describe the object. See the related <code>labelledBy<\/code> property.","!type":"String","!category":"enum"},"valueColor":{"!description":"The semantic color of the value.","!type":"sap.suite.ui.commons.InfoTileValueColor","!category":"enum"},"textHeight":{"!description":"Height of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic<\/code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. <\/li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.<\/li> <li> Pixels &ndash; If set to a number followed by <code>px<\/code>, such as <code>50px<\/code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.<\/li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. <\/li> <\/ul>","!type":"String","!category":"enum"},"vertical":{"!description":"Orientation of slider","!type":"Boolean","!category":"enum"},"showItemFilter":{"!description":"Show item filter in filter area.","!type":"Boolean","!category":"enum"},"AriaProperties":"sap.suite.ui.commons.AriaProperties_obj","unread":{"!description":"Activates the unread indicator for the list item, if set to <code>true<\/code>. <b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"labelledBy":{"!description":"Identifies one or more elements that label the current element. See the related <code>label<\/code> and <code>describedBy<\/code> properties.","!type":"String","!category":"enum"},"userPicture":{"!description":"Picture shown next to the user name.","!type":"sap.ui.core.URI","!category":"enum"},"JamContent":"sap.suite.ui.commons.JamContent_obj","contentText":{"!description":"The content text.","!type":"String","!category":"enum"},"HarveyBallMicroChartItem":"sap.suite.ui.commons.HarveyBallMicroChartItem_obj","CalculationBuilderLayoutType":"sap.suite.ui.commons.CalculationBuilderLayoutType","actionsVisible":{"!description":"If set to true, the Actions button appears.","!type":"Boolean","!category":"enum"},"NoteTaker":"sap.suite.ui.commons.NoteTaker_obj","userName":{"!description":"User name shown in the post title.","!type":"String","!category":"enum"},"showBubbles":{"!description":"Property to show or hide bubbles. Default is true.","!type":"Boolean","!category":"enum"},"enabled":{"!description":"Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.","!type":"Boolean","!category":"enum"},"text":{"!description":"Text shown inside the timeline post.","!type":"String","!category":"enum"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!type":"Boolean","!category":"enum"},"width":{"!description":"Sets the width of the Timeline.","!type":"sap.ui.core.CSSSize","!category":"enum"},"labels":{"!description":"Labels to be displayed instead of numbers. Attribute totalUnits and label count should be the same\n\n<b>Note:<\/b> To show the labels <code>stepLabels<\/code> must be activated.","!type":"[String]","!category":"enum"},"DeltaMicroChart":"sap.suite.ui.commons.DeltaMicroChart_obj","size":{"!description":"Updates the size of the tile. If not set then the default size is applied based on the device tile.","!type":"sap.suite.ui.commons.InfoTileSize","!category":"enum"},"scrollTime":{"!description":"Scroll animation time in milliseconds.","!type":"Number","!category":"enum"},"sizeBehavior":{"!description":"If set to <code>TileSizeBehavior.Small<\/code>, the tile size is the same as it would be on a small-screened phone (374px wide and lower), regardless of the screen size of the actual device being used. If set to <code>TileSizeBehavior.Responsive<\/code>, the tile size adapts to the size of the screen.","!type":"sap.m.TileSizeBehavior","!category":"enum"},"enableDoubleSided":{"!description":"If set to <code>true<\/code>, timeline posts are displayed on both sides of the timeline axis.","!type":"Boolean","!category":"enum"},"fractionScale":{"!description":"The scaling factor that is displayed after the fraction value.","!type":"String","!category":"enum"},"TimelineNavigator":"sap.suite.ui.commons.TimelineNavigator_obj","InfoTileSize":"sap.suite.ui.commons.InfoTileSize","attachmentName":{"!description":"The attachment property name for identification on the server side after sending data to the server.","!type":"String","!category":"enum"},"TimelineGroupType":"sap.suite.ui.commons.TimelineGroupType","laneId":{"!description":"Specifies the assignment of the node to the respective lane.","!type":"String","!category":"enum"},"attachmentUploadUrl":{"!description":"Sets the upload attachment URL for a new card.","!type":"String","!category":"enum"},"axisOrientation":{"!description":"Defines the orientation of the timeline. Can be set to <code>Vertical<\/code> or <code>Horizontal<\/code>.","!type":"sap.suite.ui.commons.TimelineAxisOrientation","!category":"enum"},"configurationVisible":{"!description":"If set to true, the Configuration button appears.","!type":"Boolean","!category":"enum"},"showThresholds":{"!description":"If set to true, shows the threshold markers.","!type":"Boolean","!category":"enum"},"children":{"!description":"Defines an array of children of the node.","!type":"[Object]","!category":"enum"},"foldedCorners":{"!description":"This property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner","!type":"Boolean","!category":"enum"},"TargetFilterMeasureColumn":"sap.suite.ui.commons.TargetFilterMeasureColumn_obj","attachmentFilename":{"!description":"Stores the name of the file attached to the card.","!type":"String","!category":"enum"},"CalculationBuilderValidationMode":"sap.suite.ui.commons.CalculationBuilderValidationMode","minXValue":{"!description":"If this property is set it indicates the value X axis ends with.","!type":"Number","!category":"enum"},"ChartContainer":"sap.suite.ui.commons.ChartContainer_obj","icon":{"!description":"The icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!type":"sap.ui.core.URI","!category":"enum"},"pinGrip2":{"!description":"Property to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.","!type":"Boolean","!category":"enum"},"ImageEditorContainerMode":"sap.suite.ui.commons.ImageEditorContainerMode","counter":{"!description":"Defines the counter value of the list items.","!type":"Number","!category":"enum"},"minYValue":{"!description":"If this property is set it indicates the value X axis ends with.","!type":"Number","!category":"enum"},"scrollStep":{"!description":"Number of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.","!type":"Number","!category":"enum"},"threshold":{"!description":"Threshold to fetch the next chunk of data. The minimal threshold can be the numberOfRows of the RR.","!type":"Number","!category":"enum"},"unit":{"!description":"The percent sign, the currency symbol, or the unit of measure.","!type":"String","!category":"enum"},"ChartTile":"sap.suite.ui.commons.ChartTile_obj","statusindicator":"sap.suite.ui.commons.statusindicator","showBottomLabels":{"!description":"If this property is set to <code>false<\/code>, both bottom labels are hidden.","!type":"Boolean","!category":"enum"},"ProcessFlowConnectionLabel":"sap.suite.ui.commons.ProcessFlowConnectionLabel_obj","highlightText":{"!description":"Defines the semantics of the {@link sap.m.ListItemBase#setHighlight highlight} property for accessibility purposes.","!type":"String","!category":"enum"},"GenericTile2X2":"sap.suite.ui.commons.GenericTile2X2_obj","scrollingFadeout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.0 Not Fiori.<br>If set to <code>Area<\/code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons<\/code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None<\/code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.","!type":"sap.suite.ui.commons.TimelineScrollingFadeout","!category":"enum"},"heigth":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.2 Wrong property name<br>Height of the HeaderCell control.","!type":"sap.ui.core.CSSSize","!category":"enum"},"tag":{"!description":"The user-defined object which is returned back to the user by a node click event.","!type":"Object","!category":"enum"},"showMoreSteps":{"!description":"Step size used to increase the numberOfRows value. This feature is only active if value is greater than 0. This will deactivate the paging feature.","!type":"Number","!category":"enum"},"secondTitle":{"!description":"Second Line of the Thing Inspector Title","!type":"String","!category":"enum"},"showSort":{"!description":"Show sort icon in the header bar. For displaying this icon, sorting have to be allowed.","!type":"Boolean","!category":"enum"},"InfoTile":"sap.suite.ui.commons.InfoTile_obj","defaultViewIndex":{"!description":"The index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.","!type":"Number","!category":"enum"},"ThingCollection":"sap.suite.ui.commons.ThingCollection_obj","displayTime":{"!description":"The time of the slide display in milliseconds.","!type":"Number","!category":"enum"},"publicationDate":{"!description":"The date the feed item was published.","!type":"Object","!category":"enum"},"CalculationBuilderGroup":"sap.suite.ui.commons.CalculationBuilderGroup_obj","targetValueLabel":{"!description":"If set, displays a specified label instead of the numeric target value.","!type":"String","!category":"enum"},"followActionEnabled":{"!description":"Follow action enabled/disabled. If disabled the action will be invisible.","!type":"Boolean","!category":"enum"},"validationMode":{"!description":"Defines when the expression is validated.<br> <ul> <li>If set to <code>LiveChange<\/code>, the input is validated as you type.<\/li> <li>If set to <code>FocusOut<\/code>, the input is validated, once you press Enter or Tab.<\/li> <\/ul>","!type":"sap.suite.ui.commons.CalculationBuilderValidationMode","!category":"enum"},"FacetOverview":"sap.suite.ui.commons.FacetOverview_obj","maxXValue":{"!description":"If this property is set, it indicates the value the X-axis ends with.","!type":"Number","!category":"enum"},"DeviationIndicator":"sap.suite.ui.commons.DeviationIndicator","CalculationBuilderComparisonOperatorType":"sap.suite.ui.commons.CalculationBuilderComparisonOperatorType","ThreePanelThingInspector":"sap.suite.ui.commons.ThreePanelThingInspector_obj","ThreePanelThingViewer":"sap.suite.ui.commons.ThreePanelThingViewer_obj","targetValue":{"!description":"The target value that is displayed as a black vertical bar.","!type":"Number","!category":"enum"},"iconSelected":{"!description":"A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.","!type":"sap.ui.core.URI","!category":"enum"},"showSuggestion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>If set to <code>true<\/code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"Boolean","!category":"enum"},"favoriteState":{"!description":"State Of favorite Action","!type":"Boolean","!category":"enum"},"placement":{"!description":"The ActionSheet behaves as an sap.m.Popover in iPad and this property is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferedLeft, sap.m.PlacementType.HorizontalPreferedRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferedTop, sap.m.PlacementType.VerticalPreferedBottom. The default value is sap.m.PlacementType.Bottom.","!type":"sap.m.PlacementType","!category":"enum"},"position":{"!description":"Position of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.","!type":"Number","!category":"enum"},"showViews":{"!description":"Indicates if the view selector panel is shown.","!type":"Boolean","!category":"enum"},"showTargetValue":{"!description":"If set to true, shows the numeric target value.","!type":"Boolean","!category":"enum"},"showLabels":{"!description":"Defines if the connection labels are shown or not.","!type":"Boolean","!category":"enum"},"link":{"!description":"The launch destination.","!type":"sap.ui.core.URI","!category":"enum"},"autoAdjustHeight":{"!description":"Determine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.","!type":"Boolean","!category":"enum"},"imageeditor":"sap.suite.ui.commons.imageeditor","value1":{"!description":"The first value for delta calculation.","!type":"Number","!category":"enum"},"mode":{"!description":"The mode of the GenericTile.","!type":"sap.m.GenericTileMode","!category":"enum"},"value2":{"!description":"The second value for delta calculation.","!type":"Number","!category":"enum"},"pinGrip":{"!description":"Property to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.","!type":"Boolean","!category":"enum"},"useIconTooltip":{"!description":"Decides whether a default Icon tooltip should be used if no tooltip is set.","!type":"Boolean","!category":"enum"},"title":{"!description":"The title of the thing.","!type":"String","!category":"enum"},"showFilterBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the showHeaderBar property instead.<br>Sets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.","!type":"Boolean","!category":"enum"},"CalculationBuilderItemType":"sap.suite.ui.commons.CalculationBuilderItemType","length":{"!description":"The number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.","!type":"Number","!category":"enum"},"filterTitle":{"!description":"Title for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name.","!type":"String","!category":"enum"},"selectorGroupLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.0 Obsolete property as sap.m.Toolbar is replaced by sap.m.OverflowToolbar.<br>Custom Label for Selectors Group.","!type":"String","!category":"enum"},"visibleNotes":{"!description":"Number of notes to display.","!type":"Number","!category":"enum"},"ProcessFlow":"sap.suite.ui.commons.ProcessFlow_obj","showDeltaValue":{"!description":"If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.","!type":"Boolean","!category":"enum"},"LaunchTile":"sap.suite.ui.commons.LaunchTile_obj","iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text .","!type":"Boolean","!category":"enum"},"enableSocial":{"!description":"Adds a <i>Reply<\/i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.","!type":"Boolean","!category":"enum"},"min":{"!description":"Minimal value of the slider.\n\n<b>Note:<\/b> If <code>min<\/code> is larger than <code>max<\/code> both values will be switched","!type":"Number","!category":"enum"},"logo":{"!description":"A URL of the source of an image known as key visual. This can be a company logo or other essential graphics.","!type":"sap.ui.core.URI","!category":"enum"},"ChartContainerContent":"sap.suite.ui.commons.ChartContainerContent_obj","CalculationBuilderFunctionType":"sap.suite.ui.commons.CalculationBuilderFunctionType","footer":{"!description":"The footer text of the tile.","!type":"String","!category":"enum"},"deltaValueLabel":{"!description":"If set, displays a specified label instead of the calculated numeric delta value.","!type":"String","!category":"enum"},"showValueMarker":{"!description":"If set to true, shows the value marker.","!type":"Boolean","!category":"enum"},"displayDuration":{"!description":"The length of time in seconds the control displays each feed item. Default value is 5 seconds.","!type":"Number","!category":"enum"},"fixedRowHeight":{"!description":"Row height adapts to rendered content. If a fixed height is specified the cells have a maximum height and the overflow will be hidden.","!type":"sap.ui.core.CSSSize","!category":"enum"},"BulletChart":"sap.suite.ui.commons.BulletChart_obj","displayArticleImage":{"!description":"To display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.","!type":"Boolean","!category":"enum"},"SplitButton":"sap.suite.ui.commons.SplitButton_obj","showSearch":{"!description":"Sets the search field visibility on the timeline toolbar.","!type":"Boolean","!category":"enum"},"enableScroll":{"!description":"If set to <code>true<\/code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.","!type":"Boolean","!category":"enum"},"uid":{"!description":"The card ID. This property should be set by an application developer.","!type":"String","!category":"enum"},"KpiTile":"sap.suite.ui.commons.KpiTile_obj","InfoTileTextColor":"sap.suite.ui.commons.InfoTileTextColor","UnifiedThingGroup":"sap.suite.ui.commons.UnifiedThingGroup_obj","heightType":{"!description":"Indicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.","!type":"sap.suite.ui.commons.FacetOverviewHeight","!category":"enum"},"cardViewAllTrigger":{"!description":"The View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.","!type":"Number","!category":"enum"},"showSearchField":{"!description":"Indicates if the search field panel is shown.","!type":"Boolean","!category":"enum"},"nodeId":{"!description":"Node identifier.","!type":"String","!category":"enum"},"MonitoringContent":"sap.suite.ui.commons.MonitoringContent_obj","animateTextChange":{"!description":"If set to true, changing of the value is animated.","!type":"Boolean","!category":"enum"},"zoomLevel":{"!description":"Current zoom level for the lane header.","!type":"sap.suite.ui.commons.ProcessFlowZoomLevel","!category":"enum"},"DateRangeScroller":"sap.suite.ui.commons.DateRangeScroller_obj","HeaderCell":"sap.suite.ui.commons.HeaderCell_obj","iconHovered":{"!description":"A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.","!type":"sap.ui.core.URI","!category":"enum"},"ComparisonData":"sap.suite.ui.commons.ComparisonData_obj","DateRangeSliderInternal":"sap.suite.ui.commons.DateRangeSliderInternal_obj","status":{"!description":"Indicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information<\/code> <\/li> <li> <code>Success<\/code> <\/li> <li> <code>Warning<\/code> <\/li> <li> <code>Error<\/code> <\/li> <\/ul>","!type":"String","!category":"enum"},"PictureZoomIn":"sap.suite.ui.commons.PictureZoomIn_obj","scaleColor":{"!description":"The background color of the scale. The theming is enabled only for the default value of this property.","!type":"sap.suite.ui.microchart.CommonBackgroundType","!category":"enum"},"displayValue":{"!description":"If this property is set then it will be displayed instead of value.","!type":"String","!category":"enum"},"FeedItemHeader":"sap.suite.ui.commons.FeedItemHeader_obj","allowStringConstants":{"!description":"Defines whether string constants are allowed.<br> If set to <code>true<\/code>, the calculation builder doesn't validate custom strings as errors.","!type":"Boolean","!category":"enum"},"MicroAreaChartView":"sap.suite.ui.commons.MicroAreaChartView","alignment":{"!description":"Defines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal<\/code>, the <code>Right<\/code> value is interpreted as bottom alignment and the <code>Left<\/code> value as top alignment.","!type":"sap.suite.ui.commons.TimelineAlignment","!category":"enum"},"dateTime":{"!description":"Date and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date<\/code> object. <\/li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. <\/li> <li> A string with an integer representing Unix time in milliseconds. <\/li> <li> A string that contains <code>Date([number])<\/code>, where <code>[number]<\/code> represents Unix time in milliseconds. <\/li> <\/ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse<\/code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior.","!type":"Object","!category":"enum"},"TimelineScrollingFadeout":"sap.suite.ui.commons.TimelineScrollingFadeout","state":{"!description":"State of the node.","!type":"sap.suite.ui.commons.ProcessFlowNodeState","!category":"enum"},"scrollable":{"!description":"By default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.","!type":"Boolean","!category":"enum"},"isResponsive":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.60 undefined<br>If this set to true, width and height of the control are determined by the width and height of the container in which the control is placed or by the width and height property.","!type":"Boolean","!category":"enum"},"filterValue":{"!description":"Text for the items filter name. This text will be used as the name of the items filter in the filter popover.","!type":"String","!category":"enum"},"allTags":{"!description":"Contains an array of the String type tags available for selection during the card update.","!type":"Object","!category":"enum"},"itemMinWidth":{"!description":"The minimal width of the tile for the current view. Only applicable if \"responsive\" property is set to true.","!type":"Number","!category":"enum"},"blocked":{"!description":"Whether the control is currently in blocked state.","!type":"Boolean","!category":"enum"},"stateText":{"!description":"Description of the state, for example \"Status OK\".","!type":"String","!category":"enum"},"groupByType":{"!description":"Groups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None<\/code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.","!type":"sap.suite.ui.commons.TimelineGroupType","!category":"enum"},"ChartContainerToolbarPlaceholder":"sap.suite.ui.commons.ChartContainerToolbarPlaceholder_obj","title1":{"!description":"The first value title.","!type":"String","!category":"enum"},"showTotal":{"!description":"If set to <code>true<\/code>, the total value is displayed next to the chart. The default setting is <code>true<\/code>.","!type":"Boolean","!category":"enum"},"title2":{"!description":"The second value title.","!type":"String","!category":"enum"},"NumericTile":"sap.suite.ui.commons.NumericTile_obj","shrinkable":{"!description":"If it is set to true, the height of the control is defined by its content.","!type":"Boolean","!category":"enum"},"failedText":{"!description":"The message that appears when the control is in the Failed state.","!type":"String","!category":"enum"},"isTitleClickable":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 According to the new requirement there should be only one click event for each node (click on the whole node \u2013 see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either.<br>Specifies if the node title is clickable.","!type":"Boolean","!category":"enum"},"totalScale":{"!description":"The scaling factor that is displayed next to the total value.","!type":"String","!category":"enum"},"subheader":{"!description":"The subheader.","!type":"String","!category":"enum"},"group":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the groupByType property instead.<br>Groups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.","!type":"Boolean","!category":"enum"}},"sap.suite.ui.commons.ProcessFlowLaneHeader":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nArray of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowLaneHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLaneId":{"!description":"Sets a new value for property {@link #getLaneId laneId}.\n\nInternal identification of the header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLaneId: String) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"sLaneId":"type: string, description: New value for property <code>laneId<\/code>"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setZoomLevel":{"!description":"Sets a new value for property {@link #getZoomLevel zoomLevel}.\n\nCurrent zoom level for the lane header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sZoomLevel: sap.suite.ui.commons.ProcessFlowZoomLevel) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"sZoomLevel":"type: sap.suite.ui.commons.ProcessFlowZoomLevel, description: New value for property <code>zoomLevel<\/code>"},"!static":false},"setPosition":{"!description":"Sets a new value for property {@link #getPosition position}.\n\nPosition of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iPosition: Number) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"iPosition":"type: int, description: New value for property <code>position<\/code>"},"!static":false},"getZoomLevel":{"!description":"Gets current value of property {@link #getZoomLevel zoomLevel}.\n\nCurrent zoom level for the lane header.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowZoomLevel","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ProcessFlowLaneHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIconSrc iconSrc} : sap.ui.core.URI<\/li>\n<li>{@link #getPosition position} : int<\/li>\n<li>{@link #getLaneId laneId} : string<\/li>\n<li>{@link #getState state} : object<\/li>\n<li>{@link #getZoomLevel zoomLevel} : sap.suite.ui.commons.ProcessFlowZoomLevel<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText information that is displayed in the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"getPosition":{"!description":"Overrides the getter method for property position. It returns the position that was changed due to the artificial merged lanes. Otherwise it returns the position set as a property.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"sap/suite/ui/commons/ProcessFlowLaneHeader","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader<\/code> itself.\n\nThis event is fired when the header is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowLaneHeader<\/code> itself"},"!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText information that is displayed in the control.","!type":"fn() -> String","!category":"function","!static":false},"!description":"This control gives you an overview of documents or items used in a process flow. The process flow is represented by donut chart sections that are colored according to the status of documents. This control can be used in two different ways. If you use it standalone, an event is triggered and can be caught to display the node map. If you use it with nodes or documents, it gives you an overview of the documents or items used in the process flow, which is represented by the donut chart sections.","!category":"class","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nArray of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oState: Object) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"oState":"type: object, description: New value for property <code>state<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowLaneHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getIconSrc":{"!description":"Gets current value of property {@link #getIconSrc iconSrc}.\n\nIcon to be displayed in the middle of the control.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getLaneId":{"!description":"Gets current value of property {@link #getLaneId laneId}.\n\nInternal identification of the header.","!type":"fn() -> String","!category":"function","!static":false},"setIconSrc":{"!description":"Sets a new value for property {@link #getIconSrc iconSrc}.\n\nIcon to be displayed in the middle of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSrc: sap.ui.core.URI) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"sIconSrc":"type: sap.ui.core.URI, description: New value for property <code>iconSrc<\/code>"},"!static":false},"!helpDescription":"This control gives you an overview of documents or items used in a process flow. The process flow is represented by donut chart sections that are colored according to the status of documents. This control can be used in two different ways. If you use it standalone, an event is triggered and can be caught to display the node map. If you use it with nodes or documents, it gives you an overview of the documents or items used in the process flow, which is represented by the donut chart sections.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ProcessFlowLaneHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TargetFilterMeasureColumn":{"getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThis property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.Integer with enabled grouping.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The configuration element for the measure column in the TargetFilter control.","setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nThis property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.Integer with enabled grouping.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oType: Object) -> sap.suite.ui.commons.TargetFilterMeasureColumn","!category":"function","parameters":{"oType":"type: any, description: New value for property <code>type<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilterMeasureColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setPath":{"!description":"Sets a new value for property {@link #getPath path}.\n\nThe binding path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPath: String) -> sap.suite.ui.commons.TargetFilterMeasureColumn","!category":"function","parameters":{"sPath":"type: string, description: New value for property <code>path<\/code>"},"!static":false},"getPath":{"!description":"Gets current value of property {@link #getPath path}.\n\nThe binding path.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new TargetFilterMeasureColumn.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPath path} : string<\/li>\n<li>{@link #getType type} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/TargetFilterMeasureColumn","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TargetFilterMeasureColumn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The configuration element for the measure column in the TargetFilter control."},"sap.suite.ui.commons.util.HtmlElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.HtmlElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sName: String)","prototype":"sap.suite.ui.commons.util.HtmlElement"},"sap.suite.ui.commons.FacetOverviewHeight":{"XS":{"!description":"Extra small height","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>Enumeration of possible FacetOverview height settings.","XXL":{"!description":"Extra extra large height","!type":"String","!category":"enum"},"S":{"!description":"Small height","!type":"String","!category":"enum"},"L":{"!description":"Large height","!type":"String","!category":"enum"},"Auto":{"!description":"Content based height","!type":"String","!category":"enum"},"!category":"static class","M":{"!description":"Medium height","!type":"String","!category":"enum"},"None":{"!description":"No value. The height of the control is defined by depricated height property.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","XL":{"!description":"Extra Large height","!type":"String","!category":"enum"}},"sap.suite.ui.commons.RepeaterViewConfiguration":{"getIconSelected":{"!description":"Gets current value of property {@link #getIconSelected iconSelected}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setItemMinWidth":{"!description":"Sets a new value for property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!type":"fn(iItemMinWidth: Number) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"iItemMinWidth":"type: int, description: New value for property <code>itemMinWidth<\/code>"},"!static":false},"getItemMinWidth":{"!description":"Gets current value of property {@link #getItemMinWidth itemMinWidth}.\n\nThe minimal width of the tile in this view. Only applicable if \"responsive\" property is set to true.\n\nDefault value is <code>-1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setIconHovered":{"!description":"Sets a new value for property {@link #getIconHovered iconHovered}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconHovered: sap.ui.core.URI) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"sIconHovered":"type: sap.ui.core.URI, description: New value for property <code>iconHovered<\/code>"},"!static":false},"setPath":{"!description":"Sets a new value for property {@link #getPath path}.\n\nA path used for rows/titles data binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPath: String) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"sPath":"type: string, description: New value for property <code>path<\/code>"},"!static":false},"setExternal":{"!description":"Sets a new value for property {@link #getExternal external}.\n\nIndicates if the external representation of this view is rendered instead of the row repeater's own content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExternal: Boolean) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"bExternal":"type: boolean, description: New value for property <code>external<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/RepeaterViewConfiguration","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getExternalRepresentation":{"!description":"Gets content of aggregation {@link #getExternalRepresentation externalRepresentation}.\n\nThe control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the \"external\" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setNumberOfTiles":{"!description":"Sets a new value for property {@link #getNumberOfTiles numberOfTiles}.\n\nThe number of tiles/rows that will be shown on a single page in this view.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!type":"fn(iNumberOfTiles: Number) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"iNumberOfTiles":"type: int, description: New value for property <code>numberOfTiles<\/code>"},"!static":false},"getIconHovered":{"!description":"Gets current value of property {@link #getIconHovered iconHovered}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!category":"class","getPath":{"!description":"Gets current value of property {@link #getPath path}.\n\nA path used for rows/titles data binding.","!type":"fn() -> String","!category":"function","!static":false},"setExternalRepresentation":{"!description":"Sets the aggregated {@link #getExternalRepresentation externalRepresentation}.","!type":"fn(oExternalRepresentation: sap.ui.core.Control) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"oExternalRepresentation":"type: sap.ui.core.Control, description: The externalRepresentation to set"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.","!type":"fn() -> String","!category":"function","!static":false},"getItemHeight":{"!description":"Gets current value of property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.","!type":"fn() -> Number","!category":"function","!static":false},"getTemplate":{"!description":"Gets content of aggregation {@link #getTemplate template}.\n\nThe control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the \"itemMinWidth\" property, otherwise some content may appear cropped.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"destroyTemplate":{"!description":"Destroys the template in the aggregation {@link #getTemplate template}.","!type":"fn() -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","!static":false},"setItemHeight":{"!description":"Sets a new value for property {@link #getItemHeight itemHeight}.\n\nThe height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iItemHeight: Number) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"iItemHeight":"type: int, description: New value for property <code>itemHeight<\/code>"},"!static":false},"setIconSelected":{"!description":"Sets a new value for property {@link #getIconSelected iconSelected}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSelected: sap.ui.core.URI) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"sIconSelected":"type: sap.ui.core.URI, description: New value for property <code>iconSelected<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.RepeaterViewConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setResponsive":{"!description":"Sets a new value for property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(oResponsive: Object) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"oResponsive":"type: any, description: New value for property <code>responsive<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new RepeaterViewConfiguration.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getPath path} : string<\/li>\n<li>{@link #getItemMinWidth itemMinWidth} : int (default: -1)<\/li>\n<li>{@link #getNumberOfTiles numberOfTiles} : int (default: -1)<\/li>\n<li>{@link #getResponsive responsive} : any (default: false)<\/li>\n<li>{@link #getExternal external} : boolean (default: false)<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getItemHeight itemHeight} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.Control<\/li>\n<li>{@link #getExternalRepresentation externalRepresentation} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getExternal":{"!description":"Gets current value of property {@link #getExternal external}.\n\nIndicates if the external representation of this view is rendered instead of the row repeater's own content.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>A configuration control defining how the content of the sap.suite.ui.commons.ViewRepeater control is displayed and what data is bound.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor \"icon\" property are defined, the default title \"View ##\" will be shown, where ## is an index number of the view in View Repeater starting from 1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"destroyExternalRepresentation":{"!description":"Destroys the externalRepresentation in the aggregation {@link #getExternalRepresentation externalRepresentation}.","!type":"fn() -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","!static":false},"getNumberOfTiles":{"!description":"Gets current value of property {@link #getNumberOfTiles numberOfTiles}.\n\nThe number of tiles/rows that will be shown on a single page in this view.\n\nDefault value is <code>-1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setTemplate":{"!description":"Sets the aggregated {@link #getTemplate template}.","!type":"fn(oTemplate: sap.ui.core.Control) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"oTemplate":"type: sap.ui.core.Control, description: The template to set"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nA path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.suite.ui.commons.RepeaterViewConfiguration","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"getResponsive":{"!description":"Gets current value of property {@link #getResponsive responsive}.\n\nThis parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the \"itemMinWidth\" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>A configuration control defining how the content of the sap.suite.ui.commons.ViewRepeater control is displayed and what data is bound.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.RepeaterViewConfiguration.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.layout.NoopLayout_obj":{"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.NoopLayout"},"sap.suite.ui.commons.MicroProcessFlow_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroProcessFlow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.MicroProcessFlow"},"sap.suite.ui.commons.CalculationBuilderOperatorType":{"\"/\"":{"!description":"Division.","!type":"String","!category":"enum"},"\")\"":{"!description":"Right bracket.","!type":"String","!category":"enum"},"!description":"Arithmetic operators supported by the calculation builder.","\"(\"":{"!description":"Left bracket.","!type":"String","!category":"enum"},"\"-\"":{"!description":"Subtraction.","!type":"String","!category":"enum"},"\"*\"":{"!description":"Multiplication.","!type":"String","!category":"enum"},"\"+\"":{"!description":"Addition.","!type":"String","!category":"enum"},"!category":"static class","\",\"":{"!description":"Comma.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.statusindicator.Rectangle_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Rectangle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.Rectangle"},"sap.suite.ui.commons.TargetFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TargetFilter"},"sap.suite.ui.commons.FeedItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.FeedItem"},"sap.suite.ui.commons.TargetFilterColumn":{"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nThe type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.String. This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'. In other cases, the filter operator is 'EQ'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oType: Object) -> sap.suite.ui.commons.TargetFilterColumn","!category":"function","parameters":{"oType":"type: any, description: New value for property <code>type<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilterColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setPath":{"!description":"Sets a new value for property {@link #getPath path}.\n\nThe binding path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPath: String) -> sap.suite.ui.commons.TargetFilterColumn","!category":"function","parameters":{"sPath":"type: string, description: New value for property <code>path<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TargetFilterColumn.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPath path} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getLength length} : int (default: 10)<\/li>\n<li>{@link #getType type} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/TargetFilterColumn","getType":{"!description":"Gets current value of property {@link #getType type}.\n\nThe type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descendants. By default, sap.ui.model.type.String. This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'. In other cases, the filter operator is 'EQ'.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The configuration element for the column in the TargetFilter control.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe column title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.TargetFilterColumn","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","getPath":{"!description":"Gets current value of property {@link #getPath path}.\n\nThe binding path.","!type":"fn() -> String","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe column title.","!type":"fn() -> String","!category":"function","!static":false},"getLength":{"!description":"Gets current value of property {@link #getLength length}.\n\nThe number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setLength":{"!description":"Sets a new value for property {@link #getLength length}.\n\nThe number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved. The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!type":"fn(iLength: Number) -> sap.suite.ui.commons.TargetFilterColumn","!category":"function","parameters":{"iLength":"type: int, description: New value for property <code>length<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The configuration element for the column in the TargetFilter control.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TargetFilterColumn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.CalculationBuilderItem":{"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nA key associated with the item. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isExpandable":{"!description":"Checks if the item is expandable.","!type":"fn() -> true","!category":"function","!static":false},"!constructorDescription":"Constructor for a new item used in the expression.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/CalculationBuilderItem","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nA key associated with the item. This property is mandatory.<br> The key is displayed in the text editor area of the calculation builder.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.CalculationBuilderItem","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"getType":{"!description":"Returns the type of the item.<br> Available item types are defined in {@link sap.suite.ui.commons.CalculationBuilderItemType}.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Each of the items used as building blocks to create an arithmetic expression in the calculation builder.","getVariable":{"!description":"Checks if there is a variable object related to this item.","!type":"fn() -> variable","!category":"function","!static":false},"!category":"class","!helpDescription":"Each of the items used as building blocks to create an arithmetic expression in the calculation builder.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.NodeShape":{"!description":"Shape of a node in a network graph.","!category":"static class","Box":{"!description":"Rectangular shape with an optional list of attributes.","!type":"String","!category":"enum"},"Custom":{"!description":"Shape for custom rendering.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Circle":{"!description":"Round shape with a text label below.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.HeaderContainerView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.48 This control is deprecated since 1.48. Please use the equivalent sap.ui.core.Orientation.<br>The list of possible HeaderContainer views.","Vertical":{"!description":"The vertical orientation of the control.","!type":"String","!category":"enum"},"!category":"static class","Horizontal":{"!description":"The horizontal orientation of the control.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.layout.SwimLaneChainLayout":{"!description":"This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph.","layout":{"!description":"Executes the layout algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","_alignCoordinatesWithView":{"!description":"In this override of the generic method for all layouts we want to avoid global margin.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructor for a new SwimLaneChainLayout.","getLayoutRenderType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/layout/SwimLaneChainLayout","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","!helpDescription":"This algorithm uses the klay.js algorithm to rearrange the graph in grid form. It's suitable for process flows and tree-like graphs. It can be used for almost any graph."},"sap.suite.ui.commons.ThreePanelThingInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ThreePanelThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.ThingInspector.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ThreePanelThingInspector"},"sap.suite.ui.commons.statusindicator.DiscreteThreshold":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDefines the value threshold. This value is displayed when the status indicator's percentage value is above or equal to this value but below the value of the next threshold.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Discrete threshold specifies which values should be displayed by the status indicator.","setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAriaLabel: String) -> sap.suite.ui.commons.statusindicator.DiscreteThreshold","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.DiscreteThreshold with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nDefines the value threshold. This value is displayed when the status indicator's percentage value is above or equal to this value but below the value of the next threshold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iValue: Number) -> sap.suite.ui.commons.statusindicator.DiscreteThreshold","!category":"function","parameters":{"iValue":"type: int, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new DiscreteThreshold.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : int (default: 0)<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/DiscreteThreshold","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.DiscreteThreshold.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"Discrete threshold specifies which values should be displayed by the status indicator."},"sap.suite.ui.commons.networkgraph.layout.ForcedDirectedLayout":{"!description":"This algorithm uses the deterministic variant of the force-directed layout algorithm {@link sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout} to arrange the nodes included in the network graph. It can be useful for complex graphs, where {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is not sufficient.","isLayered":{"!description":"Specifies if this layout algorithm distributes nodes into layers. The parent graph may affect the behaviour based on this option.","!type":"fn() -> Boolean","!category":"function","!static":false},"layout":{"!description":"Runs the layout algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new ForceDirectedLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOptimalDistanceConstant optimalDistanceConstant} : float (default: 0.2)<\/li>\n<li>{@link #getMaxIterations maxIterations} : int (default: 200)<\/li>\n<li>{@link #getMaxTime maxTime} : int (default: 2000)<\/li>\n<li>{@link #getInitialTemperature initialTemperature} : float (default: 200)<\/li>\n<li>{@link #getCoolDownStep coolDownStep} : float (default: 1)<\/li>\n<li>{@link #getStaticNodes staticNodes} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm#constructor sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm}\ncan be used as well.","getLayoutRenderType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutRenderType","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/layout/ForceDirectedLayout","!proto":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","!helpDescription":"This algorithm uses the deterministic variant of the force-directed layout algorithm {@link sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout} to arrange the nodes included in the network graph. It can be useful for complex graphs, where {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is not sufficient."},"sap.suite.ui.commons.FeedItemHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedItemHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.FeedItemHeader"},"sap.suite.ui.commons.taccount":{"displayLabel":{"!description":"Defines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.","!type":"Boolean","!category":"enum"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"orderBy":{"!description":"TAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime<\/code> properties.","!type":"String","!category":"enum"},"openingCredit":{"!description":"Opening credit balance of the T account.","!type":"Number","!category":"enum"},"showOverlay":{"!description":"Indicates whether the T account panel should be covered by a translucent overlay screen.<br> This overlay screen can be used to hide the data temporarily.","!type":"Boolean","!category":"enum"},"state":{"!description":"State of the panel that defines how T accounts are displayed.<br> By default, the T accounts included in the panel are displayed as T shapes with debit and credit entries on either side of the T.","!type":"sap.suite.ui.commons.taccount.TAccountPanelState","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"TAccountPanelState":"sap.suite.ui.commons.taccount.TAccountPanelState","measureOfUnit":{"!description":"Unit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.","!type":"String","!category":"enum"},"title":{"!description":"Title of the panel.","!type":"String","!category":"enum"},"!category":"namespace","TAccountPanel":"sap.suite.ui.commons.taccount.TAccountPanel_obj","value":{"!description":"Value of the property.","!type":"String","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"blocked":{"!description":"Whether the control is currently in blocked state.","!type":"Boolean","!category":"enum"},"key":{"!description":"Key of the property.","!type":"String","!category":"enum"},"TAccountGroup":"sap.suite.ui.commons.taccount.TAccountGroup_obj","TAccountItemProperty":"sap.suite.ui.commons.taccount.TAccountItemProperty_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"label":{"!description":"Label of the property.<br>Can be hidden or displayed using the <code>displayLabel<\/code> property.","!type":"String","!category":"enum"},"openingDebit":{"!description":"Opening debit balance of the T account.","!type":"Number","!category":"enum"},"TAccountItem":"sap.suite.ui.commons.taccount.TAccountItem_obj","ariaLabel":{"!description":"Aria label for item.","!type":"String","!category":"enum"},"collapsed":{"!description":"Defines whether the group should appear as collapsed. By default, it appears as expanded.","!type":"Boolean","!category":"enum"},"color":{"!description":"Color applied to the debit or credit entry.","!type":"sap.m.ValueCSSColor","!category":"enum"},"TAccount":"sap.suite.ui.commons.taccount.TAccount_obj","subtitle":{"!description":"Subtitle of the T account.","!type":"String","!category":"enum"},"opening":{"!description":"Mode with opening and closing balance of the T account.","!type":"Boolean","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!type":"[String]","!category":"enum"},"group":{"!description":"Group where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.NewsContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.NewsContent.<br>This control displays the news content text and subheader in a tile.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NewsContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NewsContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new NewsContent.","!module":"sap/suite/ui/commons/NewsContent","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.NewsContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.NewsContent","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.NewsContent.<br>This control displays the news content text and subheader in a tile."},"sap.suite.ui.commons.networkgraph.Graph_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Graph with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Graph"},"sap":{"sap":"sap","!category":"namespace","suite":"sap.suite"},"sap.suite.ui":{"commons":"sap.suite.ui.commons","!category":"namespace"},"sap.suite.ui.commons.statusindicator.ShapeGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.ShapeGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.ShapeGroup"},"sap.suite.ui.commons.TimelineNavigator_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineNavigator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.delegate.ItemNavigation.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oDomRef: Element, aItemDomRefs: [Element], bNotInTabChain?: Boolean, aRows: [Element])","prototype":"sap.suite.ui.commons.TimelineNavigator"},"sap.suite.ui.commons.DateRangeScroller":{"setDateRangeDay":{"!description":"Set a date range equal to a single day, starting with the given initial date.","!type":"fn(dInitialDate: Date) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"dInitialDate":"type: Date, description: The initial date."},"!static":false},"setDateRangeYear":{"!description":"Set a date range that increments/decrements one calendar year at a time. The year date range begins on the first day of the year (beginning of the day) and ends on the last day of the year (end of the day).","!type":"fn(dInitialDate: Date) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"dInitialDate":"type: Date, description: Any date that falls within the desired year."},"!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"},"!static":false},"setDateRangeWeek":{"!description":"Set a date range that steps one week at a time. The starting date is set according to the first day of the week (default is Monday) and the initial date. For example, if the first day of the week is set to Tuesday and the initial date is Wednesday, January 9, 2013, then the starting date will be Tuesday, January 8, 2013.\n\nThe last day of the range is calculated by adding (duration - 1) days to the starting date.","!type":"fn(dInitialDate: Date, oSettings?: Object) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"oSettings":"type: Object, description: Settings for the object","dInitialDate":"type: Date, description: Any date that falls on the desired week. Start/end dates will be adjusted according to the first day of the week."},"!static":false},"setDateRangeMonth":{"!description":"Set a date range that increments/decrements one calendar month at a time. The month date range begins on the first day of the month (beginning of the day) and ends on the last day of the month (end of the day).","!type":"fn(dInitialDate: Date) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"dInitialDate":"type: Date, description: Any date that falls within the desired month."},"!static":false},"!module":"sap/suite/ui/commons/DateRangeScroller","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"},"!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"},"!static":false},"!category":"class","getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeScroller with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDateRange":{"!description":"Returns an object containing startDate and endDate set to the current start and end Date objects.","!type":"fn() -> Object","!category":"function","!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new DateRangeScroller.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeScroller<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The DateRangeScroller provides a method to scroll through a series of time periods, each of which is represented by a starting date and an ending date, known as the date range. The user may scroll to the previous or next date range. Several predefined ranges are supported such as day, week, work week, month, and year.","fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"decrementDateRange":{"!description":"Decrement the date range by a time period increment according to the the date range type and fire the dateChange event.","!type":"fn() -> sap.suite.ui.commons.DateRangeScroller","!category":"function","!static":false},"incrementDateRange":{"!description":"Increment the date range by a time period increment according to the the date range type and fire the dateChange event.","!type":"fn() -> sap.suite.ui.commons.DateRangeScroller","!category":"function","!static":false},"setDateRangeCustom":{"!description":"Set a custom date range beginning with the specified start date that increments/decrements <code>iDuration<\/code> days at a time.","!type":"fn(dInitialDate: Date, iDuration?: Number) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"dInitialDate":"type: Date, description: The initial date for the custom range.","iDuration":"type: int, description: The number of days in the custom range, including the start date."},"!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeScroller<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeScroller<\/code> itself.\n\nThis event is fired whenever the date range is changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeScroller","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeScroller<\/code> itself"},"!static":false},"setDateFormat":{"!description":"Setter for dateFormat which is used for formating the dates If passed object is null or is of incorrect type, control's default formatting will be used.","!type":"fn(oDateFormat: sap.ui.core.format.DateFormat)","!category":"function","parameters":{"oDateFormat":"type: sap.ui.core.format.DateFormat, description: Date format which should be used"},"!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The DateRangeScroller provides a method to scroll through a series of time periods, each of which is represented by a starting date and an ending date, known as the date range. The user may scroll to the previous or next date range. Several predefined ranges are supported such as day, week, work week, month, and year.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.DateRangeScroller.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.imageeditor.ImageEditorContainer":{"destroyCustomEllipseCropItems":{"!description":"Destroys all the customEllipseCropItems in the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.","!type":"fn() -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","!static":false},"removeAllCustomRectangleCropItems":{"!description":"Removes all the controls from the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"getCustomEllipseCropItems":{"!description":"Gets content of aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.\n\nCustom items for Ellipse Crop option panel.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"addCustomResizeItem":{"!description":"Adds some customResizeItem to the aggregation {@link #getCustomResizeItems customResizeItems}.","!type":"fn(oCustomResizeItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"oCustomResizeItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customResizeItem to add; if empty, nothing is inserted"},"!static":false},"destroyCustomResizeItems":{"!description":"Destroys all the customResizeItems in the aggregation {@link #getCustomResizeItems customResizeItems}.","!type":"fn() -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","!static":false},"!module":"sap/suite/ui/commons/imageeditor/ImageEditorContainer","removeCustomEllipseCropItem":{"!description":"Removes a customEllipseCropItem from the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.","!type":"fn(vCustomEllipseCropItem: Number | String | sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"vCustomEllipseCropItem":"type: int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customEllipseCropItem to remove or its index or id"},"!static":false},"addCustomRectangleCropItem":{"!description":"Adds some customRectangleCropItem to the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.","!type":"fn(oCustomRectangleCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"oCustomRectangleCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customRectangleCropItem to add; if empty, nothing is inserted"},"!static":false},"insertCustomEllipseCropItem":{"!description":"Inserts a customEllipseCropItem into the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.","!type":"fn(oCustomEllipseCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem, iIndex: Number) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the customEllipseCropItem should be inserted at; for a negative value of <code>iIndex<\/code>, the customEllipseCropItem is inserted at position 0; for a value greater than the current size of the aggregation, the customEllipseCropItem is inserted at the last position","oCustomEllipseCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customEllipseCropItem to insert; if empty, nothing is inserted"},"!static":false},"getToolbarIds":{"!description":"Returns IDs of the default items in the header toolbar. Can be used for toolbar customization.","!type":"fn() -> Object","!category":"function","!static":false},"indexOfCustomResizeItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem<\/code> in the aggregation {@link #getCustomResizeItems customResizeItems}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomResizeItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> Number","!category":"function","parameters":{"oCustomResizeItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customResizeItem whose index is looked for"},"!static":false},"!category":"class","getImageEditor":{"!description":"Gets content of aggregation {@link #getImageEditor imageEditor}.\n\n{@link sap.suite.ui.commons.imageeditor.ImageEditor} containing the image for editing. <br>If no {@link sap.suite.ui.commons.imageeditor.ImageEditor} is specified, the <code>ImageEditorContainer<\/code> has no effect.","!type":"fn() -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","!static":false},"destroyCustomRectangleCropItems":{"!description":"Destroys all the customRectangleCropItems in the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.","!type":"fn() -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","!static":false},"destroyImageEditor":{"!description":"Destroys the imageEditor in the aggregation {@link #getImageEditor imageEditor}.","!type":"fn() -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","!static":false},"removeCustomRectangleCropItem":{"!description":"Removes a customRectangleCropItem from the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.","!type":"fn(vCustomRectangleCropItem: Number | String | sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"vCustomRectangleCropItem":"type: int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customRectangleCropItem to remove or its index or id"},"!static":false},"removeAllCustomResizeItems":{"!description":"Removes all the controls from the aggregation {@link #getCustomResizeItems customResizeItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditorContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"insertCustomResizeItem":{"!description":"Inserts a customResizeItem into the aggregation {@link #getCustomResizeItems customResizeItems}.","!type":"fn(oCustomResizeItem: sap.suite.ui.commons.imageeditor.CustomSizeItem, iIndex: Number) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the customResizeItem should be inserted at; for a negative value of <code>iIndex<\/code>, the customResizeItem is inserted at position 0; for a value greater than the current size of the aggregation, the customResizeItem is inserted at the last position","oCustomResizeItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customResizeItem to insert; if empty, nothing is inserted"},"!static":false},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nImage editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Filter<\/code>.","!type":"fn(sMode: sap.suite.ui.commons.ImageEditorContainerMode) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"sMode":"type: sap.suite.ui.commons.ImageEditorContainerMode, description: New value for property <code>mode<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ImageEditorContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.suite.ui.commons.ImageEditorContainerMode (default: Filter)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getImageEditor imageEditor} : sap.suite.ui.commons.imageeditor.ImageEditor (default)<\/li>\n<li>{@link #getCustomResizeItems customResizeItems} : sap.suite.ui.commons.imageeditor.CustomSizeItem[]<\/li>\n<li>{@link #getCustomRectangleCropItems customRectangleCropItems} : sap.suite.ui.commons.imageeditor.CustomSizeItem[]<\/li>\n<li>{@link #getCustomEllipseCropItems customEllipseCropItems} : sap.suite.ui.commons.imageeditor.CustomSizeItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getToolbar":{"!description":"Returns the header toolbar of the <code>ImageEditorContainer<\/code> for customization of its content.","!type":"fn() -> sap.m.OverflowToolbar","!category":"function","!static":false},"indexOfCustomRectangleCropItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem<\/code> in the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomRectangleCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> Number","!category":"function","parameters":{"oCustomRectangleCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customRectangleCropItem whose index is looked for"},"!static":false},"addCustomEllipseCropItem":{"!description":"Adds some customEllipseCropItem to the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.","!type":"fn(oCustomEllipseCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"oCustomEllipseCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customEllipseCropItem to add; if empty, nothing is inserted"},"!static":false},"!description":"This control acts as a wrapper around the {@link sap.suite.ui.commons.imageeditor.ImageEditor} control. It provides additional image editing capabilities for the convenience of your users.","removeCustomResizeItem":{"!description":"Removes a customResizeItem from the aggregation {@link #getCustomResizeItems customResizeItems}.","!type":"fn(vCustomResizeItem: Number | String | sap.suite.ui.commons.imageeditor.CustomSizeItem) -> sap.suite.ui.commons.imageeditor.CustomSizeItem","!category":"function","parameters":{"vCustomResizeItem":"type: int|string|sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customResizeItem to remove or its index or id"},"!static":false},"getCustomResizeItems":{"!description":"Gets content of aggregation {@link #getCustomResizeItems customResizeItems}.\n\nCustom items for Resize option panel.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"indexOfCustomEllipseCropItem":{"!description":"Checks for the provided <code>sap.suite.ui.commons.imageeditor.CustomSizeItem<\/code> in the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomEllipseCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem) -> Number","!category":"function","parameters":{"oCustomEllipseCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customEllipseCropItem whose index is looked for"},"!static":false},"removeAllCustomEllipseCropItems":{"!description":"Removes all the controls from the aggregation {@link #getCustomEllipseCropItems customEllipseCropItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"getCustomRectangleCropItems":{"!description":"Gets content of aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.\n\nCustom items for Rectangle Crop option panel.","!type":"fn() -> [sap.suite.ui.commons.imageeditor.CustomSizeItem]","!category":"function","!static":false},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nImage editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.\n\nDefault value is <code>Filter<\/code>.","!type":"fn() -> sap.suite.ui.commons.ImageEditorContainerMode","!category":"function","!static":false},"setImageEditor":{"!description":"Sets the aggregated {@link #getImageEditor imageEditor}.","!type":"fn(oImageEditor: sap.suite.ui.commons.imageeditor.ImageEditor) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"oImageEditor":"type: sap.suite.ui.commons.imageeditor.ImageEditor, description: The imageEditor to set"},"!static":false},"insertCustomRectangleCropItem":{"!description":"Inserts a customRectangleCropItem into the aggregation {@link #getCustomRectangleCropItems customRectangleCropItems}.","!type":"fn(oCustomRectangleCropItem: sap.suite.ui.commons.imageeditor.CustomSizeItem, iIndex: Number) -> sap.suite.ui.commons.imageeditor.ImageEditorContainer","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the customRectangleCropItem should be inserted at; for a negative value of <code>iIndex<\/code>, the customRectangleCropItem is inserted at position 0; for a value greater than the current size of the aggregation, the customRectangleCropItem is inserted at the last position","oCustomRectangleCropItem":"type: sap.suite.ui.commons.imageeditor.CustomSizeItem, description: The customRectangleCropItem to insert; if empty, nothing is inserted"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"This control acts as a wrapper around the {@link sap.suite.ui.commons.imageeditor.ImageEditor} control. It provides additional image editing capabilities for the convenience of your users.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.ImageEditorContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TimelineFilterListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineFilterListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TimelineFilterListItem"},"sap.suite.ui.commons.MicroAreaChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChart.<br>This control displays the history of values as a line mini chart or an area mini chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new MicroAreaChart.","!module":"sap/suite/ui/commons/MicroAreaChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroAreaChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.AreaMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChart.<br>This control displays the history of values as a line mini chart or an area mini chart."},"sap.suite.ui.commons.DynamicContainer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to openui5.<br>The control that displays multiple GenericTile controls as changing slides.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DynamicContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SlideTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new DynamicContainer.","!module":"sap/suite/ui/commons/DynamicContainer","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.DynamicContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.SlideTile","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to openui5.<br>The control that displays multiple GenericTile controls as changing slides."},"sap.suite.ui.commons.TileContent2X2_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TileContent2X2 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.TileContent2X2"},"sap.suite.ui.commons.UnifiedThingInspector_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.UnifiedThingInspector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.UnifiedThingInspector"},"sap.suite.ui.commons.networkgraph.LayoutRenderType":{"TwoColumns":{"!description":"Algorithm that supports nested groups, similar to <code>SwimLanes<\/code>, but arranges them into two columns only: one on the left and one on the right.","!type":"String","!category":"enum"},"!description":"Types of layout algorithms that define the visual features and layout of the network graph.","!category":"static class","!module":"sap/suite/ui/commons/library","SwimLanes":{"!description":"Algorithm that arranges nodes into swim lanes, which are single-layer groups.","!type":"String","!category":"enum"},"LayeredWithGroups":{"!description":"Algorithm that arranges nodes into layers and ensures support for free-form groups.","!type":"String","!category":"enum"},"Forces":{"!description":"Algorithm that arranges the nodes freely in a force-directed manner, based on the attractive and repulsive forces within the graph.<br> This layout algorithm ignores node groups, so all nodes appear as standalone nodes not grouped in any way.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.ProcessFlowConnectionState":{"Regular":{"!description":"Regular connection.","!type":"String","!category":"enum"},"!description":"Describes the state of a connection.","Dimmed":{"!description":"Dimmed connection.","!type":"String","!category":"enum"},"!category":"static class","Selected":{"!description":"Selected connection.","!type":"String","!category":"enum"},"Highlighted":{"!description":"Highlighted connection.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.SplitButton":{"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getLite":{"!description":"Gets current value of property {@link #getLite lite}.\n\nThe split button is rendered as lite split button.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText to be displayed for the action button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sText: String) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/SplitButton","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the action button.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText to be displayed for the action button.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"destroyMenu":{"!description":"Destroys the menu in the aggregation {@link #getMenu menu}.","!type":"fn() -> sap.suite.ui.commons.SplitButton","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"},"!static":false},"setLite":{"!description":"Sets a new value for property {@link #getLite lite}.\n\nThe split button is rendered as lite split button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bLite: Boolean) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"bLite":"type: boolean, description: New value for property <code>lite<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.SplitButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nInvisible split buttons are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"setMenu":{"!description":"Set the menu to the button and set menu item for the action button. The menu item for action button must exist in the menu. If it doesn't exist the first menu item is set by default.","!type":"fn(oMenu: sap.ui.commons.Menu, oMenuItem: sap.ui.commons.MenuItem) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"oMenuItem":"type: sap.ui.commons.MenuItem, description: Item of menu","oMenu":"type: sap.ui.commons.Menu, description: Menu"},"!static":false},"!constructorDescription":"Constructor for a new SplitButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getLite lite} : boolean (default: false)<\/li>\n<li>{@link #getStyle style} : sap.ui.commons.ButtonStyle (default: Default)<\/li>\n<li>{@link #getStyled styled} : boolean (default: true)<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.ui.commons.Menu<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getStyle":{"!description":"Gets current value of property {@link #getStyle style}.\n\nStyle of the control (e.g. emphasized, accept)\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.ui.commons.ButtonStyle","!category":"function","!static":false},"setIconFirst":{"!description":"Sets a new value for property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIconFirst: Boolean) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"bIconFirst":"type: boolean, description: New value for property <code>iconFirst<\/code>"},"!static":false},"setStyled":{"!description":"Sets a new value for property {@link #getStyled styled}.\n\nIndicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bStyled: Boolean) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"bStyled":"type: boolean, description: New value for property <code>styled<\/code>"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nInvisible split buttons are not rendered\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Split Button Control is a composite control that consists of a default-action Button and a Menu Button control. The default-action button control represents a simple push button. It is used for initiating actions, such as save or print. It can contain some text, an icon, or both; the order of the two can be configured. The action initiated by this button is considered to be the default action for the control, and it must be one of the selections defined in the Menu Button menu. The Menu Button control is a button that opens a menu upon user's click. MenuButton is a composition of the Menu control and the Button control and thus inheriting all features. When a menu item is selected by the user, MenuButton throws an event called itemSelected. The event transfers the itemId of the selected item. As an alternative, the button press event can be used which has a similar behavior.","getIconFirst":{"!description":"Gets current value of property {@link #getIconFirst iconFirst}.\n\nIf set to true (default), the display sequence is 1. icon 2. control text .\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMenu":{"!description":"Gets content of aggregation {@link #getMenu menu}.\n\nMenu that shall be opened when the menu part of the button is clicked","!type":"fn() -> sap.ui.commons.Menu","!category":"function","!static":false},"setStyle":{"!description":"Sets a new value for property {@link #getStyle style}.\n\nStyle of the control (e.g. emphasized, accept)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sStyle: sap.ui.commons.ButtonStyle) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"sStyle":"type: sap.ui.commons.ButtonStyle, description: New value for property <code>style<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon to be displayed as graphical element within the action button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.suite.ui.commons.SplitButton","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Split Button Control is a composite control that consists of a default-action Button and a Menu Button control. The default-action button control represents a simple push button. It is used for initiating actions, such as save or print. It can contain some text, an icon, or both; the order of the two can be configured. The action initiated by this button is considered to be the default action for the control, and it must be one of the selections defined in the Menu Button menu. The Menu Button control is a button that opens a menu upon user's click. MenuButton is a composition of the Menu control and the Button control and thus inheriting all features. When a menu item is selected by the user, MenuButton throws an event called itemSelected. The event transfers the itemId of the selected item. As an alternative, the button press event can be used which has a similar behavior.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.SplitButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getStyled":{"!description":"Gets current value of property {@link #getStyled styled}.\n\nIndicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.suite.ui.commons.statusindicator.Circle_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Circle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.Circle"},"sap.suite.ui.commons.CalculationBuilderValidationResult":{"!description":"This control can be used for creating your own validation algorithm for custom functions.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction}.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderValidationResult with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new validation result.","!module":"sap/suite/ui/commons/CalculationBuilderValidationResult","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.CalculationBuilderValidationResult.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"This control can be used for creating your own validation algorithm for custom functions.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction}."},"sap.suite.ui.commons.ComparisonData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ComparisonData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ComparisonData"},"sap.suite.ui.commons.ProcessFlowNode":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nState of the node.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNodeState","!category":"function","!static":false},"getZoomLevelThreeContent":{"!description":"Gets content of aggregation {@link #getZoomLevelThreeContent zoomLevelThreeContent}.\n\nThe node's content used for zoom level 3. If this aggregation is set, no default content like title and texts is used.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getZoomLevelTwoContent":{"!description":"Gets content of aggregation {@link #getZoomLevelTwoContent zoomLevelTwoContent}.\n\nThe node's content used for zoom level 2. If this aggregation is set, no default content like title and texts is used.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"destroyZoomLevelFourContent":{"!description":"Destroys the zoomLevelFourContent in the aggregation {@link #getZoomLevelFourContent zoomLevelFourContent}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","!static":false},"firePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50.0 This event is deprecated, use <node>nodePress<\/code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}.<br>Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getChildren":{"!description":"Gets current value of property {@link #getChildren children}.\n\nDefines an array of children of the node.","!type":"fn() -> [Object]","!category":"function","!static":false},"!module":"sap/suite/ui/commons/ProcessFlowNode","setTag":{"!description":"Sets a new value for property {@link #getTag tag}.\n\nThe user-defined object which is returned back to the user by a node click event.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oTag: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oTag":"type: object, description: New value for property <code>tag<\/code>"},"!static":false},"getAriaProperties":{"!description":"Gets content of aggregation {@link #getAriaProperties ariaProperties}.\n\nARIA-compliant properties to be added to the control.","!type":"fn() -> sap.suite.ui.commons.AriaProperties","!category":"function","!static":false},"fireTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use Press event instead ( click on the node)<br>Fires event {@link #event:titlePress titlePress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use Press event instead ( click on the node)<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:titlePress titlePress} event of this <code>sap.suite.ui.commons.ProcessFlowNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe node title.","!type":"fn() -> String","!category":"function","!static":false},"setFocused":{"!description":"Sets a new value for property {@link #getFocused focused}.\n\nThe parameter defines if the node should be displayed in focus state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFocused: Boolean) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"bFocused":"type: boolean, description: New value for property <code>focused<\/code>"},"!static":false},"setAriaProperties":{"!description":"Sets the aggregated {@link #getAriaProperties ariaProperties}.","!type":"fn(oAriaProperties: sap.suite.ui.commons.AriaProperties) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oAriaProperties":"type: sap.suite.ui.commons.AriaProperties, description: The ariaProperties to set"},"!static":false},"destroyZoomLevelThreeContent":{"!description":"Destroys the zoomLevelThreeContent in the aggregation {@link #getZoomLevelThreeContent zoomLevelThreeContent}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","!static":false},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nType of the node.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Single<\/code>.","!type":"fn(sType: sap.suite.ui.commons.ProcessFlowNodeType) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sType":"type: sap.suite.ui.commons.ProcessFlowNodeType, description: New value for property <code>type<\/code>"},"!static":false},"getFocused":{"!description":"Gets current value of property {@link #getFocused focused}.\n\nThe parameter defines if the node should be displayed in focus state.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHighlighted":{"!description":"Sets a new value for property {@link #getHighlighted highlighted}.\n\nThe parameter defines if the node should be displayed in highlighted state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHighlighted: Boolean) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"bHighlighted":"type: boolean, description: New value for property <code>highlighted<\/code>"},"!static":false},"setLaneId":{"!description":"Sets a new value for property {@link #getLaneId laneId}.\n\nSpecifies the assignment of the node to the respective lane.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLaneId: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sLaneId":"type: string, description: New value for property <code>laneId<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ProcessFlowNode.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIsTitleClickable isTitleClickable} : boolean (default: false)<\/li>\n<li>{@link #getLaneId laneId} : string<\/li>\n<li>{@link #getNodeId nodeId} : string<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.ProcessFlowNodeState (default: Neutral)<\/li>\n<li>{@link #getType type} : sap.suite.ui.commons.ProcessFlowNodeType (default: Single)<\/li>\n<li>{@link #getChildren children} : any[]<\/li>\n<li>{@link #getTitleAbbreviation titleAbbreviation} : string<\/li>\n<li>{@link #getStateText stateText} : string<\/li>\n<li>{@link #getTexts texts} : string[]<\/li>\n<li>{@link #getHighlighted highlighted} : boolean (default: false)<\/li>\n<li>{@link #getFocused focused} : boolean (default: false)<\/li>\n<li>{@link #getTag tag} : object<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getZoomLevelOneContent zoomLevelOneContent} : sap.ui.core.Control<\/li>\n<li>{@link #getZoomLevelTwoContent zoomLevelTwoContent} : sap.ui.core.Control<\/li>\n<li>{@link #getZoomLevelThreeContent zoomLevelThreeContent} : sap.ui.core.Control<\/li>\n<li>{@link #getZoomLevelFourContent zoomLevelFourContent} : sap.ui.core.Control<\/li>\n<li>{@link #getAriaProperties ariaProperties} : sap.suite.ui.commons.AriaProperties<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getParents parents} : (sap.ui.core.ID | sap.suite.ui.commons.ProcessFlowNode)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setTexts":{"!description":"Sets a new value for property {@link #getTexts texts}.\n\nThe property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTexts: [String]) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sTexts":"type: string[], description: New value for property <code>texts<\/code>"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe node title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"getIsTitleClickable":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 According to the new requirement there should be only one click event for each node (click on the whole node \u2013 see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either.<br>Gets current value of property {@link #getIsTitleClickable isTitleClickable}.\n\nSpecifies if the node title is clickable.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyZoomLevelOneContent":{"!description":"Destroys the zoomLevelOneContent in the aggregation {@link #getZoomLevelOneContent zoomLevelOneContent}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","!static":false},"getNodeId":{"!description":"Gets current value of property {@link #getNodeId nodeId}.\n\nNode identifier.","!type":"fn() -> String","!category":"function","!static":false},"setIsTitleClickable":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 According to the new requirement there should be only one click event for each node (click on the whole node \u2013 see Press event) that is why titlePress event should not be used any longer. Hence isTitleClickable should not be used either.<br>Sets a new value for property {@link #getIsTitleClickable isTitleClickable}.\n\nSpecifies if the node title is clickable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsTitleClickable: Boolean) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"bIsTitleClickable":"type: boolean, description: New value for property <code>isTitleClickable<\/code>"},"!static":false},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nThe parameter defines if the node should be displayed in selected state.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getTitleAbbreviation":{"!description":"Gets current value of property {@link #getTitleAbbreviation titleAbbreviation}.\n\nTitle abbreviation is used in zoom level 'Three'.","!type":"fn() -> String","!category":"function","!static":false},"getLaneId":{"!description":"Gets current value of property {@link #getLaneId laneId}.\n\nSpecifies the assignment of the node to the respective lane.","!type":"fn() -> String","!category":"function","!static":false},"detachPress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50.0 This event is deprecated, use <node>nodePress<\/code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowNode<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setNodeId":{"!description":"Sets a new value for property {@link #getNodeId nodeId}.\n\nNode identifier.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sNodeId: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sNodeId":"type: string, description: New value for property <code>nodeId<\/code>"},"!static":false},"!helpDescription":"This control enables you to see documents (or other items) in respect to their statuses \u2013 positive, negative, neutral, planned, planned negative. In addition to the node title (which can be optionally a hyperlink) also two other text fields are provided and can be filled. The process flow nodes consider all styles depending on the status they are in. The user can update or change the content of the node. The content of the node can be also filtered according to updated data and specific parameters set. This means that also the node\u2019s style is affected.","!proto":"sap.ui.core.Control","removeAllParents":{"!description":"Removes all the controls in the association named {@link #getParents parents}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"setZoomLevelThreeContent":{"!description":"Sets the aggregated {@link #getZoomLevelThreeContent zoomLevelThreeContent}.","!type":"fn(oZoomLevelThreeContent: sap.ui.core.Control) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oZoomLevelThreeContent":"type: sap.ui.core.Control, description: The zoomLevelThreeContent to set"},"!static":false},"getTag":{"!description":"Gets current value of property {@link #getTag tag}.\n\nThe user-defined object which is returned back to the user by a node click event.","!type":"fn() -> Object","!category":"function","!static":false},"setZoomLevelTwoContent":{"!description":"Sets the aggregated {@link #getZoomLevelTwoContent zoomLevelTwoContent}.","!type":"fn(oZoomLevelTwoContent: sap.ui.core.Control) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oZoomLevelTwoContent":"type: sap.ui.core.Control, description: The zoomLevelTwoContent to set"},"!static":false},"addParent":{"!description":"Adds some parent into the association {@link #getParents parents}.","!type":"fn(vParent: sap.ui.core.ID | sap.suite.ui.commons.ProcessFlowNode) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"vParent":"type: sap.ui.core.ID|sap.suite.ui.commons.ProcessFlowNode, description: The parents to add; if empty, nothing is inserted"},"!static":false},"getParents":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getParents parents}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"getType":{"!description":"Gets current value of property {@link #getType type}.\n\nType of the node.\n\nDefault value is <code>Single<\/code>.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNodeType","!category":"function","!static":false},"!category":"class","setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nState of the node.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sState: sap.suite.ui.commons.ProcessFlowNodeState) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.ProcessFlowNodeState, description: New value for property <code>state<\/code>"},"!static":false},"getHighlighted":{"!description":"Gets current value of property {@link #getHighlighted highlighted}.\n\nThe parameter defines if the node should be displayed in highlighted state.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use Press event instead ( click on the node)<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:titlePress titlePress} event of this <code>sap.suite.ui.commons.ProcessFlowNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowNode<\/code> itself.\n\nThis event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode<\/code> itself"},"!static":false},"setTitleAbbreviation":{"!description":"Sets a new value for property {@link #getTitleAbbreviation titleAbbreviation}.\n\nTitle abbreviation is used in zoom level 'Three'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitleAbbreviation: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sTitleAbbreviation":"type: string, description: New value for property <code>titleAbbreviation<\/code>"},"!static":false},"destroyAriaProperties":{"!description":"Destroys the ariaProperties in the aggregation {@link #getAriaProperties ariaProperties}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowNode with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"destroyZoomLevelTwoContent":{"!description":"Destroys the zoomLevelTwoContent in the aggregation {@link #getZoomLevelTwoContent zoomLevelTwoContent}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","!static":false},"setZoomLevelOneContent":{"!description":"Sets the aggregated {@link #getZoomLevelOneContent zoomLevelOneContent}.","!type":"fn(oZoomLevelOneContent: sap.ui.core.Control) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oZoomLevelOneContent":"type: sap.ui.core.Control, description: The zoomLevelOneContent to set"},"!static":false},"attachPress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50.0 This event is deprecated, use <node>nodePress<\/code> event instead. See {@link sap.suite.ui.commons.ProcessFlow.html#event:nodePress}.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.ProcessFlowNode<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlowNode<\/code> itself.\n\nThis event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlowNode<\/code> itself"},"!static":false},"setZoomLevelFourContent":{"!description":"Sets the aggregated {@link #getZoomLevelFourContent zoomLevelFourContent}.","!type":"fn(oZoomLevelFourContent: sap.ui.core.Control) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"oZoomLevelFourContent":"type: sap.ui.core.Control, description: The zoomLevelFourContent to set"},"!static":false},"setStateText":{"!description":"Sets a new value for property {@link #getStateText stateText}.\n\nDescription of the state, for example \"Status OK\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sStateText: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sStateText":"type: string, description: New value for property <code>stateText<\/code>"},"!static":false},"removeParent":{"!description":"Removes an parent from the association named {@link #getParents parents}.","!type":"fn(vParent: Number | sap.ui.core.ID | sap.suite.ui.commons.ProcessFlowNode) -> sap.ui.core.ID","!category":"function","parameters":{"vParent":"type: int|sap.ui.core.ID|sap.suite.ui.commons.ProcessFlowNode, description: The parent to be removed or its index or ID"},"!static":false},"!description":"This control enables you to see documents (or other items) in respect to their statuses \u2013 positive, negative, neutral, planned, planned negative. In addition to the node title (which can be optionally a hyperlink) also two other text fields are provided and can be filled. The process flow nodes consider all styles depending on the status they are in. The user can update or change the content of the node. The content of the node can be also filtered according to updated data and specific parameters set. This means that also the node\u2019s style is affected.","getTexts":{"!description":"Gets current value of property {@link #getTexts texts}.\n\nThe property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.","!type":"fn() -> [String]","!category":"function","!static":false},"getStateText":{"!description":"Gets current value of property {@link #getStateText stateText}.\n\nDescription of the state, for example \"Status OK\".","!type":"fn() -> String","!category":"function","!static":false},"getZoomLevelOneContent":{"!description":"Gets content of aggregation {@link #getZoomLevelOneContent zoomLevelOneContent}.\n\nThe node's content used for zoom level 1. If this aggregation is set, no default content like title and texts is used.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getZoomLevelFourContent":{"!description":"Gets content of aggregation {@link #getZoomLevelFourContent zoomLevelFourContent}.\n\nThe node's content used for zoom level 4. If this aggregation is set, no default content like title and texts is used.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setChildren":{"!description":"Sets a new value for property {@link #getChildren children}.\n\nDefines an array of children of the node.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sChildren: [Object]) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sChildren":"type: any[], description: New value for property <code>children<\/code>"},"!static":false},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nThe parameter defines if the node should be displayed in selected state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ProcessFlowNode.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ProcessFlowLaneState":{"!description":"This type is used in the 'state' property of the ProcessFlowLaneHeader. For example, app developers can set the status of the lane header if lanes are displayed without documents. If the complete process flow is displayed (that is, if the lane header is displayed with documents underneath), the given state values of the lane header are ignored and will be calculated in the ProcessFlow according to the current state of the documents.","value":{"!description":"In the 'state' array, the total amount of values needs to be 100%.","!type":"String","!category":"enum"},"state":{"!description":"The 'state' property is associated with the given value. Possible states are: positive, negative, neutral, and planned.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.util":{"Dijkstra":"sap.suite.ui.commons.networkgraph.util.Dijkstra_obj","!category":"namespace"},"sap.suite.ui.commons.ColumnData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartData.<br>Column data holder.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ColumnData.","!module":"sap/suite/ui/commons/ColumnData","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ColumnData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.ColumnMicroChartData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartData.<br>Column data holder."},"sap.suite.ui.commons.FrameType":{"OneByOne":{"!description":"The 1x1 frame type.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to openUI5.<br>Enumeration of possible frame types.","Auto":{"!description":"The Auto frame type that adjusts the size of the control to the content.","!type":"String","!category":"enum"},"!category":"static class","TwoThirds":{"!description":"The 2/3 frame type.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","TwoByOne":{"!description":"The 2x1 frame type.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.util":{"HtmlElementRenderer":"sap.suite.ui.commons.util.HtmlElementRenderer_obj","ManagedObjectRegister":"sap.suite.ui.commons.util.ManagedObjectRegister_obj","!category":"namespace","HtmlElement":"sap.suite.ui.commons.util.HtmlElement_obj"},"sap.suite.ui.commons.ChartTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ChartTile"},"sap.suite.ui.commons.GenericTile":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to openui5.<br>The tile control that displays the title, description, and customizable main area.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.GenericTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.GenericTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new GenericTile.","!module":"sap/suite/ui/commons/GenericTile","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.GenericTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.GenericTile","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to openui5.<br>The tile control that displays the title, description, and customizable main area."},"sap.suite.ui.commons.networkgraph.ElementAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.ElementAttribute"},"sap.suite.ui.commons.networkgraph.layout.LayeredLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayeredLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.LayeredLayout"},"sap.suite.ui.commons.MicroAreaChartLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartLabel.<br>This element contains data for a label in MicroAreaChart control.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartLabel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new MicroAreaChartLabel.","!module":"sap/suite/ui/commons/MicroAreaChartLabel","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartLabel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.AreaMicroChartLabel","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartLabel.<br>This element contains data for a label in MicroAreaChart control."},"sap.suite.ui.commons.InfoTile":{"getState":{"!description":"Gets current value of property {@link #getState state}.\n\nIndicates the load status.\n\nDefault value is <code>Loading<\/code>.","!type":"fn() -> sap.suite.ui.commons.LoadState","!category":"function","!static":false},"getFooter":{"!description":"Gets current value of property {@link #getFooter footer}.\n\nThe footer text of the tile.","!type":"fn() -> String","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sSize: sap.suite.ui.commons.InfoTileSize) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"sSize":"type: sap.suite.ui.commons.InfoTileSize, description: New value for property <code>size<\/code>"},"!static":false},"setFooter":{"!description":"Sets a new value for property {@link #getFooter footer}.\n\nThe footer text of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFooter: String) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"sFooter":"type: string, description: New value for property <code>footer<\/code>"},"!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe switchable view that depends on the tile type.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nShows the description of the selected tile.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.InfoTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!constructorDescription":"Constructor for a new InfoTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getFooter footer} : string<\/li>\n<li>{@link #getSize size} : sap.suite.ui.commons.InfoTileSize (default: Auto)<\/li>\n<li>{@link #getState state} : sap.suite.ui.commons.LoadState (default: Loading)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"!module":"sap/suite/ui/commons/InfoTile","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.InfoTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.InfoTile<\/code> itself.\n\nThe event is fired when the user chooses the tile.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.InfoTile<\/code> itself"},"!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.InfoTile","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>The tile control that displays the title, description, footer, and customizable main area.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nShows the description of the selected tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the tile.","!type":"fn() -> String","!category":"function","!static":false},"setState":{"!description":"Sets a new value for property {@link #getState state}.\n\nIndicates the load status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loading<\/code>.","!type":"fn(sState: sap.suite.ui.commons.LoadState) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"sState":"type: sap.suite.ui.commons.LoadState, description: New value for property <code>state<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.InfoTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.InfoTile","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nUpdates the size of the tile. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.suite.ui.commons.InfoTileSize","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.InfoTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>The tile control that displays the title, description, footer, and customizable main area.","!proto":"sap.ui.core.Control"},"sap.suite.ui.commons.ProcessFlowNodeType":{"!description":"Describes the type of a node. The type value could be single or aggregated. With this type, the application can define if several nodes should be displayed as one aggregated node in a path per column to represent a grouping of semantically equal nodes.","!category":"static class","!module":"sap/suite/ui/commons/library","Aggregated":{"!description":"Aggregated node - several nodes are illustrated as a stack of nodes in the same path and in one column.","!type":"String","!category":"enum"},"Single":{"!description":"Single node - one node is illustrated in a column.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.statusindicator.SimpleShape_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.SimpleShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.Shape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.SimpleShape"},"sap.suite.ui.commons.HarveyBallMicroChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChartItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.HarveyBallMicroChartItem"},"sap.suite.ui.commons.ColumnMicroChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChart.<br>This control shows a column chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ColumnMicroChart.","!module":"sap/suite/ui/commons/ColumnMicroChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.ColumnMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChart.<br>This control shows a column chart."},"sap.suite.ui.commons.networkgraph.Coordinate":{"!description":"Holds information about coordinates on a two-dimensional Cartesian plane.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Coordinate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nThe value of the x coordinate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(fX: Number) -> sap.suite.ui.commons.networkgraph.Coordinate","!category":"function","parameters":{"fX":"type: float, description: New value for property <code>x<\/code>"},"!static":false},"getY":{"!description":"Gets current value of property {@link #getY y}.\n\nThe value of the y coordinate.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nThe value of the y coordinate.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(fY: Number) -> sap.suite.ui.commons.networkgraph.Coordinate","!category":"function","parameters":{"fY":"type: float, description: New value for property <code>y<\/code>"},"!static":false},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nThe value of the x coordinate.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Coordinate.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getX x} : float (default: undefined)<\/li>\n<li>{@link #getY y} : float (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/networkgraph/Coordinate","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Coordinate.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"Holds information about coordinates on a two-dimensional Cartesian plane."},"sap.suite.ui.commons.statusindicator":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"fillColor":{"!description":"Defines the color of the shape's fill.","!type":"sap.m.ValueCSSColor","!category":"enum"},"SizeType":"sap.suite.ui.commons.statusindicator.SizeType","CustomShape":"sap.suite.ui.commons.statusindicator.CustomShape_obj","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"Path":"sap.suite.ui.commons.statusindicator.Path_obj","toValue":{"!description":"Defines the maximum value up to which the threshold setting should apply.","!type":"Number","!category":"enum"},"height":{"!description":"Height of the status indicator. Only sets the height of the image part of the status indicator, potential label is not included.","!type":"sap.ui.core.CSSSize","!category":"enum"},"animationOnStartupDelay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Specifies the delay of the initial value animation. Only applicable if the <code>animationOnStartup<\/code> property is set to <code>true<\/code>.","!type":"Number","!category":"enum"},"fillingAngle":{"!description":"Defines the angle at which the shape is filled. This property overrides the <code>fillingDirection<\/code> property.<br> Accepted values include <code>0<\/code> through <code>360<\/code> degrees.<br> For example, if you set the filling angle to <code>45<\/code>, the shape will be filled diagonally from the lower right part of the shape to its upper left part.<br> This property can be used only when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear<\/code>.","!type":"Number","!category":"enum"},"SimpleShape":"sap.suite.ui.commons.statusindicator.SimpleShape_obj","animationOnChange":{"!description":"Defines if the change in the status indicator value should be animated or not.<br> When set to <code>true<\/code>, the change in value is animated.","!type":"Boolean","!category":"enum"},"value":{"!description":"Percentage value, between 0 and 100, that the status indicator reflects.","!type":"Number","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"FillingType":"sap.suite.ui.commons.statusindicator.FillingType","Circle":"sap.suite.ui.commons.statusindicator.Circle_obj","animationOnStartup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 Use the animationOnChange property instead.<br>Defines if the initial value of the status indicator should be animated or directly displayed on startup. By default, it's displayed on startup without any animation.","!type":"Boolean","!category":"enum"},"FillingDirectionType":"sap.suite.ui.commons.statusindicator.FillingDirectionType","DiscreteThreshold":"sap.suite.ui.commons.statusindicator.DiscreteThreshold_obj","VerticalAlignmentType":"sap.suite.ui.commons.statusindicator.VerticalAlignmentType","width":{"!description":"Width of the status indicator. Only sets the width of the image part of the status indicator, potential label is not included. The root div of the status indicator is set as display: \"block\" and so takes up the whole space available. Wrap status indicator in {@link sap.m.FlexBox} control if you wish to control width of the whole status indicator.","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"cy":{"!description":"Defines the y coordinate of the center of the circle with respect to its parent status indicator.","!type":"Number","!category":"enum"},"cx":{"!description":"Defines the x coordinate of the center of the circle with respect to its parent status indicator.","!type":"Number","!category":"enum"},"strokeColor":{"!description":"Specifies the color of the shape's outline.","!type":"sap.m.ValueCSSColor","!category":"enum"},"size":{"!description":"Predefined sizes for the status indicator.","!type":"sap.suite.ui.commons.statusindicator.SizeType","!category":"enum"},"verticalAlignment":{"!description":"Defines the vertical alignment of the shape within its parent container.","!type":"sap.suite.ui.commons.statusindicator.VerticalAlignmentType","!category":"enum"},"shapeId":{"!description":"An ID associated with a specific shape from the shape library.","!type":"String","!category":"enum"},"rx":{"!description":"Defines the horizontal corner radius of the rectangle. If set to 0, the corners are not rounded.","!type":"Number","!category":"enum"},"ry":{"!description":"Defines the vertical corner radius of the rectangle. If set to 0, the corners are not rounded.","!type":"Number","!category":"enum"},"viewBox":{"!description":"Defines the view box surrounding the shapes included in the status indicator.","!type":"String","!category":"enum"},"PropertyThreshold":"sap.suite.ui.commons.statusindicator.PropertyThreshold_obj","weight":{"!description":"Weight of the group, relative to other groups in the status indicator. This property allows you to distribute the status indicator's value between groups of shapes that it contains. For example, for three groups with weights 10, 10, and 20 (total weight 40), the status indicator's value is distributed in the following way: <ul> <li>If the status indicator's value is below 25% (10 out of 40), the first group of shapes (weight 10) is partially filled, depending on the percentage value. For example, if the percentage value is 5, the first group of shapes is 1/5-full. The second and the third groups are empty.<\/li> <li>If the status indicator's value is at least 25% but below 50%, the first group of shapes (weight 10) is filled, the second group (also weight 10) is partially filled, and the third group (weight 20) appears empty.<\/li> <li>If the status indicator's value is at least 50% but below 100%, the first two groups of shapes (weight 10 each) are filled, but the third group (weight 20) is only partially filled.<\/li> <li>If the status indicator's value is 100, all three groups of shapes are filled.<\/li> <\/ul>","!type":"Number","!category":"enum"},"StatusIndicator":"sap.suite.ui.commons.statusindicator.StatusIndicator_obj","fillingDirection":{"!description":"Defines the direction in which the shape is filled.","!type":"sap.suite.ui.commons.statusindicator.FillingDirectionType","!category":"enum"},"horizontalAlignment":{"!description":"Defines the horizontal alignment of the shape within its parent container.","!type":"sap.suite.ui.commons.statusindicator.HorizontalAlignmentType","!category":"enum"},"order":{"!description":"Order in which this fillable SVG shape must be filled, relative to other SVG shapes included in the custom shape. For example, if you have three SVG shapes with order values 1, 2, and 4 assigned, the first shape will be filled first, then the second shape, and, finally, the third shape, regardless of their order in the SVG definition. The value of this property must be unique.","!type":"Number","!category":"enum"},"!category":"namespace","blocked":{"!description":"Whether the control is currently in blocked state.","!type":"Boolean","!category":"enum"},"fillingType":{"!description":"Defines the type of the shape's fill.","!type":"sap.suite.ui.commons.statusindicator.FillingType","!category":"enum"},"LibraryShape":"sap.suite.ui.commons.statusindicator.LibraryShape_obj","strokeWidth":{"!description":"Specifies the width of the shape's outline.","!type":"Number","!category":"enum"},"d":{"!description":"Specifies the path that outlines the shape. The format is identical to the <code>d<\/code> attribute of the <code>&lt;path&gt;<\/code> SVG element.","!type":"String","!category":"enum"},"definition":{"!description":"A valid XML fragment that contains an &lt;svg&gt; element that complies with the following requirements: <ul> <li>It includes no SVG groups (&lt;g&gt; elements).<\/li> <li>It includes no &lt;defs&gt; elements.<\/li> <\/ul> The SVG element is transformed into a status indicator shape in the following way: <ul> <li>The <code>viewBox<\/code> attribute of the root SVG element is respected and kept after the transformation.<\/li> <li>The inline styles of SVG shapes are respected, and shapes with such inline styles are not considered to be fillable.<\/li> <li>The SVG shapes without classes are considered fillable.<\/li> <li>If there are multiple fillable shapes, each shape element must have a <code>data-shape-id<\/code> attribute that is set to a unique value.<\/li> <\/ul> Example: <pre>\n  &lt;svg version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; viewBox=&quot;0 0 30 30&quot; xml:space=&quot;preserve&quot;&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M14.664,29....&quot; /&gt;\n     &lt;path style=&quot;fill:blue;&quot; d=&quot;M13.626,25....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-1&quot; d=&quot;M15.337,21....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-2&quot; d=&quot;M13.626,17....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-3&quot; d=&quot;M15.337,14....&quot; /&gt;\n     &lt;path data-shape-id=&quot;fill-4&quot; d=&quot;M13.107,10....&quot; /&gt;\n  &lt;/svg&gt;\n<\/pre> The first two paths in this example are filled with blue color. The last four shape elements are filled gradually, as the status indicator's value changes.\n\nPlease note that the SVG element must be escaped when used directly as an attribute in the XML view.","!type":"String","!category":"enum"},"fullAnimationDuration":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.1 All animations are now limited to 250 ms.<br>Specifies the duration, in milliseconds, of the animation that would fill an empty shape to the full. The actual time it takes to change the shape's filling is proportional to the difference between the initial and the target status indicator's value. For example, a change from 20 percent to 70 percent takes only half of the time specified in the <code>fullAnimationDuration<\/code> property. If this property is set to <code>0<\/code>, changes are applied instantly without any animation.","!type":"Number","!category":"enum"},"labelPosition":{"!description":"labelPosition : sap.suite.ui.commons.statusindicator.LabelPositionType","!type":"sap.suite.ui.commons.statusindicator.LabelPositionType","!category":"enum"},"FillingOption":"sap.suite.ui.commons.statusindicator.FillingOption_obj","ariaLabel":{"!description":"ARIA label for this control to be used by screen reader software.","!type":"String","!category":"enum"},"Shape":"sap.suite.ui.commons.statusindicator.Shape_obj","HorizontalAlignmentType":"sap.suite.ui.commons.statusindicator.HorizontalAlignmentType","r":{"!description":"Defines the radius of the circle.","!type":"Number","!category":"enum"},"showLabel":{"!description":"showLabel : Boolean","!type":"Boolean","!category":"enum"},"ShapeGroup":"sap.suite.ui.commons.statusindicator.ShapeGroup_obj","LabelPositionType":"sap.suite.ui.commons.statusindicator.LabelPositionType","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!type":"[String]","!category":"enum"},"Rectangle":"sap.suite.ui.commons.statusindicator.Rectangle_obj","y":{"!description":"Defines the y coordinate of the upper-left corner of the rectangle.","!type":"Number","!category":"enum"},"x":{"!description":"Defines the x coordinate of the upper-left corner of the rectangle.","!type":"Number","!category":"enum"}},"sap.suite.ui.commons.imageeditor.ImageEditor":{"rotate":{"!description":"Rotates the image to the specified angle, ranging from -360 to 360 degrees. <br>Use a positive value for clockwise rotation and a negative value for counterclockwise rotation.","!type":"fn(iDegrees: Number, bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iDegrees":"type: int, description: Number of degrees to rotate the image. Applicable range of values is from -360 to 360"},"!static":false},"undo":{"!description":"Goes one action back in the action history, if possible.","!type":"fn()","!category":"function","!static":false},"zoom":{"!description":"Zooms in or out to the specified zoom level. Applicable range of values is from 100 to 500.","!type":"fn(iZoom: Number) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"iZoom":"type: int, description: Level of zoom"},"!static":false},"!module":"sap/suite/ui/commons/imageeditor/ImageEditor","fireSizeChanged":{"!description":"Fires event {@link #event:sizeChanged sizeChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"contrast":{"!description":"Applies the contrast filter to the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Amount of the filter strength. Applicable range of values is from 0 to 500"},"!static":false},"attachHistoryChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:historyChanged historyChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired each time there is a change in the history of recent actions or in the recent actions history index. <br>This may happen either when an action is performed on the image or when the {@link #undo}, {@link #redo}, or {@link #jumpToHistory} methods are called.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"fireError":{"!description":"Fires event {@link #event:error error} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachLoaded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:loaded loaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setCropArea":{"!description":"Sets the crop area to the position and size. <br>The size is expected to be in pixel values corresponding to the actual size of the image. <br>Crop area is automatically constrained, so that it doesn't overflow the edges of the image.","!type":"fn(iX: Number, iY: Number, iWidth: Number, iHeight: Number) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"iX":"type: int, description: X coordinate of the top left corner of the crop area","iHeight":"type: int, description: Height of the crop area","iY":"type: int, description: Y coordinate of the top left corner of the crop area","iWidth":"type: int, description: Width of the crop area"},"!static":false},"rectangleCrop":{"!description":"Crops the image to a new rectangle-shaped image based on the specified pixel parameters.","!type":"fn(iX: Number, iY: Number, iWidth: Number, iHeight: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iX":"type: int, description: X coordinate of the top left corner of the crop area","iHeight":"type: int, description: Height of the crop area","iY":"type: int, description: Y coordinate of the top left corner of the crop area","iWidth":"type: int, description: Width of the crop area"},"!static":false},"getWidth":{"!description":"Gets the width of the image.","!type":"fn() -> Number","!category":"function","!static":false},"fireCropAreaChanged":{"!description":"Fires event {@link #event:cropAreaChanged cropAreaChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"flipHorizontal":{"!description":"Flips the whole image horizontally.","!type":"fn(bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)"},"!static":false},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nImage editor mode. <br>Four modes are available: resize mode, crop to rectangle mode, crop to circle mode, and display image mode (default).<br>The default mode displays the image to be edited.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!type":"fn(sMode: sap.suite.ui.commons.ImageEditorMode) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"sMode":"type: sap.suite.ui.commons.ImageEditorMode, description: New value for property <code>mode<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ImageEditor.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : string (default: )<\/li>\n<li>{@link #getMode mode} : sap.suite.ui.commons.ImageEditorMode (default: Default)<\/li>\n<li>{@link #getKeepCropAspectRatio keepCropAspectRatio} : boolean (default: true)<\/li>\n<li>{@link #getKeepResizeAspectRatio keepResizeAspectRatio} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loaded loaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sizeChanged sizeChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cropAreaChanged cropAreaChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:zoomChanged zoomChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:historyChanged historyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","saturate":{"!description":"Applies the saturation filter to the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Amount of the filter strength. Applicable range of values is from 0 to 500"},"!static":false},"grayscale":{"!description":"Applies the grayscale filter to the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Filter strength. Applicable range of values is from 0 to 100"},"!static":false},"setHeight":{"!description":"Sets the height of the image in pixels. <br>If the property <code>keepResizeAspectRatio<\/code> is set to <code>true<\/code>, changes the current width as well (even in the preview mode).","!type":"fn(iHeight: Number, bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iHeight":"type: int, description: New height of the image in pixels"},"!static":false},"redo":{"!description":"Goes one action forward in the action history, if possible.","!type":"fn()","!category":"function","!static":false},"cancelPreview":{"!description":"Cancels the current preview and restores the image to its last recorded state.","!type":"fn()","!category":"function","!static":false},"detachSizeChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:sizeChanged sizeChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getCropArea":{"!description":"Gets the current crop area position and size.","!type":"fn() -> Object","!category":"function","!static":false},"ellipseCrop":{"!description":"Crops the image to a new circular or oval shape based on the specified pixel parameters.","!type":"fn(iX: Number, iY: Number, iXRadius: Number, iYRadius: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iYRadius":"type: int, description: Y radius of the crop area","iX":"type: int, description: X coordinate of the center of the crop area","iXRadius":"type: int, description: X radius of the crop area","iY":"type: int, description: Y coordinate of the center of the crop area"},"!static":false},"!helpDescription":"Image editor displays an image and provides API and visual controls to edit it.","!proto":"sap.ui.core.Control","detachCropAreaChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cropAreaChanged cropAreaChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setCropAreaByRatio":{"!description":"Sets the size of the crop area to comply with the specified aspect ratio. <br>Centers the crop area, so that there is always some space from the edges of the image.","!type":"fn(iWidth: Number, iHeight: Number) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"iHeight":"type: int, description: Ratio height","iWidth":"type: int, description: Ratio width"},"!static":false},"sepia":{"!description":"Applies the sepia filter to the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Filter strength. Applicable range of values is from 0 to 100"},"!static":false},"getImagePngDataURL":{"!description":"Returns Base64 Data URL of the image in PNG format.","!type":"fn() -> String","!category":"function","!static":false},"jumpToHistory":{"!description":"Changes the state to an action history item at the given index.","!type":"fn(iIndex: Number)","!category":"function","parameters":{"iIndex":"type: int, description: Index of the history item. Newest state has the index of 0, the most recent change has the index of 1. The index increases with each preceding action."},"!static":false},"getPreviewWidth":{"!description":"Gets the width of the currently shown image, even if it is in preview state.","!type":"fn() -> Number","!category":"function","!static":false},"detachError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:error error} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"attachError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:error error} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired if there is an error loading the image specified in the <code>src<\/code> property, for example, when the URL is unreachable.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"setCropAreaBySize":{"!description":"Resizes the crop area to the specified height and width. <br>The size is expected to be in pixel values corresponding to the actual size of the image. <br>Crop area is automatically constrained, so that it doesn't overflow the edges of the image.","!type":"fn(iWidth: Number, iHeight: Number) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"iHeight":"type: int, description: Height of the cropping area","iWidth":"type: int, description: Width of the cropping area"},"!static":false},"detachHistoryChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:historyChanged historyChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"attachCropAreaChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cropAreaChanged cropAreaChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired when the size of the crop area is changed by the user while in the <code>CropRectangle<\/code> or <code>CropEllipse<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"getKeepCropAspectRatio":{"!description":"Gets current value of property {@link #getKeepCropAspectRatio keepCropAspectRatio}.\n\nDefines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle<\/code> or <code>CropEllipse<\/code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHistory":{"!description":"Returns an array of all action history items.","!type":"fn() -> [sap.suite.ui.commons.HistoryItem]","!category":"function","!static":false},"getKeepResizeAspectRatio":{"!description":"Gets current value of property {@link #getKeepResizeAspectRatio keepResizeAspectRatio}.\n\nDefines whether aspect ratio should be kept when the image is resized in the <code>Resize<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"invert":{"!description":"Inverts the colors of the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Filter strength. Applicable range of values is from 0 to 100"},"!static":false},"brightness":{"!description":"Applies the brightness filter to the image.","!type":"fn(iValue: Number, bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iValue":"type: int, description: Filter strength. Applicable range of values is from 0 to 500"},"!static":false},"fireLoaded":{"!description":"Fires event {@link #event:loaded loaded} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getHeight":{"!description":"Returns the height of the image.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","attachZoomChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired when the zoom level is changed by the user while in the <code>CropRectangle<\/code> or <code>CropEllipse<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"setWidth":{"!description":"Sets the width of the image in pixels. <br>If the property <code>keepResizeAspectRatio<\/code> is set to <code>true<\/code>, changes the current image height as well (even in preview state).","!type":"fn(iWidth: Number, bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iWidth":"type: int, description: New width of the image in pixels"},"!static":false},"getPreviewHeight":{"!description":"Returns the height of the currently shown image, even if it is in preview state.","!type":"fn() -> Number","!category":"function","!static":false},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nImage source. <br>Can be a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"flip":{"!description":"Flips the image based on the specified parameters.","!type":"fn(bVertical: Boolean, bHorizontal: Boolean, bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","bHorizontal":"type: boolean, description: Whether to flip the image horizontally","bVertical":"type: boolean, description: Whether to flip the image vertically"},"!static":false},"getImageJpegDataURL":{"!description":"Returns Base64 Data URL of the image in JPEG format.","!type":"fn(fQuality?: Number) -> String","!category":"function","parameters":{"fQuality":"type: float, description: Quality of the returned image, ranging from 0 to 1. 0 means highly compressed image, 1 means uncompressed image. When no value is provided, canvas default compression level is used."},"!static":false},"setSize":{"!description":"Sets the size of the image in pixels.","!type":"fn(iWidth: Number, iHeight: Number, bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)","iHeight":"type: int, description: New height of the image","iWidth":"type: int, description: New width of the image"},"!static":false},"applyVisibleCrop":{"!description":"Crops the image based on the currently shown crop area. <br>This method works only when the {@link sap.suite.ui.commons.ImageEditorMode} is set to <code>CropRectangle<\/code> or <code>CropEllipse<\/code>.","!type":"fn(bPreview: Boolean)","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)"},"!static":false},"flipVertical":{"!description":"Flips the whole image vertically.","!type":"fn(bPreview: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bPreview":"type: boolean, description: Indicates whether to show this action in preview only (<code>true<\/code>) or record it in action history as well (<code>false<\/code>)"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"applyPreview":{"!description":"Saves current preview to action history, if there is any.","!type":"fn()","!category":"function","!static":false},"setKeepResizeAspectRatio":{"!description":"Sets a new value for property {@link #getKeepResizeAspectRatio keepResizeAspectRatio}.\n\nDefines whether aspect ratio should be kept when the image is resized in the <code>Resize<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bKeepResizeAspectRatio: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bKeepResizeAspectRatio":"type: boolean, description: New value for property <code>keepResizeAspectRatio<\/code>"},"!static":false},"fireHistoryChanged":{"!description":"Fires event {@link #event:historyChanged historyChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireZoomChanged":{"!description":"Fires event {@link #event:zoomChanged zoomChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachSizeChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:sizeChanged sizeChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired when the size of the image is changed by the user while in the <code>Resize<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"getLoaded":{"!description":"Returns <code>true<\/code> when the <code>src<\/code> property is set and the specified image has been successfuly loaded.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachLoaded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:loaded loaded} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself.\n\nThis event is fired after the image specified in the <code>src<\/code> property is successfully loaded.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code> itself"},"!static":false},"!description":"Image editor displays an image and provides API and visual controls to edit it.","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nImage source. <br>Can be a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sSrc: String) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"sSrc":"type: string, description: New value for property <code>src<\/code>"},"!static":false},"detachZoomChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.imageeditor.ImageEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setKeepCropAspectRatio":{"!description":"Sets a new value for property {@link #getKeepCropAspectRatio keepCropAspectRatio}.\n\nDefines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle<\/code> or <code>CropEllipse<\/code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bKeepCropAspectRatio: Boolean) -> sap.suite.ui.commons.imageeditor.ImageEditor","!category":"function","parameters":{"bKeepCropAspectRatio":"type: boolean, description: New value for property <code>keepCropAspectRatio<\/code>"},"!static":false},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nImage editor mode. <br>Four modes are available: resize mode, crop to rectangle mode, crop to circle mode, and display image mode (default).<br>The default mode displays the image to be edited.\n\nDefault value is <code>Default<\/code>.","!type":"fn() -> sap.suite.ui.commons.ImageEditorMode","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.ImageEditor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ChartContainerToolbarPlaceholder":{"!description":"Provides a placeholder for the embedded chart container toolbar.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainerToolbarPlaceholder with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ChartContainerToolbarPlaceholder.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/suite/ui/commons/ChartContainerToolbarPlaceholder","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ChartContainerToolbarPlaceholder.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"Provides a placeholder for the embedded chart container toolbar."},"sap.suite.ui.commons.statusindicator.FillingDirectionType":{"Right":{"!description":"From left to right.","!type":"String","!category":"enum"},"Down":{"!description":"From top to bottom.","!type":"String","!category":"enum"},"!description":"The direction of animation.<br>\n\nThe direction types <code>Up<\/code>, <code>Down<\/code>, <code>Left<\/code>, and <code>Right<\/code> are available when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Linear<\/code>.<br> The direction types <code>Clockwise<\/code> and <code>Counterclockwise<\/code> are available when {@link sap.suite.ui.commons.statusindicator.FillingType} is set to <code>Circular<\/code>.","Up":{"!description":"From bottom upwards.","!type":"String","!category":"enum"},"Clockwise":{"!description":"Clockwise.","!type":"String","!category":"enum"},"!category":"static class","CounterClockwise":{"!description":"Counterclockwise.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Left":{"!description":"From right to left.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.BulletChartData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChartData.<br>Thresholds data holder.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.BulletChartData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.BulletMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new BulletChartData.","!module":"sap/suite/ui/commons/BulletChartData","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.BulletChartData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.BulletMicroChartData","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.BulletMicroChartData.<br>Thresholds data holder."},"sap.suite.ui.commons.ProcessFlowConnectionLabelState":{"!description":"Describes the state of a connection label.","Neutral":{"!description":"Neutral connection label.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical connection label.","!type":"String","!category":"enum"},"Positive":{"!description":"Positive connection label.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Negative":{"!description":"Negative connection label.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.MicroAreaChartItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartItem.<br>The configuration of the graphic element on the chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new MicroAreaChartItem.","!module":"sap/suite/ui/commons/MicroAreaChartItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MicroAreaChartItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.AreaMicroChartItem","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.AreaMicroChartItem.<br>The configuration of the graphic element on the chart."},"sap.suite.ui.commons.NoteTaker":{"setCardViewAllTrigger":{"!description":"Sets a new value for property {@link #getCardViewAllTrigger cardViewAllTrigger}.\n\nThe View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1800<\/code>.","!type":"fn(iCardViewAllTrigger: Number) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"iCardViewAllTrigger":"type: int, description: New value for property <code>cardViewAllTrigger<\/code>"},"!static":false},"fireDeleteCard":{"!description":"Fires event {@link #event:deleteCard deleteCard} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachAttachmentUploadComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getCards":{"!description":"Gets content of aggregation {@link #getCards cards}.\n\nThis aggregation allows you to add note cards to the Note Taker and remove them from the Note Taker.","!type":"fn() -> [sap.suite.ui.commons.NoteTakerCard]","!category":"function","!static":false},"getAttachmentName":{"!description":"Gets current value of property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nDefault value is <code>attachment<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getFilterCriteria":{"!description":"Gets current value of property {@link #getFilterCriteria filterCriteria}.\n\nA composite object containing criteria for filtering cards in the Note Taker.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/suite/ui/commons/NoteTaker","attachAttachmentUploadComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentUploadComplete attachmentUploadComplete} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nFire event uploadComplete to attached listeners.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"setAttachmentName":{"!description":"Sets a new value for property {@link #getAttachmentName attachmentName}.\n\nThe attachment property name for identification on the server side after sending data to the server.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>attachment<\/code>.","!type":"fn(sAttachmentName: String) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"sAttachmentName":"type: string, description: New value for property <code>attachmentName<\/code>"},"!static":false},"fireAttachmentDelete":{"!description":"Fires event {@link #event:attachmentDelete attachmentDelete} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachAttachmentSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertCard":{"!description":"Inserts a card into the aggregation {@link #getCards cards}.","!type":"fn(oCard: sap.suite.ui.commons.NoteTakerCard, iIndex: Number) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"oCard":"type: sap.suite.ui.commons.NoteTakerCard, description: The card to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the card should be inserted at; for a negative value of <code>iIndex<\/code>, the card is inserted at position 0; for a value greater than the current size of the aggregation, the card is inserted at the last position"},"!static":false},"destroyCards":{"!description":"Destroys all the cards in the aggregation {@link #getCards cards}.","!type":"fn() -> sap.suite.ui.commons.NoteTaker","!category":"function","!static":false},"removeCard":{"!description":"Removes a card from the aggregation {@link #getCards cards}.","!type":"fn(vCard: Number | String | sap.suite.ui.commons.NoteTakerCard) -> sap.suite.ui.commons.NoteTakerCard","!category":"function","parameters":{"vCard":"type: int|string|sap.suite.ui.commons.NoteTakerCard, description: The card to remove or its index or id"},"!static":false},"indexOfCard":{"!description":"Checks for the provided <code>sap.suite.ui.commons.NoteTakerCard<\/code> in the aggregation {@link #getCards cards}. and returns its index if found or -1 otherwise.","!type":"fn(oCard: sap.suite.ui.commons.NoteTakerCard) -> Number","!category":"function","parameters":{"oCard":"type: sap.suite.ui.commons.NoteTakerCard, description: The card whose index is looked for"},"!static":false},"attachEditCard":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editCard editCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired when a new card has been edited.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"!category":"class","detachAttachmentDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAddCard":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:addCard addCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachEditCard":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editCard editCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setFilterCriteria":{"!description":"Sets a new value for property {@link #getFilterCriteria filterCriteria}.\n\nA composite object containing criteria for filtering cards in the Note Taker.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oFilterCriteria: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"oFilterCriteria":"type: object, description: New value for property <code>filterCriteria<\/code>"},"!static":false},"removeAllCards":{"!description":"Removes all the controls from the aggregation {@link #getCards cards}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.NoteTakerCard]","!category":"function","!static":false},"detachDeleteCard":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:deleteCard deleteCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAttachmentClick":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.NoteTaker with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireAddCard":{"!description":"Fires event {@link #event:addCard addCard} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireAttachmentClick":{"!description":"Fires event {@link #event:attachmentClick attachmentClick} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireAttachmentSelect":{"!description":"Fires event {@link #event:attachmentSelect attachmentSelect} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!constructorDescription":"Constructor for a new NoteTaker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleNotes visibleNotes} : int (default: 2)<\/li>\n<li>{@link #getCardViewAllTrigger cardViewAllTrigger} : int (default: 1800)<\/li>\n<li>{@link #getFilterCriteria filterCriteria} : object<\/li>\n<li>{@link #getAttachmentUploadUrl attachmentUploadUrl} : string<\/li>\n<li>{@link #getAttachmentName attachmentName} : string (default: attachment)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCards cards} : sap.suite.ui.commons.NoteTakerCard[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addCard addCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deleteCard deleteCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editCard editCard} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentSelect attachmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentUploadComplete attachmentUploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentDelete attachmentDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:attachmentClick attachmentClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachAttachmentSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentSelect attachmentSelect} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired when the value of attached file has been changed.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"attachAttachmentDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentDelete attachmentDelete} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired, when user deletes the attached file.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"getAttachmentUploadUrl":{"!description":"Gets current value of property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nDefines a path on the server where the attached files are uploaded.","!type":"fn() -> String","!category":"function","!static":false},"attachDeleteCard":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:deleteCard deleteCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired when a new card is deleted if no data binding is available. If data binding is available, the event is fired to notify a developer to delete the element from the model.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"getVisibleNotes":{"!description":"Gets current value of property {@link #getVisibleNotes visibleNotes}.\n\nNumber of notes to display.\n\nDefault value is <code>2<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"fireAttachmentUploadComplete":{"!description":"Fires event {@link #event:attachmentUploadComplete attachmentUploadComplete} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachAttachmentClick":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:attachmentClick attachmentClick} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired when a user presses the attachment link.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to create and store your notes for further reference.","setVisibleNotes":{"!description":"Sets a new value for property {@link #getVisibleNotes visibleNotes}.\n\nNumber of notes to display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>2<\/code>.","!type":"fn(iVisibleNotes: Number) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"iVisibleNotes":"type: int, description: New value for property <code>visibleNotes<\/code>"},"!static":false},"setAttachmentUploadUrl":{"!description":"Sets a new value for property {@link #getAttachmentUploadUrl attachmentUploadUrl}.\n\nDefines a path on the server where the attached files are uploaded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAttachmentUploadUrl: String) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"sAttachmentUploadUrl":"type: string, description: New value for property <code>attachmentUploadUrl<\/code>"},"!static":false},"getCardViewAllTrigger":{"!description":"Gets current value of property {@link #getCardViewAllTrigger cardViewAllTrigger}.\n\nThe View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.\n\nDefault value is <code>1800<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"fireEditCard":{"!description":"Fires event {@link #event:editCard editCard} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachAddCard":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:addCard addCard} event of this <code>sap.suite.ui.commons.NoteTaker<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself.\n\nThe event is fired when a new card is added if no data binding is available. If data binding is available, the event is fired to notify a developer to add an element to the model.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.NoteTaker<\/code> itself"},"!static":false},"addCard":{"!description":"Adds some card to the aggregation {@link #getCards cards}.","!type":"fn(oCard: sap.suite.ui.commons.NoteTakerCard) -> sap.suite.ui.commons.NoteTaker","!category":"function","parameters":{"oCard":"type: sap.suite.ui.commons.NoteTakerCard, description: The card to add; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.NoteTaker.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Standard Fiori technology should be used.<br>This control allows you to create and store your notes for further reference."},"sap.suite.ui.commons.ComparisonChartView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.suite.ui.microchart.ComparisonMicroChartViewType should be used.<br>The view of the ComparisonChart.","Wide":{"!description":"Titles and values are displayed in the same line with the bars.","!type":"String","!category":"enum"},"Normal":{"!description":"Titles and values are displayed above the bars.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.ProcessFlow":{"getLane":{"!description":"Returns a lane from the aggregation named 'lanes' by comparing the laneId property of lane.","!type":"fn(sLaneId: String) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"sLaneId":"type: string, description: ID of the lane to return"},"!static":false},"setWheelZoomable":{"!description":"Sets a new value for property {@link #getWheelZoomable wheelZoomable}.\n\nDefines if semantic zooming by mouse wheel events on desktop browsers is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bWheelZoomable: Boolean) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"bWheelZoomable":"type: boolean, description: New value for property <code>wheelZoomable<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/ProcessFlow","getNodes":{"!description":"Gets content of aggregation {@link #getNodes nodes}.\n\nThis is the aggregation of nodes in the process flow control.","!type":"fn() -> [sap.suite.ui.commons.ProcessFlowNode]","!category":"function","!static":false},"updateModel":{"!description":"Updates the model and rerenders the control.","!type":"fn()","!category":"function","!static":false},"updateNodesOnly":{"!description":"Updates the nodes and rerenders the control.","!type":"fn()","!category":"function","!static":false},"destroyLanes":{"!description":"Destroys all the lanes in the aggregation {@link #getLanes lanes}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlow","!category":"function","!static":false},"getAriaProperties":{"!description":"Gets content of aggregation {@link #getAriaProperties ariaProperties}.\n\nARIA-compliant properties to be added to the control.","!type":"fn() -> sap.suite.ui.commons.AriaProperties","!category":"function","!static":false},"getWheelZoomable":{"!description":"Gets current value of property {@link #getWheelZoomable wheelZoomable}.\n\nDefines if semantic zooming by mouse wheel events on desktop browsers is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeLane":{"!description":"Removes a lane from the aggregation {@link #getLanes lanes}.","!type":"fn(vLane: Number | String | sap.suite.ui.commons.ProcessFlowLaneHeader) -> sap.suite.ui.commons.ProcessFlowLaneHeader","!category":"function","parameters":{"vLane":"type: int|string|sap.suite.ui.commons.ProcessFlowLaneHeader, description: The lane to remove or its index or id"},"!static":false},"getLanes":{"!description":"Gets content of aggregation {@link #getLanes lanes}.\n\nThis is a header of the table for the process flow control.","!type":"fn() -> [sap.suite.ui.commons.ProcessFlowLaneHeader]","!category":"function","!static":false},"zoomOut":{"!description":"Function sets new zoom level with smaller level of details. Having the least detail view it stays as it is.","!type":"fn() -> String","!category":"function","!static":false},"attachLabelPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:labelPress labelPress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself.\n\nThis event is fired when a process flow connection label was clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself"},"!static":false},"setAriaProperties":{"!description":"Sets the aggregated {@link #getAriaProperties ariaProperties}.","!type":"fn(oAriaProperties: sap.suite.ui.commons.AriaProperties) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"oAriaProperties":"type: sap.suite.ui.commons.AriaProperties, description: The ariaProperties to set"},"!static":false},"insertLane":{"!description":"Inserts a lane into the aggregation {@link #getLanes lanes}.","!type":"fn(oLane: sap.suite.ui.commons.ProcessFlowLaneHeader, iIndex: Number) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"oLane":"type: sap.suite.ui.commons.ProcessFlowLaneHeader, description: The lane to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the lane should be inserted at; for a negative value of <code>iIndex<\/code>, the lane is inserted at position 0; for a value greater than the current size of the aggregation, the lane is inserted at the last position"},"!static":false},"detachHeaderPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:headerPress headerPress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setScrollable":{"!description":"Sets a new value for property {@link #getScrollable scrollable}.\n\nBy default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bScrollable: Boolean) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"bScrollable":"type: boolean, description: New value for property <code>scrollable<\/code>"},"!static":false},"applyNodeDisplayState":{"!description":"Function applies the changes to the display state based on the requirements. If any node is in the highlighted state all others are set to the dimmed state.","!type":"fn()","!category":"function","!static":false},"insertNode":{"!description":"Inserts a node into the aggregation {@link #getNodes nodes}.","!type":"fn(oNode: sap.suite.ui.commons.ProcessFlowNode, iIndex: Number) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"oNode":"type: sap.suite.ui.commons.ProcessFlowNode, description: The node to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the node should be inserted at; for a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value greater than the current size of the aggregation, the node is inserted at the last position"},"!static":false},"fireNodePress":{"!description":"Fires event {@link #event:nodePress nodePress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachOnError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:onError onError} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself.\n\nThis event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself"},"!static":false},"!constructorDescription":"Constructor for a new ProcessFlow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFoldedCorners foldedCorners} : boolean (default: false)<\/li>\n<li>{@link #getScrollable scrollable} : boolean (default: true)<\/li>\n<li>{@link #getWheelZoomable wheelZoomable} : boolean (default: true)<\/li>\n<li>{@link #getShowLabels showLabels} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getNodes nodes} : sap.suite.ui.commons.ProcessFlowNode[]<\/li>\n<li>{@link #getLanes lanes} : sap.suite.ui.commons.ProcessFlowLaneHeader[] (default)<\/li>\n<li>{@link #getAriaProperties ariaProperties} : sap.suite.ui.commons.AriaProperties<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:nodeTitlePress nodeTitlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:nodePress nodePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:labelPress labelPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:headerPress headerPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:onError onError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getNode":{"!description":"Returns a node from the aggregation named 'nodes' by comparing the nodeId property of node.","!type":"fn(sNodeId: String) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"sNodeId":"type: string, description: ID of node to return"},"!static":false},"attachNodePress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:nodePress nodePress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself.\n\nThis event is fired when a process flow node was clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself"},"!static":false},"setSelectedPath":{"!description":"Sets the path between source and target node to selected status and rerenders the control. If parameters are null, sets all nodes to normal status.","!type":"fn(sourceNodeId: String, targetNodeId: String)","!category":"function","parameters":{"sourceNodeId":"type: string, description: of the path or null","targetNodeId":"type: string, description: of the path or null"},"!static":false},"getShowLabels":{"!description":"Gets current value of property {@link #getShowLabels showLabels}.\n\nDefines if the connection labels are shown or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachLabelPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:labelPress labelPress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachNodePress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:nodePress nodePress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!helpDescription":"Complex control that enables you to display documents or other items in their flow.","!proto":"sap.ui.core.Control","optimizeLayout":{"!description":"Optimizes the layout and updates the model. To be used carefully because of its possible side effects on the performance.","!type":"fn(isOptimized: Boolean) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"isOptimized":"type: boolean, description: True if the layout should be optimized; false if the layout should be brought to the initial state."},"!static":false},"removeAllNodes":{"!description":"Removes all the controls from the aggregation {@link #getNodes nodes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.ProcessFlowNode]","!category":"function","!static":false},"fireOnError":{"!description":"Fires event {@link #event:onError onError} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachNodeTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use nodePress event instead ( click on the node)<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:nodeTitlePress nodeTitlePress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"addLane":{"!description":"Adds some lane to the aggregation {@link #getLanes lanes}.","!type":"fn(oLane: sap.suite.ui.commons.ProcessFlowLaneHeader) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"oLane":"type: sap.suite.ui.commons.ProcessFlowLaneHeader, description: The lane to add; if empty, nothing is inserted"},"!static":false},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation {@link #getNodes nodes}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlow","!category":"function","!static":false},"fireHeaderPress":{"!description":"Fires event {@link #event:headerPress headerPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachOnError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:onError onError} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"removeAllLanes":{"!description":"Removes all the controls from the aggregation {@link #getLanes lanes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.ProcessFlowLaneHeader]","!category":"function","!static":false},"fireNodeTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use nodePress event instead ( click on the node)<br>Fires event {@link #event:nodeTitlePress nodeTitlePress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setFocusToLabel":{"!description":"Sets the focus to the given Label","!type":"fn(label: sap.suite.ui.commons.ProcessFlowConnectionlabel)","!category":"function","parameters":{"label":"type: sap.suite.ui.commons.ProcessFlowConnectionlabel, description: Label to focus"},"!static":false},"attachHeaderPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:headerPress headerPress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself.\n\nThis event is fired when the header column is clicked. This event is available only in header mode, i.e. when no nodes are defined.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself"},"!static":false},"removeNode":{"!description":"Removes a node from the aggregation {@link #getNodes nodes}.","!type":"fn(vNode: Number | String | sap.suite.ui.commons.ProcessFlowNode) -> sap.suite.ui.commons.ProcessFlowNode","!category":"function","parameters":{"vNode":"type: int|string|sap.suite.ui.commons.ProcessFlowNode, description: The node to remove or its index or id"},"!static":false},"!category":"class","setShowLabels":{"!description":"Overwrites setShowLabels of ProcessFlow control to apply additional functionality.","!type":"fn(value: Boolean)","!category":"function","parameters":{"value":"type: boolean, description: New value for showLabels"},"!static":false},"getScrollable":{"!description":"Gets current value of property {@link #getScrollable scrollable}.\n\nBy default, the control body is embedded into a scroll container of fixed size, so the user can put the control into a fixed size layout. When the control body (the graph) gets larger, the container cuts the overflowing parts of the graph and the cut parts can be displayed by scrolling the control body. When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).\n\nThe scrolling feature can be turned off by setting this property value to false, so the width/height of the whole control will change as the flow graph gets smaller/larger. In this case the control body could not be scrolled, as the control body size matches the control container size.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachNodeTitlePress":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26 Should not be used any longer, use nodePress event instead ( click on the node)<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:nodeTitlePress nodeTitlePress} event of this <code>sap.suite.ui.commons.ProcessFlow<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself.\n\nThis event is fired when a process flow node title was clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.ProcessFlow<\/code> itself"},"!static":false},"destroyAriaProperties":{"!description":"Destroys the ariaProperties in the aggregation {@link #getAriaProperties ariaProperties}.","!type":"fn() -> sap.suite.ui.commons.ProcessFlow","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setZoomLevel":{"!description":"Function sets the zoom level.","!type":"fn(zoomLevel: sap.suite.ui.commons.ProcessFlowZoomLevel)","!category":"function","parameters":{"zoomLevel":"type: sap.suite.ui.commons.ProcessFlowZoomLevel, description: The new zoom level."},"!static":false},"getZoomLevel":{"!description":"Function returns current zoom level.","!type":"fn() -> String","!category":"function","!static":false},"indexOfLane":{"!description":"Checks for the provided <code>sap.suite.ui.commons.ProcessFlowLaneHeader<\/code> in the aggregation {@link #getLanes lanes}. and returns its index if found or -1 otherwise.","!type":"fn(oLane: sap.suite.ui.commons.ProcessFlowLaneHeader) -> Number","!category":"function","parameters":{"oLane":"type: sap.suite.ui.commons.ProcessFlowLaneHeader, description: The lane whose index is looked for"},"!static":false},"indexOfNode":{"!description":"Checks for the provided <code>sap.suite.ui.commons.ProcessFlowNode<\/code> in the aggregation {@link #getNodes nodes}. and returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.suite.ui.commons.ProcessFlowNode) -> Number","!category":"function","parameters":{"oNode":"type: sap.suite.ui.commons.ProcessFlowNode, description: The node whose index is looked for"},"!static":false},"!description":"Complex control that enables you to display documents or other items in their flow.","zoomIn":{"!description":"Function sets new zoom level with higher level of details. Having max details it stays as it is.","!type":"fn() -> String","!category":"function","!static":false},"setFoldedCorners":{"!description":"Sets a new value for property {@link #getFoldedCorners foldedCorners}.\n\nThis property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFoldedCorners: Boolean) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"bFoldedCorners":"type: boolean, description: New value for property <code>foldedCorners<\/code>"},"!static":false},"getFoldedCorners":{"!description":"Gets current value of property {@link #getFoldedCorners foldedCorners}.\n\nThis property defines the folded corners for the single node control. The following values exist: - true: means folded corner - false/null/undefined: means normal corner\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireLabelPress":{"!description":"Fires event {@link #event:labelPress labelPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.ProcessFlow","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getFocusedNode":{"!description":"Function returns the nodeId of the node which is focused.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ProcessFlow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.ChartContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ChartContainer"},"sap.suite.ui.commons.imageeditor.HistoryItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.HistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.imageeditor.HistoryItem"},"sap.suite.ui.commons.TimelineFilterListItem":{"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nA textual label for the filter criterion. This text is displayed in the filter criteria list in the UI.","!type":"fn() -> String","!category":"function","!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nA key for a filter criterion. Each filter criterion must have a unique key.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Provides a filter criteria list for the items filter in the Timeline control.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineFilterListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new TimelineFilterListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nA textual label for the filter criterion. This text is displayed in the filter criteria list in the UI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.suite.ui.commons.TimelineFilterListItem","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/TimelineFilterListItem","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nA key for a filter criterion. Each filter criterion must have a unique key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.TimelineFilterListItem","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TimelineFilterListItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"Provides a filter criteria list for the items filter in the Timeline control."},"sap.suite.ui.commons.statusindicator.Circle":{"getR":{"!description":"Gets current value of property {@link #getR r}.\n\nDefines the radius of the circle.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setCx":{"!description":"Sets a new value for property {@link #getCx cx}.\n\nDefines the x coordinate of the center of the circle with respect to its parent status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fCx: Number) -> sap.suite.ui.commons.statusindicator.Circle","!category":"function","parameters":{"fCx":"type: float, description: New value for property <code>cx<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Circle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Circle.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCx cx} : float (default: 0)<\/li>\n<li>{@link #getCy cy} : float (default: 0)<\/li>\n<li>{@link #getR r} : float (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.suite.ui.commons.statusindicator.SimpleShape#constructor sap.ui.suite.ui.commons.statusindicator.SimpleShape}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/Circle","setCy":{"!description":"Sets a new value for property {@link #getCy cy}.\n\nDefines the y coordinate of the center of the circle with respect to its parent status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fCy: Number) -> sap.suite.ui.commons.statusindicator.Circle","!category":"function","parameters":{"fCy":"type: float, description: New value for property <code>cy<\/code>"},"!static":false},"getCx":{"!description":"Gets current value of property {@link #getCx cx}.\n\nDefines the x coordinate of the center of the circle with respect to its parent status indicator.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Status indicator shape in the form of a circle.","getCy":{"!description":"Gets current value of property {@link #getCy cy}.\n\nDefines the y coordinate of the center of the circle with respect to its parent status indicator.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","setR":{"!description":"Sets a new value for property {@link #getR r}.\n\nDefines the radius of the circle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fR: Number) -> sap.suite.ui.commons.statusindicator.Circle","!category":"function","parameters":{"fR":"type: float, description: New value for property <code>r<\/code>"},"!static":false},"!helpDescription":"Status indicator shape in the form of a circle.","!proto":"sap.ui.suite.ui.commons.statusindicator.SimpleShape","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.Circle.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.TimelineItem":{"destroyEmbeddedControl":{"!description":"Destroys the embeddedControl in the aggregation {@link #getEmbeddedControl embeddedControl}.","!type":"fn() -> sap.suite.ui.commons.TimelineItem","!category":"function","!static":false},"getEmbeddedControl":{"!description":"Gets content of aggregation {@link #getEmbeddedControl embeddedControl}.\n\nA UI5 control that is displayed as a timeline post's content instead of the default content (text). Examples of such a control include the Panel control and the List control.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"attachCustomActionClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:customActionClicked customActionClicked} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nFired when custom action link is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"attachUserNameClicked":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:userNameClicked userNameClicked} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nThis event is fired when a user name is clicked in the post's header section.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"getUserPicture":{"!description":"Gets current value of property {@link #getUserPicture userPicture}.\n\nPicture shown next to the user name.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"detachCustomActionClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:customActionClicked customActionClicked} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getReplyList":{"!description":"Gets content of aggregation {@link #getReplyList replyList}.\n\nA list of replies related to the post.","!type":"fn() -> sap.m.List","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nText shown inside the timeline post.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/TimelineItem","setEmbeddedControl":{"!description":"Sets the aggregated {@link #getEmbeddedControl embeddedControl}.","!type":"fn(oEmbeddedControl: sap.ui.core.Control) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oEmbeddedControl":"type: sap.ui.core.Control, description: The embeddedControl to set"},"!static":false},"destroyReplyList":{"!description":"Destroys the replyList in the aggregation {@link #getReplyList replyList}.","!type":"fn() -> sap.suite.ui.commons.TimelineItem","!category":"function","!static":false},"getMaxCharacters":{"!description":"Gets current value of property {@link #getMaxCharacters maxCharacters}.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs.","!type":"fn() -> Number","!category":"function","!static":false},"getUseIconTooltip":{"!description":"Gets current value of property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setDateTime":{"!description":"Sets a new value for property {@link #getDateTime dateTime}.\n\nDate and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date<\/code> object. <\/li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. <\/li> <li> A string with an integer representing Unix time in milliseconds. <\/li> <li> A string that contains <code>Date([number])<\/code>, where <code>[number]<\/code> represents Unix time in milliseconds. <\/li> <\/ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse<\/code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oDateTime: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oDateTime":"type: any, description: New value for property <code>dateTime<\/code>"},"!static":false},"insertSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(oSuggestionItem: sap.m.StandardListItem, iIndex: Number) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position","oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem to insert; if empty, nothing is inserted"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nText shown in the post title right after the user name.","!type":"fn() -> String","!category":"function","!static":false},"setStatus":{"!description":"Sets a new value for property {@link #getStatus status}.\n\nIndicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information<\/code> <\/li> <li> <code>Success<\/code> <\/li> <li> <code>Warning<\/code> <\/li> <li> <code>Error<\/code> <\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sStatus: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sStatus":"type: string, description: New value for property <code>status<\/code>"},"!static":false},"fireSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Fires event {@link #event:suggest suggest} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(vSuggestionItem: Number | String | sap.m.StandardListItem) -> sap.m.StandardListItem","!category":"function","parameters":{"vSuggestionItem":"type: int|string|sap.m.StandardListItem, description: The suggestionItem to remove or its index or id"},"!static":false},"setIconTooltip":{"!description":"Sets a new value for property {@link #getIconTooltip iconTooltip}.\n\nTooltip for an icon displayed on the timeline axis.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconTooltip: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sIconTooltip":"type: string, description: New value for property <code>iconTooltip<\/code>"},"!static":false},"getStatus":{"!description":"Gets current value of property {@link #getStatus status}.\n\nIndicates the post status. The status affects the post's icon color. Supported values: <ul> <li> <code>Information<\/code> <\/li> <li> <code>Success<\/code> <\/li> <li> <code>Warning<\/code> <\/li> <li> <code>Error<\/code> <\/li> <\/ul>","!type":"fn() -> String","!category":"function","!static":false},"removeAllCustomAction":{"!description":"Removes all the controls from the aggregation {@link #getCustomAction customAction}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.CustomData]","!category":"function","!static":false},"detachReplyListOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:replyListOpen replyListOpen} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getUserNameClickable":{"!description":"Gets current value of property {@link #getUserNameClickable userNameClickable}.\n\nMakes the user name clickable. Clicking the name fires a userNameClicked event.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new TimelineItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDateTime dateTime} : any<\/li>\n<li>{@link #getFilterValue filterValue} : string<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getIconTooltip iconTooltip} : string<\/li>\n<li>{@link #getUseIconTooltip useIconTooltip} : boolean (default: true)<\/li>\n<li>{@link #getMaxCharacters maxCharacters} : int<\/li>\n<li>{@link #getReplyCount replyCount} : int<\/li>\n<li>{@link #getStatus status} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getUserName userName} : string<\/li>\n<li>{@link #getUserNameClickable userNameClickable} : boolean (default: false)<\/li>\n<li>{@link #getUserPicture userPicture} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomAction customAction} : sap.ui.core.CustomData[]<\/li>\n<li>{@link #getCustomReply customReply} : sap.ui.core.Control<\/li>\n<li>{@link #getEmbeddedControl embeddedControl} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getReplyList replyList} : sap.m.List<\/li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.StandardListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:userNameClicked userNameClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:replyPost replyPost} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:replyListOpen replyListOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:customActionClicked customActionClicked} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachReplyListOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:replyListOpen replyListOpen} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nThis event is fired when the Reply link is clicked to open the reply dialog.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"fireSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Fires event {@link #event:suggestionItemSelected suggestionItemSelected} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getCustomReply":{"!description":"Gets content of aggregation {@link #getCustomReply customReply}.\n\nA UI5 control that acts as a custom reply dialog. It is used instead of the default reply dialog that is displayed when the user clicks the Reply link. Supports UI5 controls that have an openBy method, for example, the Popup control.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nText shown in the post title right after the user name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setFilterValue":{"!description":"Sets a new value for property {@link #getFilterValue filterValue}.\n\nText for the items filter name. This text will be used as the name of the items filter in the filter popover.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFilterValue: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sFilterValue":"type: string, description: New value for property <code>filterValue<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon on the timeline axis that corresponds to the point in time when the entry was posted. Posts can be displayed in chronological or reverse chronological order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"removeCustomAction":{"!description":"Removes a customAction from the aggregation {@link #getCustomAction customAction}.","!type":"fn(vCustomAction: Number | String | sap.ui.core.CustomData) -> sap.ui.core.CustomData","!category":"function","parameters":{"vCustomAction":"type: int|string|sap.ui.core.CustomData, description: The customAction to remove or its index or id"},"!static":false},"addCustomAction":{"!description":"Adds some customAction to the aggregation {@link #getCustomAction customAction}.","!type":"fn(oCustomAction: sap.ui.core.CustomData) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oCustomAction":"type: sap.ui.core.CustomData, description: The customAction to add; if empty, nothing is inserted"},"!static":false},"getDateTime":{"!description":"Gets current value of property {@link #getDateTime dateTime}.\n\nDate and time value of the timeline post. This value must be in one of the following formats: <ul> <li> A valid instance of the <code>Date<\/code> object. <\/li> <li> An integer representing Unix time (also known as POSIX or Epoch time) in milliseconds. <\/li> <li> A string with an integer representing Unix time in milliseconds. <\/li> <li> A string that contains <code>Date([number])<\/code>, where <code>[number]<\/code> represents Unix time in milliseconds. <\/li> <\/ul> If this property has any other format, the timeline will try to parse it using <code>Date.parse<\/code>. It is not recommended to use this functionality, as different web browsers implement this function differently, which may lead to unpredictable behavior.","!type":"fn() -> Object","!category":"function","!static":false},"insertCustomAction":{"!description":"Inserts a customAction into the aggregation {@link #getCustomAction customAction}.","!type":"fn(oCustomAction: sap.ui.core.CustomData, iIndex: Number) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oCustomAction":"type: sap.ui.core.CustomData, description: The customAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the customAction should be inserted at; for a negative value of <code>iIndex<\/code>, the customAction is inserted at position 0; for a value greater than the current size of the aggregation, the customAction is inserted at the last position"},"!static":false},"!helpDescription":"An entry posted on the timeline.","!proto":"sap.ui.core.Control","getUserName":{"!description":"Gets current value of property {@link #getUserName userName}.\n\nUser name shown in the post title.","!type":"fn() -> String","!category":"function","!static":false},"destroyCustomAction":{"!description":"Destroys all the customAction in the aggregation {@link #getCustomAction customAction}.","!type":"fn() -> sap.suite.ui.commons.TimelineItem","!category":"function","!static":false},"getReplyCount":{"!description":"Gets current value of property {@link #getReplyCount replyCount}.\n\nNumber of replies to a timeline post.","!type":"fn() -> Number","!category":"function","!static":false},"detachUserNameClicked":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:userNameClicked userNameClicked} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"destroySuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn() -> sap.suite.ui.commons.TimelineItem","!category":"function","!static":false},"attachSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nThis event is fired when a suggested post is selected in the search suggestions popup. This event is fired only when the showSuggestion propery is set to <code>true<\/code> and there are suggested posts shown in the suggestions popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"getSuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Gets content of aggregation {@link #getSuggestionItems suggestionItems}.\n\nSuggested posts.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"fn() -> [sap.m.StandardListItem]","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon on the timeline axis that corresponds to the point in time when the entry was posted. Posts can be displayed in chronological or reverse chronological order.","!type":"fn() -> String","!category":"function","!static":false},"attachReplyPost":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:replyPost replyPost} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nThis event is fired when the Reply button is clicked in the links section of a timeline post.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"getFilterValue":{"!description":"Gets current value of property {@link #getFilterValue filterValue}.\n\nText for the items filter name. This text will be used as the name of the items filter in the filter popover.","!type":"fn() -> String","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nText shown inside the timeline post.","!type":"fn() -> String","!category":"function","!static":false},"getIconTooltip":{"!description":"Gets current value of property {@link #getIconTooltip iconTooltip}.\n\nTooltip for an icon displayed on the timeline axis.","!type":"fn() -> String","!category":"function","!static":false},"setUserName":{"!description":"Sets a new value for property {@link #getUserName userName}.\n\nUser name shown in the post title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUserName: String) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sUserName":"type: string, description: New value for property <code>userName<\/code>"},"!static":false},"!category":"class","fireReplyPost":{"!description":"Fires event {@link #event:replyPost replyPost} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setUseIconTooltip":{"!description":"Sets a new value for property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUseIconTooltip: Boolean) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"bUseIconTooltip":"type: boolean, description: New value for property <code>useIconTooltip<\/code>"},"!static":false},"indexOfCustomAction":{"!description":"Checks for the provided <code>sap.ui.core.CustomData<\/code> in the aggregation {@link #getCustomAction customAction}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomAction: sap.ui.core.CustomData) -> Number","!category":"function","parameters":{"oCustomAction":"type: sap.ui.core.CustomData, description: The customAction whose index is looked for"},"!static":false},"setReplyCount":{"!description":"Sets a new value for property {@link #getReplyCount replyCount}.\n\nNumber of replies to a timeline post.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iReplyCount: Number) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"iReplyCount":"type: int, description: New value for property <code>replyCount<\/code>"},"!static":false},"setReplyList":{"!description":"Sets the aggregated {@link #getReplyList replyList}.","!type":"fn(oReplyList: sap.m.List) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oReplyList":"type: sap.m.List, description: The replyList to set"},"!static":false},"setUserNameClickable":{"!description":"Sets a new value for property {@link #getUserNameClickable userNameClickable}.\n\nMakes the user name clickable. Clicking the name fires a userNameClicked event.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUserNameClickable: Boolean) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"bUserNameClickable":"type: boolean, description: New value for property <code>userNameClickable<\/code>"},"!static":false},"setCustomReply":{"!description":"Sets the aggregated {@link #getCustomReply customReply}.","!type":"fn(oCustomReply: sap.ui.core.Control) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oCustomReply":"type: sap.ui.core.Control, description: The customReply to set"},"!static":false},"attachSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself.\n\nThis event is fired when the user types text into the search field and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions inside a popup.<br> As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TimelineItem<\/code> itself"},"!static":false},"addSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(oSuggestionItem: sap.m.StandardListItem) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem to add; if empty, nothing is inserted"},"!static":false},"setUserPicture":{"!description":"Sets a new value for property {@link #getUserPicture userPicture}.\n\nPicture shown next to the user name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUserPicture: sap.ui.core.URI) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"sUserPicture":"type: sap.ui.core.URI, description: New value for property <code>userPicture<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TimelineItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireReplyListOpen":{"!description":"Fires event {@link #event:replyListOpen replyListOpen} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyCustomReply":{"!description":"Destroys the customReply in the aggregation {@link #getCustomReply customReply}.","!type":"fn() -> sap.suite.ui.commons.TimelineItem","!category":"function","!static":false},"detachSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireUserNameClicked":{"!description":"Fires event {@link #event:userNameClicked userNameClicked} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachReplyPost":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:replyPost replyPost} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireCustomActionClicked":{"!description":"Fires event {@link #event:customActionClicked customActionClicked} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setMaxCharacters":{"!description":"Sets a new value for property {@link #getMaxCharacters maxCharacters}.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktop computers as limits. Based on these values, the text of the timeline post is collapsed once it reaches these character limits. In this case, only the specified number of characters is displayed. By clicking the More link, the entire text can be displayed. Clicking Less collapses the text. The application can set the value according to its needs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iMaxCharacters: Number) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"iMaxCharacters":"type: int, description: New value for property <code>maxCharacters<\/code>"},"!static":false},"removeAllSuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.m.StandardListItem]","!category":"function","!static":false},"detachSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.TimelineItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"indexOfSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Checks for the provided <code>sap.m.StandardListItem<\/code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.","!type":"fn(oSuggestionItem: sap.m.StandardListItem) -> Number","!category":"function","parameters":{"oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem whose index is looked for"},"!static":false},"!description":"An entry posted on the timeline.","getCustomAction":{"!description":"Gets content of aggregation {@link #getCustomAction customAction}.\n\nCustom actions displayed as links in the links section of the post. The key must be unique for each link. Values are used as labels for the link. When a user clicks the link, a customActionClicked event is fired.","!type":"fn() -> [sap.ui.core.CustomData]","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TimelineItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.Status_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Status with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Status"},"sap.suite.ui.commons.networkgraph.layout":{"NoopLayout":"sap.suite.ui.commons.networkgraph.layout.NoopLayout_obj","maximumDuration":{"!description":"Specifies the maximal time in miliseconds the algorithm is allowed to run.","!type":"Number","!category":"enum"},"LayoutTask":"sap.suite.ui.commons.networkgraph.layout.LayoutTask_obj","friction":{"!description":"Value in [0,1] range. See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#friction}","!type":"Number","!category":"enum"},"LayeredLayout":"sap.suite.ui.commons.networkgraph.layout.LayeredLayout_obj","lineSpacingFactor":{"!description":"lineSpacingFactor : Number","!type":"Number","!category":"enum"},"SwimLaneChainLayout":"sap.suite.ui.commons.networkgraph.layout.SwimLaneChainLayout_obj","nodeSpacing":{"!description":"Define a minimal distance on nodes the algorithm will try to keep. The default value is 55. Note that values below 50 are incompatible with presence of groups due to insufficient space for group title bars and space between nodes and their groups' borders.","!type":"Number","!category":"enum"},"TwoColumnsLayout":"sap.suite.ui.commons.networkgraph.layout.TwoColumnsLayout_obj","charge":{"!description":"See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#charge}","!type":"Number","!category":"enum"},"nodePlacement":{"!description":"A node placement strategy to use (see {@link sap.suite.ui.commons.networkgraph.NodePlacement}).","!type":"sap.suite.ui.commons.networkgraph.NodePlacement","!category":"enum"},"ForceBasedLayout":"sap.suite.ui.commons.networkgraph.layout.ForceBasedLayout_obj","ForcedDirectedLayout":"sap.suite.ui.commons.networkgraph.layout.ForcedDirectedLayout_obj","alpha":{"!description":"See: {@link https://github.com/d3/d3-3.x-api-reference/blob/master/Force-Layout.md#alpha}","!type":"Number","!category":"enum"},"!category":"namespace","mergeEdges":{"!description":"Determines if all lines should lead to the same place in the node, or if each line should point to a different place.","!type":"Boolean","!category":"enum"},"LayoutAlgorithm":"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm_obj"},"sap.suite.ui.commons.networkgraph.Group_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Group with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Group"},"sap.suite.ui.commons.Timeline":{"getSortOldestFirst":{"!description":"Gets current value of property {@link #getSortOldestFirst sortOldestFirst}.\n\nWhether the oldest item will be displayed first.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachItemFiltering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemFiltering itemFiltering} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired for every timeline post when data filtering is being applied. It indicates whether this post is included in the filtering and why. Can be used only when the enableModelFilter property is set to <code>false<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"getFilterList":{"!description":"Gets content of aggregation {@link #getFilterList filterList}.\n\nCustom filter criteria for the items filter.","!type":"fn() -> [sap.suite.ui.commons.TimelineFilterListItem]","!category":"function","!static":false},"removeFilterList":{"!description":"Removes a filterList from the aggregation {@link #getFilterList filterList}.","!type":"fn(vFilterList: Number | String | sap.suite.ui.commons.TimelineFilterListItem) -> sap.suite.ui.commons.TimelineFilterListItem","!category":"function","parameters":{"vFilterList":"type: int|string|sap.suite.ui.commons.TimelineFilterListItem, description: The filterList to remove or its index or id"},"!static":false},"setFilterTitle":{"!description":"Sets a new value for property {@link #getFilterTitle filterTitle}.\n\nTitle for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFilterTitle: String) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sFilterTitle":"type: string, description: New value for property <code>filterTitle<\/code>"},"!static":false},"getShowTimeFilter":{"!description":"Gets current value of property {@link #getShowTimeFilter showTimeFilter}.\n\nShows the time range filter in the filter menu.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!module":"sap/suite/ui/commons/Timeline","setGrowing":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the growingThreshold property instead, setting it to 0 to disable growing.<br>Sets a new value for property {@link #getGrowing growing}.\n\nIf set to <code>true<\/code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bGrowing: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bGrowing":"type: boolean, description: New value for property <code>growing<\/code>"},"!static":false},"getTextHeight":{"!description":"Gets current value of property {@link #getTextHeight textHeight}.\n\nHeight of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic<\/code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. <\/li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.<\/li> <li> Pixels &ndash; If set to a number followed by <code>px<\/code>, such as <code>50px<\/code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.<\/li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. <\/li> <\/ul>\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"attachCustomMessageClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:customMessageClosed customMessageClosed} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when the user clicks the Close button on a message strip.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"setForceGrowing":{"!description":"Sets a new value for property {@link #getForceGrowing forceGrowing}.\n\nIf set to <code>true<\/code>, the <i>Show More<\/i> button is displayed when the user scrolls along the timeline axis.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bForceGrowing: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bForceGrowing":"type: boolean, description: New value for property <code>forceGrowing<\/code>"},"!static":false},"destroyFilterList":{"!description":"Destroys all the filterList in the aggregation {@link #getFilterList filterList}.","!type":"fn() -> sap.suite.ui.commons.Timeline","!category":"function","!static":false},"getGroup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the groupByType property instead.<br>Gets current value of property {@link #getGroup group}.\n\nGroups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Fires event {@link #event:suggest suggest} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachFilterSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filterSelectionChange filterSelectionChange} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when filtering is applied to timeline posts or when a search term is entered into the search field. This event can be fired only if the enableModelFilter property is set to <code>true<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"detachCustomMessageClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:customMessageClosed customMessageClosed} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setCustomModelFilter":{"!description":"Adds a custom filter in addition to the default filters: items filter, time range filter, and search.","!type":"fn(sFilterId: String, oFilter: sap.ui.model.Filter)","!category":"function","parameters":{"oFilter":"type: sap.ui.model.Filter, description: Filter object.","sFilterId":"type: string, description: A unique filter ID that the caller can use to manipulate the filter after it has been created, for example, to remove it."},"!static":false},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.TimelineItem) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.TimelineItem, description: The content to add; if empty, nothing is inserted"},"!static":false},"getGroups":{"!description":"Returns all group items.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.TimelineItem]","!category":"function","!static":false},"setTextHeight":{"!description":"Sets a new value for property {@link #getTextHeight textHeight}.\n\nHeight of the timeline posts. It can be set to either of the following types of values: <ul> <li> Automatic &ndash; If set to <code>automatic<\/code>, the optimal post height is calculated automatically to fit the timeline height specified by the height parameter. This option works only in horizontal timelines and only when the timeline height is defined. In vertical timelines, this setting is ignored. <\/li> <li> Number &ndash; If set to a number, a corresponding number of text lines is displayed in every post.<\/li> <li> Pixels &ndash; If set to a number followed by <code>px<\/code>, such as <code>50px<\/code>, the closest number in lines is calculated and applied to the timeline posts, so that the post height corresponds to the specified number of pixels and the text lines are not cut off in the middle of a line.<\/li> <li> Any other valid {@link sap.ui.core.CSSSize CSSSize} value that is inserted into the text wrapper without being changed. <\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sTextHeight: String) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sTextHeight":"type: string, description: New value for property <code>textHeight<\/code>"},"!static":false},"setShowSuggestion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Sets a new value for property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true<\/code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSuggestion: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowSuggestion":"type: boolean, description: New value for property <code>showSuggestion<\/code>"},"!static":false},"resetTimeLimits":{"!description":"Resets the start date and end date of the timeline, so that they are calculated once again. Call this method when changing the date of a timeline post.","!type":"fn()","!category":"function","!static":false},"setShowSort":{"!description":"Sets a new value for property {@link #getShowSort showSort}.\n\nShow sort icon in the header bar. For displaying this icon, sorting have to be allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSort: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowSort":"type: boolean, description: New value for property <code>showSort<\/code>"},"!static":false},"getEnableScroll":{"!description":"Gets current value of property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true<\/code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"exit":{"!description":"Cleans up the element instance before destruction","!type":"fn()","!category":"function","!static":false},"removeAllFilterList":{"!description":"Removes all the controls from the aggregation {@link #getFilterList filterList}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.TimelineFilterListItem]","!category":"function","!static":false},"setEnableBusyIndicator":{"!description":"Sets a new value for property {@link #getEnableBusyIndicator enableBusyIndicator}.\n\nWhen this property is set to <code>true<\/code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableBusyIndicator: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableBusyIndicator":"type: boolean, description: New value for property <code>enableBusyIndicator<\/code>"},"!static":false},"fireSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Fires event {@link #event:suggestionItemSelected suggestionItemSelected} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setSortOldestFirst":{"!description":"Sets a new value for property {@link #getSortOldestFirst sortOldestFirst}.\n\nWhether the oldest item will be displayed first.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSortOldestFirst: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bSortOldestFirst":"type: boolean, description: New value for property <code>sortOldestFirst<\/code>"},"!static":false},"getCustomFilter":{"!description":"Gets content of aggregation {@link #getCustomFilter customFilter}.\n\nA custom filter to be used instead of the default item filter. This control must have an <code>openBy<\/code> or <code>open<\/code> function that is used by the timeline to open the control. If the control has both functions, <code>openBy<\/code> is used.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"detachFilterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filterOpen filterOpen} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setAlignment":{"!description":"Sets a new value for property {@link #getAlignment alignment}.\n\nDefines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal<\/code>, the <code>Right<\/code> value is interpreted as bottom alignment and the <code>Left<\/code> value as top alignment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Right<\/code>.","!type":"fn(sAlignment: sap.suite.ui.commons.TimelineAlignment) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sAlignment":"type: sap.suite.ui.commons.TimelineAlignment, description: New value for property <code>alignment<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"The timeline control shows entries (such as objects, events, or posts) in chronological order. <br>A common use case is to provide information about changes to an object, or events related to an object. These entries can be generated by the system (for example, value XY changed from A to B), or added manually. <br>There are two distinct variants of the timeline: basic and social. The basic timeline is read-only, while the social timeline offers a high level of interaction and collaboration, and is integrated within SAP Jam.","getShowSuggestion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Gets current value of property {@link #getShowSuggestion showSuggestion}.\n\nIf set to <code>true<\/code>, a suggest event is fired when the user enters text into the search field. Changing the suggestionItems aggregation in the suggest event listener will display suggestions inside a popup. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEnableModelFilter":{"!description":"Sets a new value for property {@link #getEnableModelFilter enableModelFilter}.\n\nEnables filtering directly on the binding level. If set to <code>true<\/code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false<\/code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold<\/code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableModelFilter: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableModelFilter":"type: boolean, description: New value for property <code>enableModelFilter<\/code>"},"!static":false},"fireGrow":{"!description":"Fires event {@link #event:grow grow} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getShowSort":{"!description":"Gets current value of property {@link #getShowSort showSort}.\n\nShow sort icon in the header bar. For displaying this icon, sorting have to be allowed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowTimeFilter":{"!description":"Sets a new value for property {@link #getShowTimeFilter showTimeFilter}.\n\nShows the time range filter in the filter menu.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowTimeFilter: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowTimeFilter":"type: boolean, description: New value for property <code>showTimeFilter<\/code>"},"!static":false},"attachSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when a suggested post is selected in the suggestions popup list. This event is only fired when the showSuggestion property is set to <code>true<\/code> and there is at least one post in the suggestions popup list. See also the suggestionItems aggregation.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"destroyCustomFilter":{"!description":"Destroys the customFilter in the aggregation {@link #getCustomFilter customFilter}.","!type":"fn() -> sap.suite.ui.commons.Timeline","!category":"function","!static":false},"getEnableDoubleSided":{"!description":"Gets current value of property {@link #getEnableDoubleSided enableDoubleSided}.\n\nIf set to <code>true<\/code>, timeline posts are displayed on both sides of the timeline axis.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Gets content of aggregation {@link #getSuggestionItems suggestionItems}.\n\nItems for suggestions. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"fn() -> [sap.m.StandardListItem]","!category":"function","!static":false},"getShowSearch":{"!description":"Gets current value of property {@link #getShowSearch showSearch}.\n\nSets the search field visibility on the timeline toolbar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachFilterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filterOpen filterOpen} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when the user clicks the filter icon in the timeline toolbar and opens the filter.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"detachAddPost":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:addPost addPost} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getLazyLoading":{"!description":"Gets current value of property {@link #getLazyLoading lazyLoading}.\n\nEnables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setModelFilterMessage":{"!description":"Sets the message displayed in the filter message strip. This message overwrites the default filter message.","!type":"fn(sType: sap.suite.ui.commons.TimelineFilterType, sMessage: String)","!category":"function","parameters":{"sMessage":"type: string, description: The message that should replace the default message.","sType":"type: sap.suite.ui.commons.TimelineFilterType, description: Filter type. Supports only items filter (<code>Data<\/code>) and time range filter (<code>Time<\/code>)."},"!static":false},"getScrollingFadeout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.0 Not Fiori.<br>Gets current value of property {@link #getScrollingFadeout scrollingFadeout}.\n\nIf set to <code>Area<\/code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons<\/code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None<\/code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.suite.ui.commons.TimelineScrollingFadeout","!category":"function","!static":false},"setGroupBy":{"!description":"Sets a new value for property {@link #getGroupBy groupBy}.\n\nGroups the timeline posts by a field. Only fields that contain date values are supported.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sGroupBy: String) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sGroupBy":"type: string, description: New value for property <code>groupBy<\/code>"},"!static":false},"!category":"class","adjustUI":{"!description":"Refreshes the UI.","!type":"fn()","!category":"function","!static":false},"attachSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when the user enters text into the search field, in cases when the showSuggestion property is set to <code>true<\/code>. Changing the suggestionItems aggregation will show the suggestions inside a popup.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"addSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Adds some suggestionItem to the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(oSuggestionItem: sap.m.StandardListItem) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem to add; if empty, nothing is inserted"},"!static":false},"getGrowing":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the growingThreshold property instead, setting it to 0 to disable growing.<br>Gets current value of property {@link #getGrowing growing}.\n\nIf set to <code>true<\/code>, the timeline displays a limited number of posts with a button to show more. The displayed posts limit can be set using the growingThreshold property. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGrowingThreshold}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachSuggest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggest suggest} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setCustomMessage":{"!description":"Sets a custom message that is displayed below the timeline's header.","!type":"fn(sMsg: String)","!category":"function","parameters":{"sMsg":"type: string, description: Message text."},"!static":false},"getShowHeaderBar":{"!description":"Gets current value of property {@link #getShowHeaderBar showHeaderBar}.\n\nShows the timeline toolbar with search and filter options.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachSuggestionItemSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Replaced by {@link sap.collaboration.components.feed.Component}.<br>Detaches event handler <code>fnFunction<\/code> from the {@link #event:suggestionItemSelected suggestionItemSelected} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getGroupByType":{"!description":"Gets current value of property {@link #getGroupByType groupByType}.\n\nGroups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None<\/code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.suite.ui.commons.TimelineGroupType","!category":"function","!static":false},"setShowSearch":{"!description":"Sets a new value for property {@link #getShowSearch showSearch}.\n\nSets the search field visibility on the timeline toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowSearch: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowSearch":"type: boolean, description: New value for property <code>showSearch<\/code>"},"!static":false},"setGrowingThreshold":{"!description":"Sets a new value for property {@link #getGrowingThreshold growingThreshold}.\n\nNumber of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0<\/code>, all posts are fetched and displayed on the initial load.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5<\/code>.","!type":"fn(iGrowingThreshold: Number) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"iGrowingThreshold":"type: int, description: New value for property <code>growingThreshold<\/code>"},"!static":false},"!description":"The timeline control shows entries (such as objects, events, or posts) in chronological order. <br>A common use case is to provide information about changes to an object, or events related to an object. These entries can be generated by the system (for example, value XY changed from A to B), or added manually. <br>There are two distinct variants of the timeline: basic and social. The basic timeline is read-only, while the social timeline offers a high level of interaction and collaboration, and is integrated within SAP Jam.","indexOfSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Checks for the provided <code>sap.m.StandardListItem<\/code> in the aggregation {@link #getSuggestionItems suggestionItems}. and returns its index if found or -1 otherwise.","!type":"fn(oSuggestionItem: sap.m.StandardListItem) -> Number","!category":"function","parameters":{"oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem whose index is looked for"},"!static":false},"setCurrentFilter":{"!description":"Sets filter criteria keys.","!type":"fn(aSelectedItemKeys: [String])","!category":"function","parameters":{"aSelectedItemKeys":"type: string[], description: Filter criteria keys to select. Can be also used as a single value."},"!static":false},"getEnableBusyIndicator":{"!description":"Gets current value of property {@link #getEnableBusyIndicator enableBusyIndicator}.\n\nWhen this property is set to <code>true<\/code>, the timeline displays a busy indicator when loading data. This busy indicator blocks the interaction with the items until the data loading is complete. It is strongly recommended to use this option. Loading data without a busy indicator may confuse the users.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireAddPost":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Fires event {@link #event:addPost addPost} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getShowItemFilter":{"!description":"Gets current value of property {@link #getShowItemFilter showItemFilter}.\n\nShow item filter in filter area.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAggregation":{"!description":"An override which exposes hidden aggregations. Hidden aggregations are used by Run Time Adaptation.","!type":"fn(sAggregationName: undefined)","!category":"function","parameters":{"sAggregationName":"type: undefined, description: the name of the aggregation"},"!static":false},"setGroupByType":{"!description":"Sets a new value for property {@link #getGroupByType groupByType}.\n\nGroups the timeline posts by a time period, including year, quarter, month, week, and day. If set to <code>None<\/code>, no grouping is applied. If you specify a custom grouping function using the {@link sap.suite.ui.commons.Timeline#setCustomGrouping} method, this function overrides the groupByType property settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sGroupByType: sap.suite.ui.commons.TimelineGroupType) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sGroupByType":"type: sap.suite.ui.commons.TimelineGroupType, description: New value for property <code>groupByType<\/code>"},"!static":false},"setShowIcons":{"!description":"Sets a new value for property {@link #getShowIcons showIcons}.\n\nShows an icon on the timeline axis as an anchor for each entry node. If set to <code>false<\/code>, all icons are replaced by dots.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowIcons: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowIcons":"type: boolean, description: New value for property <code>showIcons<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.Timeline.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setEnableScroll":{"!description":"Sets a new value for property {@link #getEnableScroll enableScroll}.\n\nIf set to <code>true<\/code>, the Timeline control has its own scroll bar, with the scrolling taking place within the Timeline control itself. Scrolling is required if you want to enable the lazyLoading property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScroll: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableScroll":"type: boolean, description: New value for property <code>enableScroll<\/code>"},"!static":false},"indexOfFilterList":{"!description":"Checks for the provided <code>sap.suite.ui.commons.TimelineFilterListItem<\/code> in the aggregation {@link #getFilterList filterList}. and returns its index if found or -1 otherwise.","!type":"fn(oFilterList: sap.suite.ui.commons.TimelineFilterListItem) -> Number","!category":"function","parameters":{"oFilterList":"type: sap.suite.ui.commons.TimelineFilterListItem, description: The filterList whose index is looked for"},"!static":false},"attachAddPost":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Attaches event handler <code>fnFunction<\/code> to the {@link #event:addPost addPost} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when a new post is added. As of version 1.46, replaced by {@link sap.collaboration.components.feed.Component}.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"getEnableAllInFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored.<br>Gets current value of property {@link #getEnableAllInFilterItem enableAllInFilterItem}.\n\nEnables to add 'All' at the beginning of the filter list.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getEnableModelFilter":{"!description":"Gets current value of property {@link #getEnableModelFilter enableModelFilter}.\n\nEnables filtering directly on the binding level. If set to <code>true<\/code>, all filters are translated into the filters in the model binding. When the OData model is used, the filtering is performed on the backend side. This option is strongly recommended. If set to <code>false<\/code>, all entries from the model need to be fetched before they can be filtered on the frontend side. Please be aware that the <code>growingThreshold<\/code> property determines how many entries can be rendered. Timeline requests all entries from the model before it performs the filtering. Some models may have internal limits for the number of entries that can be used in bindings. Such limits can be set using {@link sap.ui.model.Model#setSizeLimit}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setLazyLoading":{"!description":"Sets a new value for property {@link #getLazyLoading lazyLoading}.\n\nEnables the Lazy Loading feature that automatically loads more posts as the user scrolls along the timeline axis. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bLazyLoading: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bLazyLoading":"type: boolean, description: New value for property <code>lazyLoading<\/code>"},"!static":false},"fireFilterOpen":{"!description":"Fires event {@link #event:filterOpen filterOpen} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"insertSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Inserts a suggestionItem into the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(oSuggestionItem: sap.m.StandardListItem, iIndex: Number) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the suggestionItem should be inserted at; for a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value greater than the current size of the aggregation, the suggestionItem is inserted at the last position","oSuggestionItem":"type: sap.m.StandardListItem, description: The suggestionItem to insert; if empty, nothing is inserted"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nSets the width of the Timeline.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"removeSuggestionItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Removes a suggestionItem from the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn(vSuggestionItem: Number | String | sap.m.StandardListItem) -> sap.m.StandardListItem","!category":"function","parameters":{"vSuggestionItem":"type: int|string|sap.m.StandardListItem, description: The suggestionItem to remove or its index or id"},"!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nList of timeline posts.","!type":"fn() -> [sap.suite.ui.commons.TimelineItem]","!category":"function","!static":false},"getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nThis text is displayed when the control has no data. The default value is loaded from the component resource bundle.","!type":"fn() -> String","!category":"function","!static":false},"fireItemFiltering":{"!description":"Fires event {@link #event:itemFiltering itemFiltering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setEnableSocial":{"!description":"Sets a new value for property {@link #getEnableSocial enableSocial}.\n\nAdds a <i>Reply<\/i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableSocial: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableSocial":"type: boolean, description: New value for property <code>enableSocial<\/code>"},"!static":false},"setEnableBackendFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the enableModelFilter property instead.<br>Sets a new value for property {@link #getEnableBackendFilter enableBackendFilter}.\n\nEnables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableBackendFilter: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableBackendFilter":"type: boolean, description: New value for property <code>enableBackendFilter<\/code>"},"!static":false},"getShowIcons":{"!description":"Gets current value of property {@link #getShowIcons showIcons}.\n\nShows an icon on the timeline axis as an anchor for each entry node. If set to <code>false<\/code>, all icons are replaced by dots.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setScrollingFadeout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.0 Not Fiori.<br>Sets a new value for property {@link #getScrollingFadeout scrollingFadeout}.\n\nIf set to <code>Area<\/code>, the timeline fades into the visible area margin. If set to <code>AreaWithButtons<\/code>, the timeline fades into the visible area margin and scroll buttons are displayed. If set to <code>None<\/code>, the fading effect is not applied. This feature works only when the enableScroll property is set to <code>true<\/code>. See also {@link sap.suite.ui.commons.Timeline#getEnableScroll}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sScrollingFadeout: sap.suite.ui.commons.TimelineScrollingFadeout) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sScrollingFadeout":"type: sap.suite.ui.commons.TimelineScrollingFadeout, description: New value for property <code>scrollingFadeout<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new Timeline.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAlignment alignment} : sap.suite.ui.commons.TimelineAlignment (default: Right)<\/li>\n<li>{@link #getAxisOrientation axisOrientation} : sap.suite.ui.commons.TimelineAxisOrientation (default: Vertical)<\/li>\n<li>{@link #getData data} : object<\/li>\n<li>{@link #getEnableAllInFilterItem enableAllInFilterItem} : boolean (default: true)<\/li>\n<li>{@link #getEnableBackendFilter enableBackendFilter} : boolean (default: true)<\/li>\n<li>{@link #getEnableBusyIndicator enableBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getEnableDoubleSided enableDoubleSided} : boolean (default: false)<\/li>\n<li>{@link #getEnableModelFilter enableModelFilter} : boolean (default: true)<\/li>\n<li>{@link #getEnableScroll enableScroll} : boolean (default: true)<\/li>\n<li>{@link #getEnableSocial enableSocial} : boolean (default: false)<\/li>\n<li>{@link #getFilterTitle filterTitle} : string<\/li>\n<li>{@link #getForceGrowing forceGrowing} : boolean (default: false)<\/li>\n<li>{@link #getGroup group} : boolean (default: false)<\/li>\n<li>{@link #getGroupBy groupBy} : string<\/li>\n<li>{@link #getGroupByType groupByType} : sap.suite.ui.commons.TimelineGroupType (default: None)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: true)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int (default: 5)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getLazyLoading lazyLoading} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getScrollingFadeout scrollingFadeout} : sap.suite.ui.commons.TimelineScrollingFadeout (default: None)<\/li>\n<li>{@link #getShowFilterBar showFilterBar} : boolean (default: true)<\/li>\n<li>{@link #getShowHeaderBar showHeaderBar} : boolean (default: true)<\/li>\n<li>{@link #getShowIcons showIcons} : boolean (default: true)<\/li>\n<li>{@link #getShowItemFilter showItemFilter} : boolean (default: true)<\/li>\n<li>{@link #getShowSearch showSearch} : boolean (default: true)<\/li>\n<li>{@link #getShowSort showSort} : boolean (default: true)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: true)<\/li>\n<li>{@link #getShowTimeFilter showTimeFilter} : boolean (default: true)<\/li>\n<li>{@link #getSort sort} : boolean (default: true)<\/li>\n<li>{@link #getSortOldestFirst sortOldestFirst} : boolean (default: false)<\/li>\n<li>{@link #getTextHeight textHeight} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.suite.ui.commons.TimelineItem[] (default)<\/li>\n<li>{@link #getCustomFilter customFilter} : sap.ui.core.Control<\/li>\n<li>{@link #getFilterList filterList} : sap.suite.ui.commons.TimelineFilterListItem[]<\/li>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.StandardListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addPost addPost} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:customMessageClosed customMessageClosed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterOpen filterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterSelectionChange filterSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:grow grow} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemFiltering itemFiltering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachGrow":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:grow grow} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when the \"More\" button is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"setCustomGrouping":{"!description":"Sets custom grouping function. This function must have one parameter that is a date object. This date object is used for grouping timeline posts. The function should return an object that has three properties: <ul> <li> <code>key<\/code> &ndash; The key of the related group. <\/li> <li> <code>title<\/code> &ndash; The title of the related group. <\/li> <li> <code>date<\/code> &ndash; The same value as the one entered in the input parameter. <\/li> <\/ul>","!type":"fn(fnGroupBy: fn())","!category":"function","parameters":{"fnGroupBy":"type: function, description: Grouping function."},"!static":false},"setCurrentTimeFilter":{"!description":"Sets values for the time range filter.","!type":"fn(mArguments?: Object)","!category":"function","parameters":{"mArguments":"type: object, description: Time filter arguments"},"!static":false},"getData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 As of version 1.46, this property was replaced by JSONModel context binding.<br>Gets current value of property {@link #getData data}.\n\nData for the Timeline control.","!type":"fn() -> Object","!category":"function","!static":false},"getForceGrowing":{"!description":"Gets current value of property {@link #getForceGrowing forceGrowing}.\n\nIf set to <code>true<\/code>, the <i>Show More<\/i> button is displayed when the user scrolls along the timeline axis.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSort":{"!description":"Gets current value of property {@link #getSort sort}.\n\nIndicates whether the data should be sorted. If set to <code>false<\/code> the data model's default sorting is applied.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nSets the height of the Timeline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"setSort":{"!description":"Sets a new value for property {@link #getSort sort}.\n\nIndicates whether the data should be sorted. If set to <code>false<\/code> the data model's default sorting is applied.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bSort: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bSort":"type: boolean, description: New value for property <code>sort<\/code>"},"!static":false},"getEnableBackendFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the enableModelFilter property instead.<br>Gets current value of property {@link #getEnableBackendFilter enableBackendFilter}.\n\nEnables fetching data from backend instead of deriving filter values from the frontend values (displayed list). As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getEnableModelFilter}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowFilterBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the showHeaderBar property instead.<br>Sets a new value for property {@link #getShowFilterBar showFilterBar}.\n\nSets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowFilterBar: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowFilterBar":"type: boolean, description: New value for property <code>showFilterBar<\/code>"},"!static":false},"setShowHeaderBar":{"!description":"Sets a new value for property {@link #getShowHeaderBar showHeaderBar}.\n\nShows the timeline toolbar with search and filter options.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeaderBar: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowHeaderBar":"type: boolean, description: New value for property <code>showHeaderBar<\/code>"},"!static":false},"setShowItemFilter":{"!description":"Sets a new value for property {@link #getShowItemFilter showItemFilter}.\n\nShow item filter in filter area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowItemFilter: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bShowItemFilter":"type: boolean, description: New value for property <code>showItemFilter<\/code>"},"!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.suite.ui.commons.TimelineItem<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.suite.ui.commons.TimelineItem) -> Number","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.TimelineItem, description: The content whose index is looked for"},"!static":false},"setAxisOrientation":{"!description":"Sets a new value for property {@link #getAxisOrientation axisOrientation}.\n\nDefines the orientation of the timeline. Can be set to <code>Vertical<\/code> or <code>Horizontal<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn(sAxisOrientation: sap.suite.ui.commons.TimelineAxisOrientation) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sAxisOrientation":"type: sap.suite.ui.commons.TimelineAxisOrientation, description: New value for property <code>axisOrientation<\/code>"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.suite.ui.commons.TimelineItem) -> sap.suite.ui.commons.TimelineItem","!category":"function","parameters":{"vContent":"type: int|string|sap.suite.ui.commons.TimelineItem, description: The content to remove or its index or id"},"!static":false},"setEnableAllInFilterItem":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 The filter list now includes a Select All check box, so the All radio button is no longer required. This property is ignored.<br>Sets a new value for property {@link #getEnableAllInFilterItem enableAllInFilterItem}.\n\nEnables to add 'All' at the beginning of the filter list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableAllInFilterItem: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableAllInFilterItem":"type: boolean, description: New value for property <code>enableAllInFilterItem<\/code>"},"!static":false},"destroySuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Destroys all the suggestionItems in the aggregation {@link #getSuggestionItems suggestionItems}.","!type":"fn() -> sap.suite.ui.commons.Timeline","!category":"function","!static":false},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.Timeline<\/code> itself.\n\nThis event is fired when a timeline post is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.Timeline<\/code> itself"},"!static":false},"setCurrentSearch":{"!description":"Sets values for the search field.","!type":"fn(sSearchTerm: String)","!category":"function","parameters":{"sSearchTerm":"type: string, description: Search term value."},"!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nSets the height of the Timeline.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getGrowingThreshold":{"!description":"Gets current value of property {@link #getGrowingThreshold growingThreshold}.\n\nNumber of posts requested from the server at a time. Each time when the timeline needs to load more posts, it will request exactly this amount. The number of posts displayed in the timeline is increased by this number. If set to <code>0<\/code>, all posts are fetched and displayed on the initial load.\n\nDefault value is <code>5<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setModelFilter":{"!description":"Replaces one of the default filters: items filter, time range filter, or search.","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: object, description: The object containing settings"},"!static":false},"getAlignment":{"!description":"Gets current value of property {@link #getAlignment alignment}.\n\nDefines the alignment of timeline posts relative to the timeline axis. This option can be used for single-sided timelines only. If the axisOrientation property is set to <code> Horizontal<\/code>, the <code>Right<\/code> value is interpreted as bottom alignment and the <code>Left<\/code> value as top alignment.\n\nDefault value is <code>Right<\/code>.","!type":"fn() -> sap.suite.ui.commons.TimelineAlignment","!category":"function","!static":false},"fireFilterSelectionChange":{"!description":"Fires event {@link #event:filterSelectionChange filterSelectionChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireCustomMessageClosed":{"!description":"Fires event {@link #event:customMessageClosed customMessageClosed} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nSets the width of the Timeline.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setEnableDoubleSided":{"!description":"Sets a new value for property {@link #getEnableDoubleSided enableDoubleSided}.\n\nIf set to <code>true<\/code>, timeline posts are displayed on both sides of the timeline axis.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableDoubleSided: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bEnableDoubleSided":"type: boolean, description: New value for property <code>enableDoubleSided<\/code>"},"!static":false},"getShowFilterBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the showHeaderBar property instead.<br>Gets current value of property {@link #getShowFilterBar showFilterBar}.\n\nSets the visibility of the filter in the timeline toolbar.<br> As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getShowHeaderBar}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addFilterList":{"!description":"Adds some filterList to the aggregation {@link #getFilterList filterList}.","!type":"fn(oFilterList: sap.suite.ui.commons.TimelineFilterListItem) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oFilterList":"type: sap.suite.ui.commons.TimelineFilterListItem, description: The filterList to add; if empty, nothing is inserted"},"!static":false},"getFilterTitle":{"!description":"Gets current value of property {@link #getFilterTitle filterTitle}.\n\nTitle for the data filter. When a filter is applied, this title is displayed in the message strip along with the filter name.","!type":"fn() -> String","!category":"function","!static":false},"setCustomFilter":{"!description":"Sets the aggregated {@link #getCustomFilter customFilter}.","!type":"fn(oCustomFilter: sap.ui.core.Control) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oCustomFilter":"type: sap.ui.core.Control, description: The customFilter to set"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.Timeline with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getGroupBy":{"!description":"Gets current value of property {@link #getGroupBy groupBy}.\n\nGroups the timeline posts by a field. Only fields that contain date values are supported.","!type":"fn() -> String","!category":"function","!static":false},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nThis text is displayed when the control has no data. The default value is loaded from the component resource bundle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sNoDataText: String) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"},"!static":false},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getEnableSocial":{"!description":"Gets current value of property {@link #getEnableSocial enableSocial}.\n\nAdds a <i>Reply<\/i> link to the posts on a social timeline that allows users to reply to posts. When a user adds a reply, an event is fired. This event should be handled by external code.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setCustomFilterMessage":{"!description":"Sets a custom message for the filter message strip. This message is appended to the default filter text.","!type":"fn(sMessage: String)","!category":"function","parameters":{"sMessage":"type: string, description: Message to append."},"!static":false},"detachGrow":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:grow grow} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 As of version 1.46, this property was replaced by JSONModel context binding.<br>Sets a new value for property {@link #getData data}.\n\nData for the Timeline control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oData: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oData":"type: object, description: New value for property <code>data<\/code>"},"!static":false},"getCurrentFilter":{"!description":"Returns the keys of the currently applied filter criteria as an array of objects, containing filter criteria keys (<code>key<\/code>) and values (<code>text<\/code>).","!type":"fn() -> Array","!category":"function","!static":false},"removeAllSuggestionItems":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the Group Feed Component instead.<br>Removes all the controls from the aggregation {@link #getSuggestionItems suggestionItems}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.m.StandardListItem]","!category":"function","!static":false},"setGroup":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46.0 Use the groupByType property instead.<br>Sets a new value for property {@link #getGroup group}.\n\nGroups the timeline posts by year. As of version 1.46, replaced by {@link sap.suite.ui.commons.Timeline#getGroupByType}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bGroup: Boolean) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"bGroup":"type: boolean, description: New value for property <code>group<\/code>"},"!static":false},"detachFilterSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filterSelectionChange filterSelectionChange} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.suite.ui.commons.TimelineItem, iIndex: Number) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"oContent":"type: sap.suite.ui.commons.TimelineItem, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"getAxisOrientation":{"!description":"Gets current value of property {@link #getAxisOrientation axisOrientation}.\n\nDefines the orientation of the timeline. Can be set to <code>Vertical<\/code> or <code>Horizontal<\/code>.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn() -> sap.suite.ui.commons.TimelineAxisOrientation","!category":"function","!static":false},"detachItemFiltering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemFiltering itemFiltering} event of this <code>sap.suite.ui.commons.Timeline<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertFilterList":{"!description":"Inserts a filterList into the aggregation {@link #getFilterList filterList}.","!type":"fn(oFilterList: sap.suite.ui.commons.TimelineFilterListItem, iIndex: Number) -> sap.suite.ui.commons.Timeline","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the filterList should be inserted at; for a negative value of <code>iIndex<\/code>, the filterList is inserted at position 0; for a value greater than the current size of the aggregation, the filterList is inserted at the last position","oFilterList":"type: sap.suite.ui.commons.TimelineFilterListItem, description: The filterList to insert; if empty, nothing is inserted"},"!static":false}},"sap.suite.ui.commons.taccount.TAccountItemProperty_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItemProperty with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.taccount.TAccountItemProperty"},"sap.suite.ui.commons.statusindicator.LabelPositionType":{"Right":{"!description":"Right.","!type":"String","!category":"enum"},"Bottom":{"!description":"Bottom.","!type":"String","!category":"enum"},"Top":{"!description":"Top.","!type":"String","!category":"enum"},"!description":"Position of the label, relative to the status indicator.","!category":"static class","!module":"sap/suite/ui/commons/library","Left":{"!description":"Left","!type":"String","!category":"enum"}},"sap.suite.ui.commons.networkgraph.LineArrowPosition":{"End":{"!description":"The arrow is placed at the end of the last line segment.","!type":"String","!category":"enum"},"!description":"Position of the arrow on a connector line.","Start":{"!description":"The arrow is placed at the beginning of the first line segment.","!type":"String","!category":"enum"},"Middle":{"!description":"The arrow is placed in the middle of the last line segment. If the line has only one segment, the arrow appears in the middle of the line.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.MonitoringTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MonitoringTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MonitoringTile"},"sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem":{"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rectangleCrop} method.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new CropRectangleHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/CropRectangleHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#rectangleCrop} method."},"sap.suite.ui.commons.PictureZoomIn_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.PictureZoomIn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.PictureZoomIn"},"sap.suite.ui.commons.KpiTile":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe Value field.","!type":"fn() -> String","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nThe Description field.","!type":"fn() -> String","!category":"function","!static":false},"setValueStatus":{"!description":"Sets a new value for property {@link #getValueStatus valueStatus}.\n\nThe status color of the value. Depending on the status the tile is displayed in different colors.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sValueStatus: sap.suite.ui.commons.ValueStatus) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"sValueStatus":"type: sap.suite.ui.commons.ValueStatus, description: New value for property <code>valueStatus<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.KpiTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDoubleFontSize":{"!description":"Gets current value of property {@link #getDoubleFontSize doubleFontSize}.\n\nIf true, the value text will have 2 rem, if false - 1 rem.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setValueScale":{"!description":"Sets a new value for property {@link #getValueScale valueScale}.\n\nThe scale of a value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValueScale: String) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"sValueScale":"type: string, description: New value for property <code>valueScale<\/code>"},"!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe Value field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new KpiTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getDoubleFontSize doubleFontSize} : boolean (default: true)<\/li>\n<li>{@link #getValueUnit valueUnit} : string<\/li>\n<li>{@link #getValueScale valueScale} : string<\/li>\n<li>{@link #getValueStatus valueStatus} : sap.suite.ui.commons.ValueStatus (default: Neutral)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/KpiTile","getValueStatus":{"!description":"Gets current value of property {@link #getValueStatus valueStatus}.\n\nThe status color of the value. Depending on the status the tile is displayed in different colors.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.suite.ui.commons.ValueStatus","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Numeric content or any other standard Fiori control should be used instead.<br>This control is used in UnifiedThingInspector to display object-related KPIs in a factsheet.","setDoubleFontSize":{"!description":"Sets a new value for property {@link #getDoubleFontSize doubleFontSize}.\n\nIf true, the value text will have 2 rem, if false - 1 rem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDoubleFontSize: Boolean) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"bDoubleFontSize":"type: boolean, description: New value for property <code>doubleFontSize<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nThe Description field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","getValueUnit":{"!description":"Gets current value of property {@link #getValueUnit valueUnit}.\n\nThe percent sign, currency symbol, or unit for a value.","!type":"fn() -> String","!category":"function","!static":false},"setValueUnit":{"!description":"Sets a new value for property {@link #getValueUnit valueUnit}.\n\nThe percent sign, currency symbol, or unit for a value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValueUnit: String) -> sap.suite.ui.commons.KpiTile","!category":"function","parameters":{"sValueUnit":"type: string, description: New value for property <code>valueUnit<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Numeric content or any other standard Fiori control should be used instead.<br>This control is used in UnifiedThingInspector to display object-related KPIs in a factsheet.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.KpiTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getValueScale":{"!description":"Gets current value of property {@link #getValueScale valueScale}.\n\nThe scale of a value.","!type":"fn() -> String","!category":"function","!static":false}},"sap.suite.ui.commons.ProcessFlowLaneHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowLaneHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ProcessFlowLaneHeader"},"sap.suite.ui.commons.statusindicator.HorizontalAlignmentType":{"Right":{"!description":"Right.","!type":"String","!category":"enum"},"!description":"The horizontal alignment of the status indicator within its parent container.","Middle":{"!description":"Middle.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library","Left":{"!description":"Left.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.MicroAreaChartView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.suite.ui.microchart.AreaMicroChartViewType should be used.<br>The list of possible MicroAreaChart views.","Wide":{"!description":"The view with labels on the left and right.","!type":"String","!category":"enum"},"Normal":{"!description":"The view with labels on the top and bottom.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.ChartContainerContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ChartContainerContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ChartContainerContent"},"sap.suite.ui.commons.imageeditor.ImageEditorContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.ImageEditorContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.imageeditor.ImageEditorContainer"},"sap.suite.ui.commons.networkgraph.HeaderCheckboxState":{"!description":"States of the Header checkbox.","Unchecked":{"!description":"Checkbox is visible and not selected.","!type":"String","!category":"enum"},"Checked":{"!description":"Checkbox is visible and selected.","!type":"String","!category":"enum"},"!category":"static class","Hidden":{"!description":"Checkbox is not visible.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.DynamicContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DynamicContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SlideTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.DynamicContainer"},"sap.suite.ui.commons.InfoTileTextColor":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.m.InfoTileTextColor should be used.<br>Enumeration of possible InfoTile text color settings.","!category":"static class","Critical":{"!description":"Critical InfoTile text color.","!type":"String","!category":"enum"},"Positive":{"!description":"Positive InfoTile text color.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Negative":{"!description":"Negative InfoTile text color.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.HeaderContainer":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vItem":"type: int|string|sap.ui.core.Control, description: The item to remove or its index or id"},"!static":false},"setView":{"!description":"Sets a new value for property {@link #getView view}.\n\nThe view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Horizontal<\/code>.","!type":"fn(sView: sap.suite.ui.commons.HeaderContainerView) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"sView":"type: sap.suite.ui.commons.HeaderContainerView, description: New value for property <code>view<\/code>"},"!static":false},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.ui.core.Control) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"oItem":"type: sap.ui.core.Control, description: The item to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/suite/ui/commons/HeaderContainer","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oItem":"type: sap.ui.core.Control, description: The item whose index is looked for"},"!static":false},"getScrollStep":{"!description":"Gets current value of property {@link #getScrollStep scrollStep}.\n\nNumber of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.\n\nDefault value is <code>300<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getScrollTime":{"!description":"Gets current value of property {@link #getScrollTime scrollTime}.\n\nScroll animation time in milliseconds.\n\nDefault value is <code>500<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getShowDividers":{"!description":"Gets current value of property {@link #getShowDividers showDividers}.\n\nIf set to true, shows dividers between scrollable items.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","setShowDividers":{"!description":"Sets a new value for property {@link #getShowDividers showDividers}.\n\nIf set to true, shows dividers between scrollable items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowDividers: Boolean) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"bShowDividers":"type: boolean, description: New value for property <code>showDividers<\/code>"},"!static":false},"setScrollTime":{"!description":"Sets a new value for property {@link #getScrollTime scrollTime}.\n\nScroll animation time in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!type":"fn(iScrollTime: Number) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"iScrollTime":"type: int, description: New value for property <code>scrollTime<\/code>"},"!static":false},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HeaderContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new HeaderContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScrollStep scrollStep} : int (default: 300)<\/li>\n<li>{@link #getScrollTime scrollTime} : int (default: 500)<\/li>\n<li>{@link #getShowDividers showDividers} : boolean (default: true)<\/li>\n<li>{@link #getView view} : sap.suite.ui.commons.HeaderContainerView (default: Horizontal)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setScrollStep":{"!description":"Sets a new value for property {@link #getScrollStep scrollStep}.\n\nNumber of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>300<\/code>.","!type":"fn(iScrollStep: Number) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"iScrollStep":"type: int, description: New value for property <code>scrollStep<\/code>"},"!static":false},"getView":{"!description":"Gets current value of property {@link #getView view}.\n\nThe view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.\n\nDefault value is <code>Horizontal<\/code>.","!type":"fn() -> sap.suite.ui.commons.HeaderContainerView","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44 This control is deprecated in this library since 1.44 and moved to sap.m library that is also part of openUI5.<br>The container that provides a horizontal layout. It provides a horizontal scroll on the tablet and phone. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space to choose the control.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nItems to add to HeaderContainer.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.suite.ui.commons.HeaderContainer","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nDefault value is <code>Transparent<\/code>.","!type":"fn() -> sap.m.BackgroundDesign","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.HeaderContainer","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.ui.core.Control, description: The item to insert; if empty, nothing is inserted"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.HeaderContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44 This control is deprecated in this library since 1.44 and moved to sap.m library that is also part of openUI5.<br>The container that provides a horizontal layout. It provides a horizontal scroll on the tablet and phone. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space to choose the control."},"sap.suite.ui.commons.imageeditor.FlipHistoryItem":{"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the flip methods, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipVertical}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipHorizontal}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#flip}.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.FlipHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new FlipHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/FlipHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.FlipHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by one of the flip methods, such as {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipVertical}, {@link sap.suite.ui.commons.imageeditor.ImageEditor#flipHorizontal}, and {@link sap.suite.ui.commons.imageeditor.ImageEditor#flip}."},"sap.suite.ui.commons.RepeaterViewConfiguration_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.RepeaterViewConfiguration with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.RepeaterViewConfiguration"},"sap.suite.ui.commons.networkgraph.SvgBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.SvgBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.SvgBase"},"sap.suite.ui.commons.CommonBackground":{"Medium":{"!description":"Medium background color.","!type":"String","!category":"enum"},"ExtraDark":{"!description":"Extra dark background color.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Moved to sapui5.runtime.<br>Enumeration of possible theme specific background colors.","Lightest":{"!description":"The lightest background color.","!type":"String","!category":"enum"},"Darkest":{"!description":"The darkest background color.","!type":"String","!category":"enum"},"Dark":{"!description":"Dark background color.","!type":"String","!category":"enum"},"!category":"static class","Light":{"!description":"Light background color.","!type":"String","!category":"enum"},"ExtraLight":{"!description":"Extra light background color.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","MediumLight":{"!description":"Medium light background color.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.UnifiedThingGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.UnifiedThingGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.UnifiedThingGroup"},"sap.suite.ui.commons.networkgraph.ActionButton":{"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nIndicates whether the action button is enabled.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ActionButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setPosition":{"!description":"Sets a new value for property {@link #getPosition position}.\n\nPosition of the action button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Right<\/code>.","!type":"fn(sPosition: sap.suite.ui.commons.networkgraph.ActionButtonPosition) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"sPosition":"type: sap.suite.ui.commons.networkgraph.ActionButtonPosition, description: New value for property <code>position<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ActionButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getPosition position} : sap.suite.ui.commons.networkgraph.ActionButtonPosition (default: Right)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getPosition":{"!description":"Gets current value of property {@link #getPosition position}.\n\nPosition of the action button.\n\nDefault value is <code>Right<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.ActionButtonPosition","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/ActionButton","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code> itself.\n\nThis event is fired when the action button is clicked or tapped.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code> itself"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThe icon to be used for the custom action button.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Holds information about one custom action button.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTooltip title for custom action button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nIndicates whether the action button is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTooltip title for custom action button.","!type":"fn() -> String","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThe icon to be used for the custom action button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!helpDescription":"Holds information about one custom action button.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.ActionButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.ElementBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.ElementBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.ElementBase"},"sap.suite.ui.commons.ColumnMicroChartLabel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartLabel.<br>This element contains data for a label in ColumnMicroChart control.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartLabel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ColumnMicroChartLabel.","!module":"sap/suite/ui/commons/ColumnMicroChartLabel","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ColumnMicroChartLabel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.ColumnMicroChartLabel","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ColumnMicroChartLabel.<br>This element contains data for a label in ColumnMicroChart control."},"sap.suite.ui.commons.MicroAreaChartItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MicroAreaChartItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.AreaMicroChartItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.MicroAreaChartItem"},"sap.suite.ui.commons.networkgraph.RenderType":{"Html":{"!description":"Nodes are rendered as classic HTML.","!type":"String","!category":"enum"},"!description":"Determines how nodes are rendered. For optimal performance and usability, it is recommended that you use HTML, which allows you to avoid dealing with SVG limitations.","!category":"static class","Svg":{"!description":"Nodes are rendered as SVG.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.CalculationBuilderFunctionType":{"ABS":{"!description":"ABS.","!type":"String","!category":"enum"},"SUMCT":{"!description":"SUMCT.","!type":"String","!category":"enum"},"Round":{"!description":"Round.","!type":"String","!category":"enum"},"RoundUp":{"!description":"Round Up.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","RoundDown":{"!description":"Round Down.","!type":"String","!category":"enum"},"SUMGT":{"!description":"SUMGT.","!type":"String","!category":"enum"},"!description":"Functions supported by the calculation builder.<br> To add a custom function, use {@link sap.suite.ui.commons.CalculationBuilderFunction}.","NDIV0":{"!description":"NDIV0.","!type":"String","!category":"enum"},"SQRT":{"!description":"SQRT.","!type":"String","!category":"enum"},"!category":"static class","Case":{"!description":"Case.","!type":"String","!category":"enum"},"SUMRT":{"!description":"SUMRT.","!type":"String","!category":"enum"},"NODIM":{"!description":"NODIM.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.PictureZoomIn":{"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nDescription is shown under image.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.PictureZoomIn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setBusyIndicator":{"!description":"Sets the aggregated {@link #getBusyIndicator busyIndicator}.","!type":"fn(oBusyIndicator: sap.ui.core.Control) -> sap.suite.ui.commons.PictureZoomIn","!category":"function","parameters":{"oBusyIndicator":"type: sap.ui.core.Control, description: The busyIndicator to set"},"!static":false},"!constructorDescription":"Constructor for a new PictureZoomIn.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBusyIndicator busyIndicator} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getBusyIndicator":{"!description":"Gets content of aggregation {@link #getBusyIndicator busyIndicator}.\n\nCustom busy indicator.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/suite/ui/commons/PictureZoomIn","destroyBusyIndicator":{"!description":"Destroys the busyIndicator in the aggregation {@link #getBusyIndicator busyIndicator}.","!type":"fn() -> sap.suite.ui.commons.PictureZoomIn","!category":"function","!static":false},"getImageSrc":{"!description":"Gets current value of property {@link #getImageSrc imageSrc}.\n\nSource for image.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>Shows picture in fullscreen.","setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nDescription is shown under image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.PictureZoomIn","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"setImageSrc":{"!description":"Sets a new value for property {@link #getImageSrc imageSrc}.\n\nSource for image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImageSrc: sap.ui.core.URI) -> sap.suite.ui.commons.PictureZoomIn","!category":"function","parameters":{"sImageSrc":"type: sap.ui.core.URI, description: New value for property <code>imageSrc<\/code>"},"!static":false},"!category":"class","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>Shows picture in fullscreen.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.PictureZoomIn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.networkgraph.Line_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Line with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.Line"},"sap.suite.ui.commons.TimelineFilterType":{"Data":{"!description":"Items filter based on data, defined by the {@link sap.suite.ui.commons.TimelineItem#getFilterValue filterValue} property or by a custom value.","!type":"String","!category":"enum"},"Search":{"!description":"Search results filter.","!type":"String","!category":"enum"},"Time":{"!description":"Time range filter, defined by the start date (<code>from<\/code>) and end date (<code>to<\/code>) of the time range.","!type":"String","!category":"enum"},"!description":"Filter type for the timeline.","!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.imageeditor.CustomSizeItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CustomSizeItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.imageeditor.CustomSizeItem"},"sap.suite.ui.commons.networkgraph.Graph":{"toggleFullScreen":{"!description":"Toggles full screen mode.","!type":"fn()","!category":"function","!static":false},"attachGraphReady":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:graphReady graphReady} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when the graph is fully rendered.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"addGroup":{"!description":"Adds some group to the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.networkgraph.Group) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.networkgraph.Group, description: The group to add; if empty, nothing is inserted"},"!static":false},"zoom":{"!description":"Zooms the graph in or out","!type":"fn(mParameters: Object)","!category":"function","parameters":{"mParameters":"type: object, description: Map which contains following parameters properties:"},"!static":false},"getNodeByKey":{"!description":"Returns a node by its key","!type":"fn(sKey: String) -> Node","!category":"function","parameters":{"sKey":"type: string, description: Node's key"},"!static":false},"removeAllLines":{"!description":"Removes all the controls from the aggregation {@link #getLines lines}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Line]","!category":"function","!static":false},"getBackgroundColor":{"!description":"Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nBackground color.\n\nDefault value is <code>White<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.BackgroundColor","!category":"function","!static":false},"fireGraphReady":{"!description":"Fires event {@link #event:graphReady graphReady} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getRenderType":{"!description":"Gets current value of property {@link #getRenderType renderType}.\n\nNodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.\n\nDefault value is <code>Html<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.RenderType","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/Graph","getLayoutAlgorithm":{"!description":"Gets content of aggregation {@link #getLayoutAlgorithm layoutAlgorithm}.\n\nDefines the layout algorithm to be used. If not defined, {@link sap.suite.ui.commons.networkgraph.layout.LayeredLayout} is used.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm","!category":"function","!static":false},"removeStatus":{"!description":"Removes a status from the aggregation {@link #getStatuses statuses}.","!type":"fn(vStatus: Number | String | sap.suite.ui.commons.networkgraph.Status) -> sap.suite.ui.commons.networkgraph.Status","!category":"function","parameters":{"vStatus":"type: int|string|sap.suite.ui.commons.networkgraph.Status, description: The status to remove or its index or id"},"!static":false},"fireAfterLayouting":{"!description":"Fires event {@link #event:afterLayouting afterLayouting} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyStatuses":{"!description":"Destroys all the statuses in the aggregation {@link #getStatuses statuses}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"setOrientation":{"!description":"Sets a new value for property {@link #getOrientation orientation}.\n\nOrientation of the graph flow. This property is used by layout algorithms.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>LeftRight<\/code>.","!type":"fn(sOrientation: sap.suite.ui.commons.networkgraph.Orientation) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sOrientation":"type: sap.suite.ui.commons.networkgraph.Orientation, description: New value for property <code>orientation<\/code>"},"!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"attachAfterLayouting":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterLayouting afterLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when the layouting algorithm has finished arranging the graph and SVG rendering starts.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"getGroups":{"!description":"Gets content of aggregation {@link #getGroups groups}.\n\nHolds a list of groups used in the graph.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Group]","!category":"function","!static":false},"insertGroup":{"!description":"Inserts a group into the aggregation {@link #getGroups groups}.","!type":"fn(oGroup: sap.suite.ui.commons.networkgraph.Group, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.networkgraph.Group, description: The group to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the group should be inserted at; for a negative value of <code>iIndex<\/code>, the group is inserted at position 0; for a value greater than the current size of the aggregation, the group is inserted at the last position"},"!static":false},"getEnableWheelZoom":{"!description":"Gets current value of property {@link #getEnableWheelZoom enableWheelZoom}.\n\nEnables zooming in or out using the mouse wheel, while holding down the Ctrl key.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setNoData":{"!description":"Sets a new value for property {@link #getNoData noData}.\n\nSet this property to <code>true<\/code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bNoData: Boolean) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"bNoData":"type: boolean, description: New value for property <code>noData<\/code>"},"!static":false},"removeLine":{"!description":"Removes a line from the aggregation {@link #getLines lines}.","!type":"fn(vLine: Number | String | sap.suite.ui.commons.networkgraph.Line) -> sap.suite.ui.commons.networkgraph.Line","!category":"function","parameters":{"vLine":"type: int|string|sap.suite.ui.commons.networkgraph.Line, description: The line to remove or its index or id"},"!static":false},"addStatus":{"!description":"Adds some status to the aggregation {@link #getStatuses statuses}.","!type":"fn(oStatus: sap.suite.ui.commons.networkgraph.Status) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oStatus":"type: sap.suite.ui.commons.networkgraph.Status, description: The status to add; if empty, nothing is inserted"},"!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"},"!static":false},"detachSearchSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:searchSuggest searchSuggest} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"addNode":{"!description":"Adds some node to the aggregation {@link #getNodes nodes}.","!type":"fn(oNode: sap.suite.ui.commons.networkgraph.Node) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oNode":"type: sap.suite.ui.commons.networkgraph.Node, description: The node to add; if empty, nothing is inserted"},"!static":false},"destroyLayoutAlgorithm":{"!description":"Destroys the layoutAlgorithm in the aggregation {@link #getLayoutAlgorithm layoutAlgorithm}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"removeAllGroups":{"!description":"Removes all the controls from the aggregation {@link #getGroups groups}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Group]","!category":"function","!static":false},"getCurrentZoomLevel":{"!description":"Returns current zoom level","!type":"fn() -> Number","!category":"function","!static":false},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:selectionChange selectionChange} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when a selection of elements in the graph changes.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"addLine":{"!description":"Adds some line to the aggregation {@link #getLines lines}.","!type":"fn(oLine: sap.suite.ui.commons.networkgraph.Line) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oLine":"type: sap.suite.ui.commons.networkgraph.Line, description: The line to add; if empty, nothing is inserted"},"!static":false},"indexOfLine":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.Line<\/code> in the aggregation {@link #getLines lines}. and returns its index if found or -1 otherwise.","!type":"fn(oLine: sap.suite.ui.commons.networkgraph.Line) -> Number","!category":"function","parameters":{"oLine":"type: sap.suite.ui.commons.networkgraph.Line, description: The line whose index is looked for"},"!static":false},"!proto":"sap.suite.ui.commons.networkgraph.SvgBase","!helpDescription":"The network graph control allows you to display data as a network of nodes connected by lines. The nodes can be circular or rectangular and can be joined into groups. You can define custom attributes for nodes and groups of nodes as well as apply layout algorithms that define the graph's appearance.","removeAllNodes":{"!description":"Removes all the controls from the aggregation {@link #getNodes nodes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Node]","!category":"function","!static":false},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:selectionChange selectionChange} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getEnableZoom":{"!description":"Gets current value of property {@link #getEnableZoom enableZoom}.\n\nIf this property is set to <code>false<\/code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachFailure":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:failure failure} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when an error has occured and the graph cannot be rendered properly.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"setSearchSuggestionItems":{"!description":"Sets custom search suggestions.","!type":"fn(aItems: Array)","!category":"function","parameters":{"aItems":"type: Array, description: Array with suggestion items ({@link sap.m.SuggestionItem}) to display when the user runs a search."},"!static":false},"deselect":{"!description":"Deselects all currently selected items","!type":"fn(bSuppressEvent: Boolean) -> Array","!category":"function","parameters":{"bSuppressEvent":"type: boolean, description: Indicates whether the <code>selecitonChange<\/code> event should be fired"},"!static":false},"getLegend":{"!description":"Gets content of aggregation {@link #getLegend legend}.\n\nA custom legend to be rendered instead of the autogenerated one.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"},"!static":false},"setEnableZoom":{"!description":"Sets a new value for property {@link #getEnableZoom enableZoom}.\n\nIf this property is set to <code>false<\/code>, zoom buttons are hidden, and the mouse wheel can be used for scrolling only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableZoom: Boolean) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"bEnableZoom":"type: boolean, description: New value for property <code>enableZoom<\/code>"},"!static":false},"detachAfterLayouting":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterLayouting afterLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"detachBeforeLayouting":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeLayouting beforeLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"indexOfStatus":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.Status<\/code> in the aggregation {@link #getStatuses statuses}. and returns its index if found or -1 otherwise.","!type":"fn(oStatus: sap.suite.ui.commons.networkgraph.Status) -> Number","!category":"function","parameters":{"oStatus":"type: sap.suite.ui.commons.networkgraph.Status, description: The status whose index is looked for"},"!static":false},"!category":"class","attachZoomChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when zooming in or out.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"setCustomLegendLabel":{"!description":"Sets a custom label for the legend","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: object, description: Parameters for this method"},"!static":false},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireSelectionChange":{"!description":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"getNoData":{"!description":"Gets current value of property {@link #getNoData noData}.\n\nSet this property to <code>true<\/code> if you want to notify the user that no data has been loaded. <br> There is no internal check for data received, so we recommend that you make sure you set it correctly when there is no data received, not just when the application is waiting for data to be retrieved.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"updateLegend":{"!description":"Updates the legend","!type":"fn()","!category":"function","!static":false},"indexOfNode":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.Node<\/code> in the aggregation {@link #getNodes nodes}. and returns its index if found or -1 otherwise.","!type":"fn(oNode: sap.suite.ui.commons.networkgraph.Node) -> Number","!category":"function","parameters":{"oNode":"type: sap.suite.ui.commons.networkgraph.Node, description: The node whose index is looked for"},"!static":false},"!description":"The network graph control allows you to display data as a network of nodes connected by lines. The nodes can be circular or rectangular and can be joined into groups. You can define custom attributes for nodes and groups of nodes as well as apply layout algorithms that define the graph's appearance.","getStatuses":{"!description":"Gets content of aggregation {@link #getStatuses statuses}.\n\nHolds a collection of custom statuses that can be used to assign custom colors to nodes, lines, and groups of nodes, based on their status.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Status]","!category":"function","!static":false},"setLayoutAlgorithm":{"!description":"Sets the aggregated {@link #getLayoutAlgorithm layoutAlgorithm}.","!type":"fn(oLayoutAlgorithm: sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oLayoutAlgorithm":"type: sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm, description: The layoutAlgorithm to set"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Graph.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"indexOfGroup":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.Group<\/code> in the aggregation {@link #getGroups groups}. and returns its index if found or -1 otherwise.","!type":"fn(oGroup: sap.suite.ui.commons.networkgraph.Group) -> Number","!category":"function","parameters":{"oGroup":"type: sap.suite.ui.commons.networkgraph.Group, description: The group whose index is looked for"},"!static":false},"detachGraphReady":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:graphReady graphReady} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"insertLine":{"!description":"Inserts a line into the aggregation {@link #getLines lines}.","!type":"fn(oLine: sap.suite.ui.commons.networkgraph.Line, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oLine":"type: sap.suite.ui.commons.networkgraph.Line, description: The line to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the line should be inserted at; for a negative value of <code>iIndex<\/code>, the line is inserted at position 0; for a value greater than the current size of the aggregation, the line is inserted at the last position"},"!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"},"!static":false},"getZoomLevelMilestones":{"!description":"Returns predefined zoom level milestones used by default zoom functionality","!type":"fn() -> [Number]","!category":"function","!static":false},"getNodes":{"!description":"Gets content of aggregation {@link #getNodes nodes}.\n\nHolds the nodes to be displayed in the graph.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Node]","!category":"function","!static":false},"getBackgroundImage":{"!description":"Gets current value of property {@link #getBackgroundImage backgroundImage}.\n\nAn image to be rendered on the background.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setLegend":{"!description":"Sets the aggregated {@link #getLegend legend}.","!type":"fn(oLegend: sap.ui.core.Control) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oLegend":"type: sap.ui.core.Control, description: The legend to set"},"!static":false},"attachBeforeLayouting":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeLayouting beforeLayouting} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired just before the layout computation begins.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"attachSearchSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:searchSuggest searchSuggest} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when the user runs a search and there is a matching term found among the suggestions.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"getLines":{"!description":"Gets content of aggregation {@link #getLines lines}.\n\nHolds the lines to be displayed in the graph.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Line]","!category":"function","!static":false},"insertStatus":{"!description":"Inserts a status into the aggregation {@link #getStatuses statuses}.","!type":"fn(oStatus: sap.suite.ui.commons.networkgraph.Status, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the status should be inserted at; for a negative value of <code>iIndex<\/code>, the status is inserted at position 0; for a value greater than the current size of the aggregation, the status is inserted at the last position","oStatus":"type: sap.suite.ui.commons.networkgraph.Status, description: The status to insert; if empty, nothing is inserted"},"!static":false},"destroyAllElements":{"!description":"This method removes all elements (lines, nodes, groups) without triggering invalidation. You should use this method when changing graph data that uses data binding, for example with {@link sap.suite.ui.commons.networkgraph.Graph#setModel}.","!type":"fn()","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width of the graph. If this property is set to 'auto', the network graph will be resized to fit the width of its content, regardless of the width of the parent control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"fireFailure":{"!description":"Fires event {@link #event:failure failure} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getNoDataText":{"!description":"Gets current value of property {@link #getNoDataText noDataText}.\n\nText displayed when no data is set. <br> This property takes effect only when the <code>noData<\/code> property is set to <code>true<\/code>.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"insertNode":{"!description":"Inserts a node into the aggregation {@link #getNodes nodes}.","!type":"fn(oNode: sap.suite.ui.commons.networkgraph.Node, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"oNode":"type: sap.suite.ui.commons.networkgraph.Node, description: The node to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the node should be inserted at; for a negative value of <code>iIndex<\/code>, the node is inserted at position 0; for a value greater than the current size of the aggregation, the node is inserted at the last position"},"!static":false},"removeGroup":{"!description":"Removes a group from the aggregation {@link #getGroups groups}.","!type":"fn(vGroup: Number | String | sap.suite.ui.commons.networkgraph.Group) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"vGroup":"type: int|string|sap.suite.ui.commons.networkgraph.Group, description: The group to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new Graph.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getOrientation orientation} : sap.suite.ui.commons.networkgraph.Orientation (default: LeftRight)<\/li>\n<li>{@link #getEnableZoom enableZoom} : boolean (default: true)<\/li>\n<li>{@link #getEnableWheelZoom enableWheelZoom} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : sap.suite.ui.commons.networkgraph.BackgroundColor (default: White)<\/li>\n<li>{@link #getRenderType renderType} : sap.suite.ui.commons.networkgraph.RenderType (default: Html)<\/li>\n<li>{@link #getNoData noData} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLines lines} : sap.suite.ui.commons.networkgraph.Line[]<\/li>\n<li>{@link #getNodes nodes} : sap.suite.ui.commons.networkgraph.Node[]<\/li>\n<li>{@link #getGroups groups} : sap.suite.ui.commons.networkgraph.Group[]<\/li>\n<li>{@link #getLegend legend} : sap.ui.core.Control<\/li>\n<li>{@link #getLayoutAlgorithm layoutAlgorithm} : sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm<\/li>\n<li>{@link #getStatuses statuses} : sap.suite.ui.commons.networkgraph.Status[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:graphReady graphReady} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterLayouting afterLayouting} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeLayouting beforeLayouting} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:zoomChanged zoomChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:failure failure} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:searchSuggest searchSuggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.SvgBase#constructor sap.suite.ui.commons.networkgraph.SvgBase}\ncan be used as well.","getToolbar":{"!description":"Returns a toolbar instance to allow its customization","!type":"fn() -> OverflowToolbar","!category":"function","!static":false},"detachFailure":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:failure failure} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"destroyLegend":{"!description":"Destroys the legend in the aggregation {@link #getLegend legend}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height of the graph. If this property is set to 'auto', the network graph will be resized to fit the height of its content, regardless of the height of the parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"fireSearchSuggest":{"!description":"Fires event {@link #event:searchSuggest searchSuggest} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setRenderType":{"!description":"Sets a new value for property {@link #getRenderType renderType}.\n\nNodes rendering type. For optimal performance and usability, it is recommended that you use HTML whenever possible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Html<\/code>.","!type":"fn(sRenderType: sap.suite.ui.commons.networkgraph.RenderType) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sRenderType":"type: sap.suite.ui.commons.networkgraph.RenderType, description: New value for property <code>renderType<\/code>"},"!static":false},"removeAllStatuses":{"!description":"Removes all the controls from the aggregation {@link #getStatuses statuses}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.Status]","!category":"function","!static":false},"destroyNodes":{"!description":"Destroys all the nodes in the aggregation {@link #getNodes nodes}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height of the graph. If this property is set to 'auto', the network graph will be resized to fit the height of its content, regardless of the height of the parent control.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself.\n\nThis event is fired when the user enters a keyword into the search field.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Graph<\/code> itself"},"!static":false},"destroyLines":{"!description":"Destroys all the lines in the aggregation {@link #getLines lines}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"},"!static":false},"removeNode":{"!description":"Removes a node from the aggregation {@link #getNodes nodes}.","!type":"fn(vNode: Number | String | sap.suite.ui.commons.networkgraph.Node) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"vNode":"type: int|string|sap.suite.ui.commons.networkgraph.Node, description: The node to remove or its index or id"},"!static":false},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width of the graph. If this property is set to 'auto', the network graph will be resized to fit the width of its content, regardless of the width of the parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setBackgroundImage":{"!description":"Sets a new value for property {@link #getBackgroundImage backgroundImage}.\n\nAn image to be rendered on the background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"},"!static":false},"getOrientation":{"!description":"Gets current value of property {@link #getOrientation orientation}.\n\nOrientation of the graph flow. This property is used by layout algorithms.\n\nDefault value is <code>LeftRight<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Orientation","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Graph with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.SvgBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setNoDataText":{"!description":"Sets a new value for property {@link #getNoDataText noDataText}.\n\nText displayed when no data is set. <br> This property takes effect only when the <code>noData<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sNoDataText: String) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"},"!static":false},"fireBeforeLayouting":{"!description":"Fires event {@link #event:beforeLayouting beforeLayouting} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"isFullScreen":{"!description":"Returns <code>true<\/code> if the graph is in full screen mode.","!type":"fn()","!category":"function","!static":false},"setBackgroundColor":{"!description":"Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nBackground color.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>White<\/code>.","!type":"fn(sBackgroundColor: sap.suite.ui.commons.networkgraph.BackgroundColor) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"sBackgroundColor":"type: sap.suite.ui.commons.networkgraph.BackgroundColor, description: New value for property <code>backgroundColor<\/code>"},"!static":false},"fireZoomChanged":{"!description":"Fires event {@link #event:zoomChanged zoomChanged} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyGroups":{"!description":"Destroys all the groups in the aggregation {@link #getGroups groups}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","!static":false},"detachZoomChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:zoomChanged zoomChanged} event of this <code>sap.suite.ui.commons.networkgraph.Graph<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"scrollToElement":{"!description":"Scrolls to the element set in the parameter.","!type":"fn(oElement: Object)","!category":"function","parameters":{"oElement":"type: Object, description: Element to scroll to"},"!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"setEnableWheelZoom":{"!description":"Sets a new value for property {@link #getEnableWheelZoom enableWheelZoom}.\n\nEnables zooming in or out using the mouse wheel, while holding down the Ctrl key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableWheelZoom: Boolean) -> sap.suite.ui.commons.networkgraph.Graph","!category":"function","parameters":{"bEnableWheelZoom":"type: boolean, description: New value for property <code>enableWheelZoom<\/code>"},"!static":false}},"sap.suite.ui.commons.DateRangeSlider":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nDate value of the left grip.","!type":"fn() -> Object","!category":"function","!static":false},"setSmallStepWidth":{"!description":"Sets a new value for property {@link #getSmallStepWidth smallStepWidth}.\n\nThe grips of the control can only be moved in steps of this width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(fSmallStepWidth: Number) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"fSmallStepWidth":"type: float, description: New value for property <code>smallStepWidth<\/code>"},"!static":false},"getMin":{"!description":"Gets current value of property {@link #getMin min}.\n\nMinimum date for the slider.","!type":"fn() -> Object","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nThis property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setMonthGranularity":{"!description":"Set Date Range Slider Granularity to Month","!type":"fn() -> sap.suite.ui.commons.DateRangeSlider","!category":"function","!static":false},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSlider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!module":"sap/suite/ui/commons/DateRangeSlider","setMin":{"!description":"Set min property for the DateRangeSlider. This sets the minimum date for the slider.","!type":"fn(dMin: Date)","!category":"function","parameters":{"dMin":"type: Date, description: The min date."},"!static":false},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nThis property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEditable: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"},"!static":false},"getLabels":{"!description":"Gets current value of property {@link #getLabels labels}.\n\nLabels to be displayed instead of dates.","!type":"fn() -> [String]","!category":"function","!static":false},"setMax":{"!description":"Set max property for the DateRangeSlider. This sets the maximum date for the slider.","!type":"fn(dMax: Date)","!category":"function","parameters":{"dMax":"type: Date, description: The max date."},"!static":false},"getValue2":{"!description":"Gets current value of property {@link #getValue2 value2}.\n\nDate value of the right grip.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nThis property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the horizontal date range slider.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the horizontal date range slider.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getSmallStepWidth":{"!description":"Gets current value of property {@link #getSmallStepWidth smallStepWidth}.\n\nThe grips of the control can only be moved in steps of this width.","!type":"fn() -> Number","!category":"function","!static":false},"setPinGrip2":{"!description":"Sets a new value for property {@link #getPinGrip2 pinGrip2}.\n\nPin the right grip so that user cannot move it with the keyboard or mouse.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPinGrip2: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bPinGrip2":"type: boolean, description: New value for property <code>pinGrip2<\/code>"},"!static":false},"setDayGranularity":{"!description":"Set Date Range Slider Granularity to Day","!type":"fn() -> sap.suite.ui.commons.DateRangeSlider","!category":"function","!static":false},"getTotalUnits":{"!description":"Gets current value of property {@link #getTotalUnits totalUnits}.\n\nNumber of units between ticks.","!type":"fn() -> Number","!category":"function","!static":false},"setTotalUnits":{"!description":"Sets a new value for property {@link #getTotalUnits totalUnits}.\n\nNumber of units between ticks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iTotalUnits: Number) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"iTotalUnits":"type: int, description: New value for property <code>totalUnits<\/code>"},"!static":false},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nThis property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setValue2":{"!description":"Sets a new value for property {@link #getValue2 value2}.\n\nDate value of the right grip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oValue2: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"oValue2":"type: object, description: New value for property <code>value2<\/code>"},"!static":false},"getShowBubbles":{"!description":"Gets current value of property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getStepLabels":{"!description":"Gets current value of property {@link #getStepLabels stepLabels}.\n\nDisplay a date label above each tick.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeSlider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getMax":{"!description":"Gets current value of property {@link #getMax max}.\n\nMaximum date for the slider.","!type":"fn() -> Object","!category":"function","!static":false},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nThis property switches the visible state of the control. Invisible date range slider are not rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"setValue":{"!description":"Set value property for the DateRangeSlider. This sets the value date for the slider.","!type":"fn(dValue: Date)","!category":"function","parameters":{"dValue":"type: Date, description: The value date."},"!static":false},"!constructorDescription":"Constructor for a new DateRangeSlider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getShowBubbles showBubbles} : boolean (default: true)<\/li>\n<li>{@link #getSmallStepWidth smallStepWidth} : float<\/li>\n<li>{@link #getTotalUnits totalUnits} : int<\/li>\n<li>{@link #getStepLabels stepLabels} : boolean (default: false)<\/li>\n<li>{@link #getLabels labels} : string[]<\/li>\n<li>{@link #getMin min} : object<\/li>\n<li>{@link #getMax max} : object<\/li>\n<li>{@link #getValue value} : object<\/li>\n<li>{@link #getValue2 value2} : object<\/li>\n<li>{@link #getPinGrip pinGrip} : boolean (default: false)<\/li>\n<li>{@link #getPinGrip2 pinGrip2} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSlider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nThis property switches the visible state of the control. Invisible date range slider are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.","setPinGrip":{"!description":"Sets a new value for property {@link #getPinGrip pinGrip}.\n\nPin the left grip so that user cannot move it with the keyboard or mouse.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPinGrip: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bPinGrip":"type: boolean, description: New value for property <code>pinGrip<\/code>"},"!static":false},"fireLiveChange":{"!description":"Fires event {@link #event:liveChange liveChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setStepLabels":{"!description":"Sets a new value for property {@link #getStepLabels stepLabels}.\n\nDisplay a date label above each tick.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bStepLabels: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bStepLabels":"type: boolean, description: New value for property <code>stepLabels<\/code>"},"!static":false},"fireChange":{"!description":"Fires event {@link #event:change change} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:liveChange liveChange} event of this <code>sap.suite.ui.commons.DateRangeSlider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSlider<\/code> itself.\n\nThis live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider<\/code> itself"},"!static":false},"setShowBubbles":{"!description":"Sets a new value for property {@link #getShowBubbles showBubbles}.\n\nProperty to show or hide bubbles. Default is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowBubbles: Boolean) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"bShowBubbles":"type: boolean, description: New value for property <code>showBubbles<\/code>"},"!static":false},"setDateFormat":{"!description":"Setter for dateFormat which is used to format the dates for Labels, bubble texts, and tool tips. If passed object is null or is of incorrect type, _oDateRangeSliderInternal's default formatting will be used.","!type":"fn(oDateFormat: sap.ui.core.format.DateFormat)","!category":"function","parameters":{"oDateFormat":"type: sap.ui.core.format.DateFormat, description: Date format which is used to format the dates."},"!static":false},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:change change} event of this <code>sap.suite.ui.commons.DateRangeSlider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.DateRangeSlider<\/code> itself.\n\nThis event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.DateRangeSlider<\/code> itself"},"!static":false},"getPinGrip2":{"!description":"Gets current value of property {@link #getPinGrip2 pinGrip2}.\n\nPin the right grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setLabels":{"!description":"Sets a new value for property {@link #getLabels labels}.\n\nLabels to be displayed instead of dates.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabels: [String]) -> sap.suite.ui.commons.DateRangeSlider","!category":"function","parameters":{"sLabels":"type: string[], description: New value for property <code>labels<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. Not Fiori.<br>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.DateRangeSlider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getPinGrip":{"!description":"Gets current value of property {@link #getPinGrip pinGrip}.\n\nPin the left grip so that user cannot move it with the keyboard or mouse.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.suite.ui.commons.AriaProperties_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.AriaProperties with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.AriaProperties"},"sap.suite.ui.commons.ColumnMicroChartLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnMicroChartLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartLabel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ColumnMicroChartLabel"},"sap.suite.ui.commons.FeedItem":{"setLink":{"!description":"Sets a new value for property {@link #getLink link}.\n\nThe target location of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLink: sap.ui.core.URI) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"sLink":"type: sap.ui.core.URI, description: New value for property <code>link<\/code>"},"!static":false},"setImage":{"!description":"Sets a new value for property {@link #getImage image}.\n\nThe background image for the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImage: sap.ui.core.URI) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"sImage":"type: sap.ui.core.URI, description: New value for property <code>image<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.FeedItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getPublicationDate":{"!description":"Gets current value of property {@link #getPublicationDate publicationDate}.\n\nThe date the feed was published.","!type":"fn() -> Object","!category":"function","!static":false},"getLink":{"!description":"Gets current value of property {@link #getLink link}.\n\nThe target location of the feed item.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"!constructorDescription":"Constructor for a new FeedItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getImage image} : sap.ui.core.URI<\/li>\n<li>{@link #getLink link} : sap.ui.core.URI<\/li>\n<li>{@link #getSource source} : string<\/li>\n<li>{@link #getPublicationDate publicationDate} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/suite/ui/commons/FeedItem","getSource":{"!description":"Gets current value of property {@link #getSource source}.\n\nThe source of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Generic Tile should be used instead.<br>This element represents a news feed item.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setSource":{"!description":"Sets a new value for property {@link #getSource source}.\n\nThe source of the feed item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSource: String) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"sSource":"type: string, description: New value for property <code>source<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the feed item.","!type":"fn() -> String","!category":"function","!static":false},"getImage":{"!description":"Gets current value of property {@link #getImage image}.\n\nThe background image for the feed item.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"setPublicationDate":{"!description":"Sets a new value for property {@link #getPublicationDate publicationDate}.\n\nThe date the feed was published.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oPublicationDate: Object) -> sap.suite.ui.commons.FeedItem","!category":"function","parameters":{"oPublicationDate":"type: object, description: New value for property <code>publicationDate<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Generic Tile should be used instead.<br>This element represents a news feed item.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.FeedItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.statusindicator.Path":{"getD":{"!description":"Gets current value of property {@link #getD d}.\n\nSpecifies the path that outlines the shape. The format is identical to the <code>d<\/code> attribute of the <code>&lt;path&gt;<\/code> SVG element.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Shape that consists of a single SVG path element.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Path with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.SimpleShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new Path.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getD d} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.statusindicator.SimpleShape#constructor sap.suite.ui.commons.statusindicator.SimpleShape}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/Path","setD":{"!description":"Sets a new value for property {@link #getD d}.\n\nSpecifies the path that outlines the shape. The format is identical to the <code>d<\/code> attribute of the <code>&lt;path&gt;<\/code> SVG element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sD: String) -> sap.suite.ui.commons.statusindicator.Path","!category":"function","parameters":{"sD":"type: string, description: New value for property <code>d<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.Path.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.statusindicator.SimpleShape","!helpDescription":"Shape that consists of a single SVG path element."},"sap.suite.ui.commons.imageeditor":{"HistoryItem":"sap.suite.ui.commons.imageeditor.HistoryItem_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"ImageEditorContainer":"sap.suite.ui.commons.imageeditor.ImageEditorContainer_obj","CropRectangleHistoryItem":"sap.suite.ui.commons.imageeditor.CropRectangleHistoryItem_obj","mode":{"!description":"Image editor container mode. <br>Three modes are available: transform mode, crop mode, and filter mode (default). <br>The default mode provides filters for image editing: brightness, contrast, saturation, sepia grayscale, and others.","!type":"sap.suite.ui.commons.ImageEditorContainerMode","!category":"enum"},"keepCropAspectRatio":{"!description":"Defines whether aspect ratio should be kept when the crop area is expanded or shrunk in the <code>CropRectangle<\/code> or <code>CropEllipse<\/code> modes ({@link sap.suite.ui.commons.ImageEditorMode}).","!type":"Boolean","!category":"enum"},"height":{"!description":"* Defines the height of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.","!type":"Number","!category":"enum"},"RotateHistoryItem":"sap.suite.ui.commons.imageeditor.RotateHistoryItem_obj","!category":"namespace","FlipHistoryItem":"sap.suite.ui.commons.imageeditor.FlipHistoryItem_obj","blocked":{"!description":"Whether the control is currently in blocked state.","!type":"Boolean","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"src":{"!description":"Image source. <br>Can be a URL address of the image, a Base64 data URL string, or any other source supported by the &lt;img> HTML tag.","!type":"String","!category":"enum"},"icon":{"!description":"Defines the icon to be displayed in the <code>CustomSizeItem<\/code>. <br>If no icon is specified, the default image is used, which is derived from the set width and height.","!type":"sap.ui.core.URI","!category":"enum"},"width":{"!description":"Defines the width of the <code>CustomSizeItem<\/code>. <br>This property is mandatory and must be greater than 0.","!type":"Number","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"label":{"!description":"Defines the label of the <code>CustomSizeItem<\/code>.","!type":"String","!category":"enum"},"CustomSizeItem":"sap.suite.ui.commons.imageeditor.CustomSizeItem_obj","relative":{"!description":"Specifies whether the <code>width<\/code> and <code>height<\/code> properties use relative values (<code>true<\/code>) or absolute values (<code>false<\/code>). <br>When used in the <code>customResizeItems<\/code> aggregation of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, width and height are multiplied by the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>. <br>When used in the <code>customRectangleCropItems<\/code> or <code>customEllipseCropItems<\/code> aggregations of an {@link sap.suite.ui.commons.imageeditor.ImageEditorContainer}, aspect ratio is set to the <code>width<\/code> and <code>height<\/code> properties of the <code>CustomSizeItem<\/code>.","!type":"Boolean","!category":"enum"},"FilterHistoryItem":"sap.suite.ui.commons.imageeditor.FilterHistoryItem_obj","CropEllipseHistoryItem":"sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem_obj","ResizeHistoryItem":"sap.suite.ui.commons.imageeditor.ResizeHistoryItem_obj","keepResizeAspectRatio":{"!description":"Defines whether aspect ratio should be kept when the image is resized in the <code>Resize<\/code> mode ({@link sap.suite.ui.commons.ImageEditorMode}) or using the {@link #setWidth} or {@link #setHeight} methods.","!type":"Boolean","!category":"enum"},"ImageEditor":"sap.suite.ui.commons.imageeditor.ImageEditor_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nFor backward compatibility with older releases, field group IDs are syntactically not limited, but it is suggested to use only valid {@link sap.ui.core.ID}s.\n\nSee {@link #attachValidateFieldGroup} or consult the {@link topic:5b0775397e394b1fb973fa207554003e Field Group} documentation.","!type":"[String]","!category":"enum"}},"sap.suite.ui.commons.ProcessFlowNode_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowNode with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ProcessFlowNode"},"sap.suite.ui.commons.ProcessFlowConnectionLabel_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnectionLabel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ProcessFlowConnectionLabel"},"sap.suite.ui.commons.DateRangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeSlider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.DateRangeSlider"},"sap.suite.ui.commons.ProcessFlowConnection_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlowConnection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ProcessFlowConnection"},"sap.suite.ui.commons.networkgraph.GraphMap_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.GraphMap with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.GraphMap"},"sap.suite.ui.commons.DateRangeScroller_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeScroller with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.DateRangeScroller"},"sap.suite.ui.commons.HarveyBallMicroChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChart.<br>This chart shows the part comparative to total.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.HarveyBallMicroChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.HarveyBallMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new HarveyBallMicroChart.","!module":"sap/suite/ui/commons/HarveyBallMicroChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.HarveyBallMicroChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.HarveyBallMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.HarveyBallMicroChart.<br>This chart shows the part comparative to total."},"sap.suite.ui.commons.CalculationBuilderItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.CalculationBuilderItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.CalculationBuilderItem"},"sap.suite.ui.commons.ComparisonChart_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ComparisonChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ComparisonChart"},"sap.suite.ui.commons.ComparisonChart":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChart.<br>This control shows a comparison chart.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ComparisonChart with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ComparisonMicroChart.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ComparisonChart.","!module":"sap/suite/ui/commons/ComparisonChart","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.ComparisonChart.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.microchart.ComparisonMicroChart","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.suite.ui.microchart.ComparisonMicroChart.<br>This control shows a comparison chart."},"sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new LayoutingAlgorithm.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/suite/ui/commons/networkgraph/layout/LayoutAlgorithm","_hasHierarchicalGroups":{"!type":"fn() -> Boolean","!category":"function","!static":false},"getType":{"!description":"Specifies the type of layout algorithm that defines the visual features and layout of the network graph.","!type":"fn() -> LayoutType","!category":"function","!static":false},"!description":"This is an abstract base class for Layout Algorithms.","isLayered":{"!description":"Specifies if this layouting algorithm distributes nodes into layers. Parent graph may change behaviour based on this option.","!type":"fn() -> Boolean","!category":"function","!static":false},"layout":{"!description":"Executes the layouting algorithm.","!type":"fn() -> sap.suite.ui.commons.networkgraph.layout.LayoutTask","!category":"function","!static":false},"!category":"class","_alignCoordinatesWithView":{"!type":"fn()","!category":"function","!static":false},"!helpDescription":"This is an abstract base class for Layout Algorithms.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.layout.LayoutAlgorithm.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.CalculationBuilderItemType":{"!description":"The types of items (operands) that can be used in a calculation builder expression.","Variable":{"!description":"Variable.","!type":"String","!category":"enum"},"CustomFunction":{"!description":"Custom Function.<br> Custom functions can be defined using {@link sap.suite.ui.commons.CalculationBuilderFunction}.","!type":"String","!category":"enum"},"Operator":{"!description":"Operator.","!type":"String","!category":"enum"},"Function":{"!description":"Function.<br> Default functions are defined by {@link sap.suite.ui.commons.CalculationBuilderFunctionType}.","!type":"String","!category":"enum"},"!category":"static class","CustomOperator":{"!description":"Custom arithmetic operator defined by the application.<br>Custom operators are not validated by the {@link sap.suite.ui.commons.CalculationBuilder} control.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Constant":{"!description":"Constant.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.TargetFilter":{"attachFilterChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:filterChange filterChange} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself.\n\nThis event is fired if the user changes a selected filter set.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself"},"!static":false},"removeAllSelectedColumns":{"!description":"Removes all the controls in the association named {@link #getSelectedColumns selectedColumns}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"removeAllColumns":{"!description":"Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.TargetFilterColumn]","!category":"function","!static":false},"!module":"sap/suite/ui/commons/TargetFilter","getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nThe list of the columns.","!type":"fn() -> [sap.suite.ui.commons.TargetFilterColumn]","!category":"function","!static":false},"removeColumn":{"!description":"Removes a column from the aggregation {@link #getColumns columns}.","!type":"fn(vColumn: Number | String | sap.suite.ui.commons.TargetFilterColumn) -> sap.suite.ui.commons.TargetFilterColumn","!category":"function","parameters":{"vColumn":"type: int|string|sap.suite.ui.commons.TargetFilterColumn, description: The column to remove or its index or id"},"!static":false},"fireCancel":{"!description":"Fires event {@link #event:cancel cancel} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"destroyColumns":{"!description":"Destroys all the columns in the aggregation {@link #getColumns columns}.","!type":"fn() -> sap.suite.ui.commons.TargetFilter","!category":"function","!static":false},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:search search} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself.\n\nThis event is fired if the user chooses the Show Selected link.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself"},"!static":false},"search":{"!description":"Triggers filtering in the controls that use this control. Returns this control for the method chaining.","!type":"fn() -> sap.suite.ui.commons.TargetFilter","!category":"function","!static":false},"!category":"class","detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:cancel cancel} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireSearch":{"!description":"Fires event {@link #event:search search} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeSelectedColumn":{"!description":"Removes an selectedColumn from the association named {@link #getSelectedColumns selectedColumns}.","!type":"fn(vSelectedColumn: Number | sap.ui.core.ID | sap.suite.ui.commons.TargetFilterColumn) -> sap.ui.core.ID","!category":"function","parameters":{"vSelectedColumn":"type: int|sap.ui.core.ID|sap.suite.ui.commons.TargetFilterColumn, description: The selectedColumn to be removed or its index or ID"},"!static":false},"destroyMeasureColumn":{"!description":"Destroys the measureColumn in the aggregation {@link #getMeasureColumn measureColumn}.","!type":"fn() -> sap.suite.ui.commons.TargetFilter","!category":"function","!static":false},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:search search} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireFilterChange":{"!description":"Fires event {@link #event:filterChange filterChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getSelectedColumns":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getSelectedColumns selectedColumns}.","!type":"fn() -> [sap.ui.core.ID]","!category":"function","!static":false},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:cancel cancel} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself.\n\nThis event is fired if the user changes a selected filter set to the filter set used for the last search.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.TargetFilter<\/code> itself"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TargetFilter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setMeasureColumn":{"!description":"Sets the aggregated {@link #getMeasureColumn measureColumn}.","!type":"fn(oMeasureColumn: sap.suite.ui.commons.TargetFilterMeasureColumn) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"oMeasureColumn":"type: sap.suite.ui.commons.TargetFilterMeasureColumn, description: The measureColumn to set"},"!static":false},"!constructorDescription":"Constructor for a new TargetFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEntitySet entitySet} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.suite.ui.commons.TargetFilterColumn[]<\/li>\n<li>{@link #getMeasureColumn measureColumn} : sap.suite.ui.commons.TargetFilterMeasureColumn<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedColumns selectedColumns} : (sap.ui.core.ID | sap.suite.ui.commons.TargetFilterColumn)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterChange filterChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachFilterChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:filterChange filterChange} event of this <code>sap.suite.ui.commons.TargetFilter<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getEntitySet":{"!description":"Gets current value of property {@link #getEntitySet entitySet}.\n\nThe name of the entity set from OData service metadata. The filtering applies to this entity set.","!type":"fn() -> String","!category":"function","!static":false},"getParameters":{"!description":"Returns the binding parameters for the controls that use this control.","!type":"fn() -> Object","!category":"function","!static":false},"indexOfColumn":{"!description":"Checks for the provided <code>sap.suite.ui.commons.TargetFilterColumn<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!type":"fn(oColumn: sap.suite.ui.commons.TargetFilterColumn) -> Number","!category":"function","parameters":{"oColumn":"type: sap.suite.ui.commons.TargetFilterColumn, description: The column whose index is looked for"},"!static":false},"addSelectedColumn":{"!description":"Adds some selectedColumn into the association {@link #getSelectedColumns selectedColumns}.","!type":"fn(vSelectedColumn: sap.ui.core.ID | sap.suite.ui.commons.TargetFilterColumn) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"vSelectedColumn":"type: sap.ui.core.ID|sap.suite.ui.commons.TargetFilterColumn, description: The selectedColumns to add; if empty, nothing is inserted"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The analytical filter control. The control works only with the OData model connected to the analytical OData service (for example, HANA XS Analytical view exposed as an OData service).","insertColumn":{"!description":"Inserts a column into the aggregation {@link #getColumns columns}.","!type":"fn(oColumn: sap.suite.ui.commons.TargetFilterColumn, iIndex: Number) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"oColumn":"type: sap.suite.ui.commons.TargetFilterColumn, description: The column to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the column should be inserted at; for a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"},"!static":false},"addColumn":{"!description":"Adds some column to the aggregation {@link #getColumns columns}.","!type":"fn(oColumn: sap.suite.ui.commons.TargetFilterColumn) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"oColumn":"type: sap.suite.ui.commons.TargetFilterColumn, description: The column to add; if empty, nothing is inserted"},"!static":false},"setEntitySet":{"!description":"Sets a new value for property {@link #getEntitySet entitySet}.\n\nThe name of the entity set from OData service metadata. The filtering applies to this entity set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sEntitySet: String) -> sap.suite.ui.commons.TargetFilter","!category":"function","parameters":{"sEntitySet":"type: string, description: New value for property <code>entitySet<\/code>"},"!static":false},"getFilters":{"!description":"Returns a selected filter set.","!type":"fn() -> Array","!category":"function","!static":false},"getMeasureColumn":{"!description":"Gets content of aggregation {@link #getMeasureColumn measureColumn}.\n\nThe measure column.","!type":"fn() -> sap.suite.ui.commons.TargetFilterMeasureColumn","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated.<br>The analytical filter control. The control works only with the OData model connected to the analytical OData service (for example, HANA XS Analytical view exposed as an OData service).","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TargetFilter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.VerticalNavigationBar":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. sap.uxap.ObjectPageLayout should be used instead.<br>This control extends the sap.ui.ux3.NavigationBar and allows you to display navigation items vertically. The navigation list can contain sap.ui.ux3.NavigationItem or sap.suite.ui.commons.CountingNavigationItem controls.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.VerticalNavigationBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.ux3.NavigationBar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new VerticalNavigationBar.","!module":"sap/suite/ui/commons/VerticalNavigationBar","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.VerticalNavigationBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.ux3.NavigationBar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. sap.uxap.ObjectPageLayout should be used instead.<br>This control extends the sap.ui.ux3.NavigationBar and allows you to display navigation items vertically. The navigation list can contain sap.ui.ux3.NavigationItem or sap.suite.ui.commons.CountingNavigationItem controls."},"sap.suite.ui.commons.DateRangeSliderInternal_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.DateRangeSliderInternal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.commons.RangeSlider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.DateRangeSliderInternal"},"sap.suite.ui.commons.ColumnData_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ColumnData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.microchart.ColumnMicroChartData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ColumnData"},"sap.suite.ui.commons.MonitoringTile":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe actual value.","!type":"fn() -> String","!category":"function","!static":false},"setFooterColor":{"!description":"Sets a new value for property {@link #getFooterColor footerColor}.\n\nThe color of the tile footer text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Positive<\/code>.","!type":"fn(sFooterColor: sap.suite.ui.commons.InfoTileTextColor) -> sap.suite.ui.commons.MonitoringTile","!category":"function","parameters":{"sFooterColor":"type: sap.suite.ui.commons.InfoTileTextColor, description: New value for property <code>footerColor<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.MonitoringTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.InfoTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.MonitoringTile","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new MonitoringTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getIconSrc iconSrc} : string<\/li>\n<li>{@link #getFooterColor footerColor} : sap.suite.ui.commons.InfoTileTextColor (default: Positive)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.InfoTile#constructor sap.suite.ui.commons.InfoTile}\ncan be used as well.","!module":"sap/suite/ui/commons/MonitoringTile","getFooterColor":{"!description":"Gets current value of property {@link #getFooterColor footerColor}.\n\nThe color of the tile footer text.\n\nDefault value is <code>Positive<\/code>.","!type":"fn() -> sap.suite.ui.commons.InfoTileTextColor","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a numeric value and an icon.","!category":"class","getIconSrc":{"!description":"Gets current value of property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.","!type":"fn() -> String","!category":"function","!static":false},"setIconSrc":{"!description":"Sets a new value for property {@link #getIconSrc iconSrc}.\n\nThis property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIconSrc: String) -> sap.suite.ui.commons.MonitoringTile","!category":"function","parameters":{"sIconSrc":"type: string, description: New value for property <code>iconSrc<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25 This control has been deprecated in favor of new sap.suite.ui.commons.GenericTile.<br>This control is the implementation of the InfoTile to show a numeric value and an icon.","!proto":"sap.suite.ui.commons.InfoTile","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.MonitoringTile.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite":{"ui":"sap.suite.ui","!category":"namespace"},"sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem":{"!description":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#ellipseCrop} method.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.imageeditor.HistoryItem.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new CropEllipseHistoryItem.","!module":"sap/suite/ui/commons/imageeditor/CropEllipseHistoryItem","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.imageeditor.CropEllipseHistoryItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.imageeditor.HistoryItem","!helpDescription":"Holds information about an {@link sap.suite.ui.commons.imageeditor.ImageEditor} action history item that was created by the {@link sap.suite.ui.commons.imageeditor.ImageEditor#ellipseCrop} method."},"sap.suite.ui.commons.taccount.TAccount":{"setOpening":{"!description":"Sets a new value for property {@link #getOpening opening}.\n\nMode with opening and closing balance of the T account.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bOpening: Boolean) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"bOpening":"type: boolean, description: New value for property <code>opening<\/code>"},"!static":false},"getCredit":{"!description":"Gets content of aggregation {@link #getCredit credit}.\n\nCredit entries.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItem]","!category":"function","!static":false},"setOrderBy":{"!description":"Sets a new value for property {@link #getOrderBy orderBy}.\n\nTAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime<\/code> properties.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sOrderBy: String) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"sOrderBy":"type: string, description: New value for property <code>orderBy<\/code>"},"!static":false},"addDebit":{"!description":"Adds some debit to the aggregation {@link #getDebit debit}.","!type":"fn(oDebit: sap.suite.ui.commons.taccount.TAccountItem) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"oDebit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The debit to add; if empty, nothing is inserted"},"!static":false},"destroyCredit":{"!description":"Destroys all the credit in the aggregation {@link #getCredit credit}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccount","!category":"function","!static":false},"getOpeningCredit":{"!description":"Gets current value of property {@link #getOpeningCredit openingCredit}.\n\nOpening credit balance of the T account.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"sap/suite/ui/commons/taccount/TAccount","removeAllCredit":{"!description":"Removes all the controls from the aggregation {@link #getCredit credit}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItem]","!category":"function","!static":false},"removeDebit":{"!description":"Removes a debit from the aggregation {@link #getDebit debit}.","!type":"fn(vDebit: Number | String | sap.suite.ui.commons.taccount.TAccountItem) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"vDebit":"type: int|string|sap.suite.ui.commons.taccount.TAccountItem, description: The debit to remove or its index or id"},"!static":false},"removeAllDebit":{"!description":"Removes all the controls from the aggregation {@link #getDebit debit}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItem]","!category":"function","!static":false},"!category":"class","setSubtitle":{"!description":"Sets a new value for property {@link #getSubtitle subtitle}.\n\nSubtitle of the T account.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSubtitle: String) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"sSubtitle":"type: string, description: New value for property <code>subtitle<\/code>"},"!static":false},"addCredit":{"!description":"Adds some credit to the aggregation {@link #getCredit credit}.","!type":"fn(oCredit: sap.suite.ui.commons.taccount.TAccountItem) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"oCredit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The credit to add; if empty, nothing is inserted"},"!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nTitle of the T account.","!type":"fn() -> String","!category":"function","!static":false},"getOrderBy":{"!description":"Gets current value of property {@link #getOrderBy orderBy}.\n\nTAccount property's key, which is used for ordering. If not set, order mode is not enabled. Only supports <code>DateTime<\/code> properties.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setMeasureOfUnit":{"!description":"Sets a new value for property {@link #getMeasureOfUnit measureOfUnit}.\n\nUnit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sMeasureOfUnit: String) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"sMeasureOfUnit":"type: string, description: New value for property <code>measureOfUnit<\/code>"},"!static":false},"getSubtitle":{"!description":"Gets current value of property {@link #getSubtitle subtitle}.\n\nSubtitle of the T account.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccount with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"insertCredit":{"!description":"Inserts a credit into the aggregation {@link #getCredit credit}.","!type":"fn(oCredit: sap.suite.ui.commons.taccount.TAccountItem, iIndex: Number) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"oCredit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The credit to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the credit should be inserted at; for a negative value of <code>iIndex<\/code>, the credit is inserted at position 0; for a value greater than the current size of the aggregation, the credit is inserted at the last position"},"!static":false},"insertDebit":{"!description":"Inserts a debit into the aggregation {@link #getDebit debit}.","!type":"fn(oDebit: sap.suite.ui.commons.taccount.TAccountItem, iIndex: Number) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the debit should be inserted at; for a negative value of <code>iIndex<\/code>, the debit is inserted at position 0; for a value greater than the current size of the aggregation, the debit is inserted at the last position","oDebit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The debit to insert; if empty, nothing is inserted"},"!static":false},"indexOfCredit":{"!description":"Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItem<\/code> in the aggregation {@link #getCredit credit}. and returns its index if found or -1 otherwise.","!type":"fn(oCredit: sap.suite.ui.commons.taccount.TAccountItem) -> Number","!category":"function","parameters":{"oCredit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The credit whose index is looked for"},"!static":false},"getDebit":{"!description":"Gets content of aggregation {@link #getDebit debit}.\n\nDebit entries.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItem]","!category":"function","!static":false},"setOpeningDebit":{"!description":"Sets a new value for property {@link #getOpeningDebit openingDebit}.\n\nOpening debit balance of the T account.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fOpeningDebit: Number) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"fOpeningDebit":"type: float, description: New value for property <code>openingDebit<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TAccount.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMeasureOfUnit measureOfUnit} : string (default: )<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getOrderBy orderBy} : string (default: )<\/li>\n<li>{@link #getOpening opening} : boolean (default: false)<\/li>\n<li>{@link #getOpeningDebit openingDebit} : float (default: 0)<\/li>\n<li>{@link #getOpeningCredit openingCredit} : float (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDebit debit} : sap.suite.ui.commons.taccount.TAccountItem[]<\/li>\n<li>{@link #getCredit credit} : sap.suite.ui.commons.taccount.TAccountItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getOpening":{"!description":"Gets current value of property {@link #getOpening opening}.\n\nMode with opening and closing balance of the T account.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyDebit":{"!description":"Destroys all the debit in the aggregation {@link #getDebit debit}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccount","!category":"function","!static":false},"getOpeningDebit":{"!description":"Gets current value of property {@link #getOpeningDebit openingDebit}.\n\nOpening debit balance of the T account.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the T account should appear as collapsed.<br>By default, it appears as expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCollapsed: Boolean) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"},"!static":false},"!description":"The T account control displays debit and credit entries on a general ledger account. It can be used to visualize the flow of transactions through the accounts where these transactions are stored.","removeCredit":{"!description":"Removes a credit from the aggregation {@link #getCredit credit}.","!type":"fn(vCredit: Number | String | sap.suite.ui.commons.taccount.TAccountItem) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"vCredit":"type: int|string|sap.suite.ui.commons.taccount.TAccountItem, description: The credit to remove or its index or id"},"!static":false},"getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the T account should appear as collapsed.<br>By default, it appears as expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nTitle of the T account.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"indexOfDebit":{"!description":"Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItem<\/code> in the aggregation {@link #getDebit debit}. and returns its index if found or -1 otherwise.","!type":"fn(oDebit: sap.suite.ui.commons.taccount.TAccountItem) -> Number","!category":"function","parameters":{"oDebit":"type: sap.suite.ui.commons.taccount.TAccountItem, description: The debit whose index is looked for"},"!static":false},"getMeasureOfUnit":{"!description":"Gets current value of property {@link #getMeasureOfUnit measureOfUnit}.\n\nUnit of measurement. Can be set to a currency or any other applicable unit of measurement.<br> Please note that if multi-currency accounts are used, the T account control will not convert the values to the currency defined in this property.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setOpeningCredit":{"!description":"Sets a new value for property {@link #getOpeningCredit openingCredit}.\n\nOpening credit balance of the T account.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fOpeningCredit: Number) -> sap.suite.ui.commons.taccount.TAccount","!category":"function","parameters":{"fOpeningCredit":"type: float, description: New value for property <code>openingCredit<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"The T account control displays debit and credit entries on a general ledger account. It can be used to visualize the flow of transactions through the accounts where these transactions are stored.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.taccount.TAccount.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.taccount.TAccountItemProperty":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nValue of the property.","!type":"fn() -> String","!category":"function","!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the property.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItemProperty with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDefines whether the T account property should be visible or hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"setLabel":{"!description":"Sets a new value for property {@link #getLabel label}.\n\nLabel of the property.<br>Can be hidden or displayed using the <code>displayLabel<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sLabel: String) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"},"!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nValue of the property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TAccountItemProperty.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getDisplayLabel displayLabel} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/taccount/TAccountItemProperty","getLabel":{"!description":"Gets current value of property {@link #getLabel label}.\n\nLabel of the property.<br>Can be hidden or displayed using the <code>displayLabel<\/code> property.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"setDisplayLabel":{"!description":"Sets a new value for property {@link #getDisplayLabel displayLabel}.\n\nDefines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayLabel: Boolean) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"bDisplayLabel":"type: boolean, description: New value for property <code>displayLabel<\/code>"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDefines whether the T account property should be visible or hidden.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"An additional property that defines how a {@link sap.suite.ui.commons.TAccountItem} is displayed.","!category":"class","!helpDescription":"An additional property that defines how a {@link sap.suite.ui.commons.TAccountItem} is displayed.","!proto":"sap.ui.core.Control","getDisplayLabel":{"!description":"Gets current value of property {@link #getDisplayLabel displayLabel}.\n\nDefines whether the label should be displayed.<br> This property can be overridden by the {@link sap.suite.ui.commons.TAccountPanel} settings.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountItemProperty.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.LinkActionSheet_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.LinkActionSheet with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ActionSheet.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.LinkActionSheet"},"sap.suite.ui.commons.BulletChartMode":{"Actual":{"!description":"Displays the Actual value.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.suite.ui.microchart.BulletMicroChartModeType should be used.<br>Enumeration of possible BulletChart display modes.","Delta":{"!description":"Displays delta between the Actual and Threshold values.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.networkgraph.Group":{"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe key of the group. This key is used to assign nodes to groups.","!type":"fn() -> String","!category":"function","!static":false},"fireHeaderCheckBoxPress":{"!description":"Fires event {@link #event:headerCheckBoxPress headerCheckBoxPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getParentLines":{"!type":"fn() -> Array","!category":"function","!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setMinWidth":{"!description":"Sets a new value for property {@link #getMinWidth minWidth}.\n\nMinimal width of the group (swim lane) for the <code>SwimLanes<\/code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(fMinWidth: Number) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fMinWidth":"type: float, description: New value for property <code>minWidth<\/code>"},"!static":false},"attachShowDetail":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:showDetail showDetail} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself.\n\nThis event is fired when the user clicks or taps the group's details button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself"},"!static":false},"setParentGroupKey":{"!description":"Sets a new value for property {@link #getParentGroupKey parentGroupKey}.\n\nKey of the parent group. Can be used only with the <code>TwoColumns<\/code> layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sParentGroupKey: String) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"sParentGroupKey":"type: string, description: New value for property <code>parentGroupKey<\/code>"},"!static":false},"!module":"sap/suite/ui/commons/networkgraph/Group","getNodes":{"!type":"fn() -> Array","!category":"function","!static":false},"fireCollapseExpand":{"!description":"Fires event {@link #event:collapseExpand collapseExpand} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nAn icon associated with the group.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe key of the group. This key is used to assign nodes to groups.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"getParentNodes":{"!type":"fn() -> Array","!category":"function","!static":false},"detachCollapseExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getParentGroupKey":{"!description":"Gets current value of property {@link #getParentGroupKey parentGroupKey}.\n\nKey of the parent group. Can be used only with the <code>TwoColumns<\/code> layout.","!type":"fn() -> String","!category":"function","!static":false},"attachHeaderCheckBoxPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself.\n\nThis event is fired when the user selects or clears the Header checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself"},"!static":false},"setHidden":{"!description":"Hides the group and the nodes included in it.","!type":"fn()","!category":"function","!static":false},"!category":"class","getChildLines":{"!type":"fn() -> Array","!category":"function","!static":false},"getHeaderCheckbox":{"!description":"Returns header checkbox object","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Group with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getMinWidth":{"!description":"Gets current value of property {@link #getMinWidth minWidth}.\n\nMinimal width of the group (swim lane) for the <code>SwimLanes<\/code> type of {@link sap.suite.ui.commons.networkgraph.LayoutRenderType}.<br> If not specified, the width of the group (swim lane) is defined automatically, based on the width of the nodes included in the swim lane.<br> If the width specified in this property is too small to fit the nodes included in this group (swim lane), the width is increased accordingly.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Group. Grouping is not supported for custom layouting.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderCheckBoxState headerCheckBoxState} : sap.suite.ui.commons.networkgraph.HeaderCheckboxState (default: Hidden)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getMinWidth minWidth} : float (default: undefined)<\/li>\n<li>{@link #getParentGroupKey parentGroupKey} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:headerCheckBoxPress headerCheckBoxPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:collapseExpand collapseExpand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:showDetail showDetail} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.ElementBase#constructor sap.suite.ui.commons.networkgraph.ElementBase}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself.\n\nThis event is fired when the user clicks or taps the header of the group.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself"},"!static":false},"getChildNodes":{"!type":"fn() -> Array","!category":"function","!static":false},"detachHeaderCheckBoxPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines whether the group is collapsed. By default, it is expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCollapsed: Boolean) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"},"!static":false},"!description":"Holds details about a group.","getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines whether the group is collapsed. By default, it is expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nAn icon associated with the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"attachCollapseExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself.\n\nThis event is fired when the user clicks or taps the collapse/expand button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Group<\/code> itself"},"!static":false},"detachShowDetail":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:showDetail showDetail} event of this <code>sap.suite.ui.commons.networkgraph.Group<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireShowDetail":{"!description":"Fires event {@link #event:showDetail showDetail} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setHeaderCheckBoxState":{"!description":"Sets a new value for property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sHeaderCheckBoxState: sap.suite.ui.commons.networkgraph.HeaderCheckboxState) -> sap.suite.ui.commons.networkgraph.Group","!category":"function","parameters":{"sHeaderCheckBoxState":"type: sap.suite.ui.commons.networkgraph.HeaderCheckboxState, description: New value for property <code>headerCheckBoxState<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Group.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.suite.ui.commons.networkgraph.ElementBase","!helpDescription":"Holds details about a group.","getHeaderCheckBoxState":{"!description":"Gets current value of property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.HeaderCheckboxState","!category":"function","!static":false}},"sap.suite.ui.commons.TimelineAlignment":{"Right":{"!description":"Entries are displayed to the right of the timeline axis.<br> In a horizontal timeline, entries are displayed below the timeline axis. Synonym for Bottom.","!type":"String","!category":"enum"},"Bottom":{"!description":"Entries are displayed below the timeline axis.<br> In a vertical timeline, entries are displayed to the right of the timeline axis. Synonym for Right.","!type":"String","!category":"enum"},"Top":{"!description":"Entries are displayed above the timeline axis.<br> In a vertical timeline, entries are displayed to the left of the timeline axis. Synonym for Left.","!type":"String","!category":"enum"},"!description":"The alignment of timeline posts relative to the timeline axis.","!category":"static class","!module":"sap/suite/ui/commons/library","Left":{"!description":"Entries are displayed to the left of the timeline axis.<br> In a horizontal timeline, entries are displayed above the timeline axis. Synonym for Top.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.TimelineScrollingFadeout":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54.0 Not Fiori.<br>Type of the fadeout effect applied to the upper and lower margins of the visible timeline area.","Area":{"!description":"Timeline fades into the lower and upper margins of the visible area, but no scroll buttons are displayed.","!type":"String","!category":"enum"},"!category":"static class","AreaWithButtons":{"!description":"Timeline fades into the lower and upper margins of the visible area, and scroll buttons are displayed.","!type":"String","!category":"enum"},"None":{"!description":"Timeline does not fade out.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library"},"sap.suite.ui.commons.statusindicator.Shape_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.Shape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.Shape"},"sap.suite.ui.commons.GenericTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.GenericTile with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.GenericTile.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.GenericTile"},"sap.suite.ui.commons.ProcessFlow_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.ProcessFlow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.ProcessFlow"},"sap.suite.ui.commons.TileContent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.TileContent.<br>This control serves a universal container for different types of content and footer.","extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.TileContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.TileContent.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new TileContent.","!module":"sap/suite/ui/commons/TileContent","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.TileContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.TileContent","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 this control is a mere wrapper for sap.m.TileContent.<br>This control serves a universal container for different types of content and footer."},"sap.suite.ui.commons.taccount.TAccountItem":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nValue of the credit or debit entry.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"removeAllProperties":{"!description":"Removes all the controls from the aggregation {@link #getProperties properties}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItemProperty]","!category":"function","!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!module":"sap/suite/ui/commons/taccount/TAccountItem","setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nColor applied to the debit or credit entry.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sColor: sap.m.ValueCSSColor) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"sColor":"type: sap.m.ValueCSSColor, description: New value for property <code>color<\/code>"},"!static":false},"!category":"class","getGroup":{"!description":"Gets current value of property {@link #getGroup group}.\n\nGroup where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nAria label for item.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nColor applied to the debit or credit entry.","!type":"fn() -> sap.m.ValueCSSColor","!category":"function","!static":false},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nAria label for item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sAriaLabel: String) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"insertProperty":{"!description":"Inserts a property into the aggregation {@link #getProperties properties}.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty, iIndex: Number) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the property should be inserted at; for a negative value of <code>iIndex<\/code>, the property is inserted at position 0; for a value greater than the current size of the aggregation, the property is inserted at the last position"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.taccount.TAccountItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfProperty":{"!description":"Checks for the provided <code>sap.suite.ui.commons.taccount.TAccountItemProperty<\/code> in the aggregation {@link #getProperties properties}. and returns its index if found or -1 otherwise.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty) -> Number","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property whose index is looked for"},"!static":false},"setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nValue of the credit or debit entry.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fValue: Number) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"fValue":"type: float, description: New value for property <code>value<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TAccountItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getColor color} : sap.m.ValueCSSColor<\/li>\n<li>{@link #getGroup group} : string (default: )<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getProperties properties} : sap.suite.ui.commons.taccount.TAccountItemProperty[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getProperties":{"!description":"Gets content of aggregation {@link #getProperties properties}.\n\nAdditional properties that define how the entry is displayed.","!type":"fn() -> [sap.suite.ui.commons.taccount.TAccountItemProperty]","!category":"function","!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.taccount.TAccountItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.taccount.TAccountItem<\/code> itself.\n\nThis event is fired when the user clicks or taps the entry. It highlights the entry and all other entries that belong to the same group.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.taccount.TAccountItem<\/code> itself"},"!static":false},"destroyProperties":{"!description":"Destroys all the properties in the aggregation {@link #getProperties properties}.","!type":"fn() -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","!static":false},"setGroup":{"!description":"Sets a new value for property {@link #getGroup group}.\n\nGroup where this debit or credit entry belongs.<br> Entries that share the same group are highlighted when the user clicks or taps one of such entries.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sGroup: String) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"sGroup":"type: string, description: New value for property <code>group<\/code>"},"!static":false},"!description":"The T account item control represents a credit or debit entry on a {@link sap.suite.ui.commons.TAccount}.","addProperty":{"!description":"Adds some property to the aggregation {@link #getProperties properties}.","!type":"fn(oProperty: sap.suite.ui.commons.taccount.TAccountItemProperty) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"oProperty":"type: sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to add; if empty, nothing is inserted"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.taccount.TAccountItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.taccount.TAccountItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"removeProperty":{"!description":"Removes a property from the aggregation {@link #getProperties properties}.","!type":"fn(vProperty: Number | String | sap.suite.ui.commons.taccount.TAccountItemProperty) -> sap.suite.ui.commons.taccount.TAccountItemProperty","!category":"function","parameters":{"vProperty":"type: int|string|sap.suite.ui.commons.taccount.TAccountItemProperty, description: The property to remove or its index or id"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"The T account item control represents a credit or debit entry on a {@link sap.suite.ui.commons.TAccount}.","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.taccount.TAccountItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.statusindicator.LibraryShape_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.LibraryShape with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.statusindicator.CustomShape.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.suite.ui.commons.statusindicator.LibraryShape"},"sap.suite.ui.commons.networkgraph.layout.ForcedDirectedLayout_obj":{"!type":"fn()","prototype":"sap.suite.ui.commons.networkgraph.layout.ForcedDirectedLayout"},"sap.suite.ui.commons.networkgraph.layout.LayoutTask_obj":{"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.layout.LayoutTask with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(fnPromiseCallback: fn())","prototype":"sap.suite.ui.commons.networkgraph.layout.LayoutTask"},"sap.suite.ui.commons.statusindicator.PropertyThreshold":{"getAriaLabel":{"!description":"Gets current value of property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.","!type":"fn() -> String","!category":"function","!static":false},"setAriaLabel":{"!description":"Sets a new value for property {@link #getAriaLabel ariaLabel}.\n\nARIA label for this threshold to be used by screen reader software.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAriaLabel: String) -> sap.suite.ui.commons.statusindicator.PropertyThreshold","!category":"function","parameters":{"sAriaLabel":"type: string, description: New value for property <code>ariaLabel<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.statusindicator.PropertyThreshold with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new PropertyThreshold.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFillColor fillColor} : sap.m.ValueCSSColor (default: Neutral)<\/li>\n<li>{@link #getToValue toValue} : int (default: 0)<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/suite/ui/commons/statusindicator/PropertyThreshold","!description":"Property threshold defines how the shapes included in the status indicator should be filled when the status indicator's percentage value is below the given threshold.","setToValue":{"!description":"Sets a new value for property {@link #getToValue toValue}.\n\nDefines the maximum value up to which the threshold setting should apply.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iToValue: Number) -> sap.suite.ui.commons.statusindicator.PropertyThreshold","!category":"function","parameters":{"iToValue":"type: int, description: New value for property <code>toValue<\/code>"},"!static":false},"!category":"class","getToValue":{"!description":"Gets current value of property {@link #getToValue toValue}.\n\nDefines the maximum value up to which the threshold setting should apply.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getFillColor":{"!description":"Gets current value of property {@link #getFillColor fillColor}.\n\nDefines the color used to fill the shapes included in the status indicator.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn() -> sap.m.ValueCSSColor","!category":"function","!static":false},"!helpDescription":"Property threshold defines how the shapes included in the status indicator should be filled when the status indicator's percentage value is below the given threshold.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.statusindicator.PropertyThreshold.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setFillColor":{"!description":"Sets a new value for property {@link #getFillColor fillColor}.\n\nDefines the color used to fill the shapes included in the status indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!type":"fn(sFillColor: sap.m.ValueCSSColor) -> sap.suite.ui.commons.statusindicator.PropertyThreshold","!category":"function","parameters":{"sFillColor":"type: sap.m.ValueCSSColor, description: New value for property <code>fillColor<\/code>"},"!static":false}},"sap.suite.ui.commons.networkgraph.Node":{"addActionLink":{"!description":"Adds some actionLink to the aggregation {@link #getActionLinks actionLinks}.","!type":"fn(oActionLink: sap.ui.core.Control) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oActionLink":"type: sap.ui.core.Control, description: The actionLink to add; if empty, nothing is inserted"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nKey of the node. This key is used throughout the DOM to reference this node, mainly in the connector line (Line) elements of the graph.","!type":"fn() -> String","!category":"function","!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getStatusIcon":{"!description":"Gets current value of property {@link #getStatusIcon statusIcon}.\n\nAn additional status icon displayed when the node is collapsed.","!type":"fn() -> String","!category":"function","!static":false},"renderHtmlActionButtons":{"!description":"Renders wrappers for HTML action buttons. Used for custom rendering.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/suite/ui/commons/networkgraph/Node","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nKey of the node. This key is used throughout the DOM to reference this node, mainly in the connector line (Line) elements of the graph.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"removeAllActionLinks":{"!description":"Removes all the controls from the aggregation {@link #getActionLinks actionLinks}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"removeActionButton":{"!description":"Removes a actionButton from the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(vActionButton: Number | String | sap.suite.ui.commons.networkgraph.ActionButton) -> sap.suite.ui.commons.networkgraph.ActionButton","!category":"function","parameters":{"vActionButton":"type: int|string|sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to remove or its index or id"},"!static":false},"setHidden":{"!description":"Hides the node and any lines that lead to it.","!type":"fn(bValue: undefined)","!category":"function","parameters":{"bValue":"type: undefined, description: value"},"!static":false},"getGroup":{"!description":"Gets current value of property {@link #getGroup group}.\n\nKey of the group where this node is included.","!type":"fn() -> String","!category":"function","!static":false},"getShowActionLinksButton":{"!description":"Gets current value of property {@link #getShowActionLinksButton showActionLinksButton}.\n\nDetermines if the links button is visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getChildLines":{"!description":"Returns all lines connected to the child nodes.","!type":"fn() -> Array","!category":"function","!static":false},"setImage":{"!description":"Sets the aggregated {@link #getImage image}.","!type":"fn(oImage: sap.suite.ui.commons.networkgraph.NodeImage) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oImage":"type: sap.suite.ui.commons.networkgraph.NodeImage, description: The image to set"},"!static":false},"getCoreNodeSize":{"!description":"Gets current value of property {@link #getCoreNodeSize coreNodeSize}.\n\nDetermines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getEnabledActionButtons":{"!description":"Gets the node's action buttons that are enabled.","!type":"fn() -> Array","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen. Node is still used for layouter.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"calculateSizes":{"!description":"Determines node sizes, applies text trimming, arranges the text into lines, and makes other necessary adjustments.<br>\n\nThis method can only be overridden when custom rendering is used. It must never be called directly.","!type":"fn() -> *","!category":"function","!static":false},"getSelected":{"!description":"Gets current value of property {@link #getSelected selected}.\n\nShows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"indexOfActionLink":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActionLinks actionLinks}. and returns its index if found or -1 otherwise.","!type":"fn(oActionLink: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oActionLink":"type: sap.ui.core.Control, description: The actionLink whose index is looked for"},"!static":false},"!proto":"sap.suite.ui.commons.networkgraph.ElementBase","!helpDescription":"Holds information about one node.","renderContent":{"!description":"This method can only be overridden when custom rendering is used. It must never be called directly.","!type":"fn(mOptions?: Object) -> *","!category":"function","parameters":{"mOptions":"type: Object, description: Options passed to the method"},"!static":false},"fireCollapseExpand":{"!description":"Fires event {@link #event:collapseExpand collapseExpand} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nAn icon associated with the element.","!type":"fn() -> String","!category":"function","!static":false},"renderHtmlIcon":{"!description":"Creates HTML representation of an icon.","!type":"fn(sIcon: undefined) -> String","!category":"function","parameters":{"sIcon":"type: undefined, description: icon to render"},"!static":false},"getMaxWidth":{"!description":"Gets current value of property {@link #getMaxWidth maxWidth}.\n\nMaximum width allowed. The auto grow algorithm stops increasing the width at this value.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"detachCollapseExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getShowExpandButton":{"!description":"Gets current value of property {@link #getShowExpandButton showExpandButton}.\n\nDetermines if the expand button is visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachHeaderCheckBoxPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself.\n\nThis event is fired when the user selects or clears the Header checkbox.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself"},"!static":false},"removeActionLink":{"!description":"Removes a actionLink from the aggregation {@link #getActionLinks actionLinks}.","!type":"fn(vActionLink: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vActionLink":"type: int|string|sap.ui.core.Control, description: The actionLink to remove or its index or id"},"!static":false},"renderText":{"!description":"Renders the text of the node as SVG. Either text or lines of text must be passed to this method as an argument.","!type":"fn(mArguments?: Object) -> String","!category":"function","parameters":{"mArguments":"type: Object, description: Arguments passed to the method"},"!static":false},"getCenterPosition":{"!description":"Returns center position of the node.","!type":"fn() -> Object","!category":"function","!static":false},"setTitleLineSize":{"!description":"Sets a new value for property {@link #getTitleLineSize titleLineSize}.\n\nDetermines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iTitleLineSize: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iTitleLineSize":"type: int, description: New value for property <code>titleLineSize<\/code>"},"!static":false},"getActionButtons":{"!description":"Gets content of aggregation {@link #getActionButtons actionButtons}.\n\nA list of custom action buttons. These buttons are displayed in the button area for each node. A node may have up to 4 buttons. The default 3 buttons (collapse/expand, details, and links) have priority over any other custom buttons that you add. If you want all 4 of your custom buttons to be displayed, set the visibility of the default buttons to false.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ActionButton]","!category":"function","!static":false},"!category":"class","insertActionLink":{"!description":"Inserts a actionLink into the aggregation {@link #getActionLinks actionLinks}.","!type":"fn(oActionLink: sap.ui.core.Control, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oActionLink":"type: sap.ui.core.Control, description: The actionLink to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionLink should be inserted at; for a negative value of <code>iIndex<\/code>, the actionLink is inserted at position 0; for a value greater than the current size of the aggregation, the actionLink is inserted at the last position"},"!static":false},"addActionButton":{"!description":"Adds some actionButton to the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to add; if empty, nothing is inserted"},"!static":false},"getHeaderCheckbox":{"!description":"Returns header checkbox object","!type":"fn()","!category":"function","!static":false},"indexOfActionButton":{"!description":"Checks for the provided <code>sap.suite.ui.commons.networkgraph.ActionButton<\/code> in the aggregation {@link #getActionButtons actionButtons}. and returns its index if found or -1 otherwise.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton) -> Number","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton whose index is looked for"},"!static":false},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen. Node is still used for layouter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"getDescriptionLineSize":{"!description":"Gets current value of property {@link #getDescriptionLineSize descriptionLineSize}.\n\nDetermines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1<\/code> (default). To display an unlimited number of lines, set this property to <code>0<\/code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.\n\nDefault value is <code>-1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself.\n\nThis event is fired when the user clicks or taps the node.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself"},"!static":false},"isHidden":{"!description":"Indicates whether the node is hidden by collapsing any of its parent nodes.","!type":"fn() -> Boolean | *","!category":"function","!static":false},"!description":"Holds information about one node.","getActionLinks":{"!description":"Gets content of aggregation {@link #getActionLinks actionLinks}.\n\nA list of links to be shown in the links area. A link may point to any UI5 control. It's up to the caller to set up all necessary callback functions.","!type":"fn() -> [sap.ui.core.Control]","!category":"function","!static":false},"setStatusIcon":{"!description":"Sets a new value for property {@link #getStatusIcon statusIcon}.\n\nAn additional status icon displayed when the node is collapsed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sStatusIcon: String) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sStatusIcon":"type: string, description: New value for property <code>statusIcon<\/code>"},"!static":false},"getImage":{"!description":"Gets content of aggregation {@link #getImage image}.\n\nThe image that is displayed in the node's header instead of the icon.","!type":"fn() -> sap.suite.ui.commons.networkgraph.NodeImage","!category":"function","!static":false},"attachCollapseExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:collapseExpand collapseExpand} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself.\n\nThis event is fired when the user clicks the node's collapse/expand button.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.networkgraph.Node.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"fireHeaderCheckBoxPress":{"!description":"Fires event {@link #event:headerCheckBoxPress headerCheckBoxPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getParentLines":{"!description":"Returns all lines connected to the parent nodes.","!type":"fn() -> Array","!category":"function","!static":false},"destroyActionButtons":{"!description":"Destroys all the actionButtons in the aggregation {@link #getActionButtons actionButtons}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Node","!category":"function","!static":false},"getIconSize":{"!description":"Gets current value of property {@link #getIconSize iconSize}.\n\nDetermines the size of the node's icon. This property can be applied only to circular nodes.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the node. If the width is not defined, the node expands, so it can fit the content.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nCustom content rendered with the node. Available only for rectangular nodes with HTML rendering type.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"destroyActionLinks":{"!description":"Destroys all the actionLinks in the aggregation {@link #getActionLinks actionLinks}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Node","!category":"function","!static":false},"destroyImage":{"!description":"Destroys the image in the aggregation {@link #getImage image}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Node","!category":"function","!static":false},"getShowDetailButton":{"!description":"Gets current value of property {@link #getShowDetailButton showDetailButton}.\n\nDetermines if the details button is visible.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Node.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderCheckBoxState headerCheckBoxState} : sap.suite.ui.commons.networkgraph.HeaderCheckboxState (default: Hidden)<\/li>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getGroup group} : string<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getShape shape} : sap.suite.ui.commons.networkgraph.NodeShape (default: Circle)<\/li>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getStatusIcon statusIcon} : string<\/li>\n<li>{@link #getWidth width} : int (default: undefined)<\/li>\n<li>{@link #getHeight height} : int (default: undefined)<\/li>\n<li>{@link #getMaxWidth maxWidth} : int (default: undefined)<\/li>\n<li>{@link #getX x} : float (default: 0)<\/li>\n<li>{@link #getY y} : float (default: 0)<\/li>\n<li>{@link #getShowExpandButton showExpandButton} : boolean (default: true)<\/li>\n<li>{@link #getShowActionLinksButton showActionLinksButton} : boolean (default: true)<\/li>\n<li>{@link #getShowDetailButton showDetailButton} : boolean (default: true)<\/li>\n<li>{@link #getTitleLineSize titleLineSize} : int (default: 1)<\/li>\n<li>{@link #getDescriptionLineSize descriptionLineSize} : int (default: -1)<\/li>\n<li>{@link #getIconSize iconSize} : int (default: undefined)<\/li>\n<li>{@link #getCoreNodeSize coreNodeSize} : int (default: 0)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActionLinks actionLinks} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActionButtons actionButtons} : sap.suite.ui.commons.networkgraph.ActionButton[]<\/li>\n<li>{@link #getImage image} : sap.suite.ui.commons.networkgraph.NodeImage<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:headerCheckBoxPress headerCheckBoxPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:hover hover} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:collapseExpand collapseExpand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.suite.ui.commons.networkgraph.ElementBase#constructor sap.suite.ui.commons.networkgraph.ElementBase}\ncan be used as well.","getChildNodes":{"!description":"Returns all child nodes.","!type":"fn() -> Array","!category":"function","!static":false},"setShowDetailButton":{"!description":"Sets a new value for property {@link #getShowDetailButton showDetailButton}.\n\nDetermines if the details button is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowDetailButton: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bShowDetailButton":"type: boolean, description: New value for property <code>showDetailButton<\/code>"},"!static":false},"setCoreNodeSize":{"!description":"Sets a new value for property {@link #getCoreNodeSize coreNodeSize}.\n\nDetermines the size of a custom node, which can be useful for nodes that have text or other content outside of its shape.<br>This property is available for custom nodes only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(iCoreNodeSize: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iCoreNodeSize":"type: int, description: New value for property <code>coreNodeSize<\/code>"},"!static":false},"setCollapsed":{"!description":"Sets a new value for property {@link #getCollapsed collapsed}.\n\nDefines if the subtree of this node is collapsed. By default, it is expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bCollapsed: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nHeight of the node. In circular nodes, it determines the circle diameter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(iHeight: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iHeight":"type: int, description: New value for property <code>height<\/code>"},"!static":false},"renderHtmlInfoIcon":{"!description":"Renders custom info icon for HTML rendering.","!type":"fn(oStyle: Object)","!category":"function","parameters":{"oStyle":"type: object, description: Object with additional style appended to info icon"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nAn icon associated with the element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"renderIcon":{"!description":"Creates an SVG icon string.","!type":"fn(mArguments?: Object) -> String","!category":"function","parameters":{"mArguments":"type: Object, description: Arguments passed to the method"},"!static":false},"getHeaderCheckBoxState":{"!description":"Gets current value of property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.HeaderCheckboxState","!category":"function","!static":false},"getTitleLineSize":{"!description":"Gets current value of property {@link #getTitleLineSize titleLineSize}.\n\nDetermines the maximum number of lines allowed for the node's label. If set to 0, the label may have an unlimited number of lines.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"renderElement":{"!description":"Creates an SVG element string.","!type":"fn(name?: String, mAttributes?: String, bClose?: Boolean) -> String","!category":"function","parameters":{"bClose":"type: boolean, description: Indicates whether to close the element. If set to <code>false<\/code>, the caller is responsible for adding a closing tag.","name":"type: string, description: Name of the element","mAttributes":"type: string, description: Attributes of the element."},"!static":false},"attachHover":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself.\n\nThis event is fired when the user moves the mouse pointer over the node.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.suite.ui.commons.networkgraph.Node<\/code> itself"},"!static":false},"detachHover":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:hover hover} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setShowActionLinksButton":{"!description":"Sets a new value for property {@link #getShowActionLinksButton showActionLinksButton}.\n\nDetermines if the links button is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowActionLinksButton: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bShowActionLinksButton":"type: boolean, description: New value for property <code>showActionLinksButton<\/code>"},"!static":false},"insertActionButton":{"!description":"Inserts a actionButton into the aggregation {@link #getActionButtons actionButtons}.","!type":"fn(oActionButton: sap.suite.ui.commons.networkgraph.ActionButton, iIndex: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oActionButton":"type: sap.suite.ui.commons.networkgraph.ActionButton, description: The actionButton to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the actionButton should be inserted at; for a negative value of <code>iIndex<\/code>, the actionButton is inserted at position 0; for a value greater than the current size of the aggregation, the actionButton is inserted at the last position"},"!static":false},"setShowExpandButton":{"!description":"Sets a new value for property {@link #getShowExpandButton showExpandButton}.\n\nDetermines if the expand button is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowExpandButton: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bShowExpandButton":"type: boolean, description: New value for property <code>showExpandButton<\/code>"},"!static":false},"setDescriptionLineSize":{"!description":"Sets a new value for property {@link #getDescriptionLineSize descriptionLineSize}.\n\nDetermines the maximum number of lines allowed to be displayed in the node's description. If you want to hide the description, set this property to <code>-1<\/code> (default). To display an unlimited number of lines, set this property to <code>0<\/code>. This property does not affect the description that appears in the tooltip, which is always fully rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!type":"fn(iDescriptionLineSize: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iDescriptionLineSize":"type: int, description: New value for property <code>descriptionLineSize<\/code>"},"!static":false},"computeTextDimensions":{"!description":"Returns an object that includes an array of text lines and the height of a single line.","!type":"fn(mArguments?: Object)","!category":"function","parameters":{"mArguments":"type: Object, description: Arguments passed to the method"},"!static":false},"setShape":{"!description":"Sets a new value for property {@link #getShape shape}.\n\nShape of the node. The shape is round by default. To create a rectangular node, set this property to Box.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Circle<\/code>.","!type":"fn(sShape: sap.suite.ui.commons.networkgraph.NodeShape) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sShape":"type: sap.suite.ui.commons.networkgraph.NodeShape, description: New value for property <code>shape<\/code>"},"!static":false},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.networkgraph.Node","!category":"function","!static":false},"showActionButtons":{"!description":"Shows or hides the node's action buttons.","!type":"fn(bShow: Boolean)","!category":"function","parameters":{"bShow":"type: boolean, description: Indicates whether to hide or to show buttons"},"!static":false},"getParentNodes":{"!description":"Returns all parent nodes.","!type":"fn() -> Array","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nHeight of the node. In circular nodes, it determines the circle diameter.\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"fireHover":{"!description":"Fires event {@link #event:hover hover} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeAllActionButtons":{"!description":"Removes all the controls from the aggregation {@link #getActionButtons actionButtons}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [sap.suite.ui.commons.networkgraph.ActionButton]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the node. If the width is not defined, the node expands, so it can fit the content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(iWidth: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iWidth":"type: int, description: New value for property <code>width<\/code>"},"!static":false},"getShape":{"!description":"Gets current value of property {@link #getShape shape}.\n\nShape of the node. The shape is round by default. To create a rectangular node, set this property to Box.\n\nDefault value is <code>Circle<\/code>.","!type":"fn() -> sap.suite.ui.commons.networkgraph.NodeShape","!category":"function","!static":false},"setMaxWidth":{"!description":"Sets a new value for property {@link #getMaxWidth maxWidth}.\n\nMaximum width allowed. The auto grow algorithm stops increasing the width at this value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(iMaxWidth: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iMaxWidth":"type: int, description: New value for property <code>maxWidth<\/code>"},"!static":false},"hasVisibleActionButtons":{"!description":"Checks whether the node has visible action buttons","!type":"fn() -> Boolean","!category":"function","!static":false},"setSize":{"!description":"Sets the width and height of the node.<br> If you don't want to change the <code>height<\/code> and <code>width<\/code> properties, use this method to change the internal width and height.","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: Object, description: Arguments passed to the method"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.networkgraph.Node with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.suite.ui.commons.networkgraph.ElementBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setIconSize":{"!description":"Sets a new value for property {@link #getIconSize iconSize}.\n\nDetermines the size of the node's icon. This property can be applied only to circular nodes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(iIconSize: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"iIconSize":"type: int, description: New value for property <code>iconSize<\/code>"},"!static":false},"renderStatusIcon":{"!description":"Renders the status icon. Can be called directly or overridden when custom rendering is used.","!type":"fn(mParameters?: Object)","!category":"function","parameters":{"mParameters":"type: Object, description: Options passed to the method"},"!static":false},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"setGroup":{"!description":"Sets a new value for property {@link #getGroup group}.\n\nKey of the group where this node is included.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sGroup: String) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sGroup":"type: string, description: New value for property <code>group<\/code>"},"!static":false},"detachHeaderCheckBoxPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:headerCheckBoxPress headerCheckBoxPress} event of this <code>sap.suite.ui.commons.networkgraph.Node<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"renderItemContent":{"!description":"This method can only be overridden when custom rendering is used. It must never be called directly.","!type":"fn(mOptions?: Object) -> *","!category":"function","parameters":{"mOptions":"type: Object, description: Options passed to the method"},"!static":false},"getCollapsed":{"!description":"Gets current value of property {@link #getCollapsed collapsed}.\n\nDefines if the subtree of this node is collapsed. By default, it is expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setX":{"!description":"Sets a new value for property {@link #getX x}.\n\nThe x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fX: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fX":"type: float, description: New value for property <code>x<\/code>"},"!static":false},"getY":{"!description":"Gets current value of property {@link #getY y}.\n\nThe y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setY":{"!description":"Sets a new value for property {@link #getY y}.\n\nThe y coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(fY: Number) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"fY":"type: float, description: New value for property <code>y<\/code>"},"!static":false},"getX":{"!description":"Gets current value of property {@link #getX x}.\n\nThe x coordinate of the node. This value must be set after the layout algorithm has finished arranging the graph. It may come from the input data but is not required for most layout algorithms.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setHeaderCheckBoxState":{"!description":"Sets a new value for property {@link #getHeaderCheckBoxState headerCheckBoxState}.\n\nDefines if the Header checkbox should be displayed and whether it should be selected or not. By default, the checkbox is hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hidden<\/code>.","!type":"fn(sHeaderCheckBoxState: sap.suite.ui.commons.networkgraph.HeaderCheckboxState) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"sHeaderCheckBoxState":"type: sap.suite.ui.commons.networkgraph.HeaderCheckboxState, description: New value for property <code>headerCheckBoxState<\/code>"},"!static":false},"setSelected":{"!description":"Sets a new value for property {@link #getSelected selected}.\n\nShows if the node is selected. Once the node is selected, its appearance changes slightly to distinguish it from other nodes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSelected: Boolean) -> sap.suite.ui.commons.networkgraph.Node","!category":"function","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"},"!static":false}},"sap.suite.ui.commons.CalculationBuilderComparisonOperatorType":{"\">=\"":{"!description":"Greater than or equal to.","!type":"String","!category":"enum"},"\"=\"":{"!description":"Equal to.","!type":"String","!category":"enum"},"!description":"Comparison operators supported by the calculation builder.","\">\"":{"!description":"Greater than.","!type":"String","!category":"enum"},"\"!=\"":{"!description":"Not equal to.","!type":"String","!category":"enum"},"\"<=\"":{"!description":"Less than or equal to.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library","\"<\"":{"!description":"Less than.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.CalculationBuilderLayoutType":{"Default":{"!description":"Both the visual and text editors are displayed.","!type":"String","!category":"enum"},"!description":"Layout of the calculation builder.","VisualTextualReadOnly":{"!description":"Both the visual and text editors are displayed, but the text editor is read-only.","!type":"String","!category":"enum"},"TextualOnly":{"!description":"Only the text editor is displayed.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/suite/ui/commons/library","VisualOnly":{"!description":"Only the visual editor is displayed.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.InfoTileValueColor":{"Good":{"!description":"Good InfoTile value color.","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34 Deprecated. sap.m.InfoTileValueColor should be used.<br>Enumeration of possible InfoTile value color settings.","Neutral":{"!description":"Neutral InfoTile value color.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical InfoTile value color.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Error":{"!description":"Error InfoTile value color.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.statusindicator.SizeType":{"Medium":{"!description":"Medium status indicator.","!type":"String","!category":"enum"},"!description":"Predefined sizes of the status indicator.","Large":{"!description":"Large status indicator.","!type":"String","!category":"enum"},"!category":"static class","None":{"!description":"No size settings are applied.","!type":"String","!category":"enum"},"ExtraLarge":{"!description":"Extra large status indicator.","!type":"String","!category":"enum"},"!module":"sap/suite/ui/commons/library","Small":{"!description":"Small status indicator.","!type":"String","!category":"enum"}},"sap.suite.ui.commons.UnifiedThingGroup":{"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content of the group.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getDescription":{"!description":"Gets current value of property {@link #getDescription description}.\n\nThe description of the group.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.UnifiedThingGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDesign":{"!description":"Gets current value of property {@link #getDesign design}.\n\nDefines how the control is rendered.\n\nDefault value is <code>ZeroIndent<\/code>.","!type":"fn() -> sap.suite.ui.commons.ThingGroupDesign","!category":"function","!static":false},"!constructorDescription":"Constructor for a new UnifiedThingGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getDesign design} : sap.suite.ui.commons.ThingGroupDesign (default: ZeroIndent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.suite.ui.commons.UnifiedThingGroup","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"},"!static":false},"!module":"sap/suite/ui/commons/UnifiedThingGroup","destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.suite.ui.commons.UnifiedThingGroup","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control is used in UnifiedThingInspector to display the facet header information.","setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nThe title of the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.suite.ui.commons.UnifiedThingGroup","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"setDescription":{"!description":"Sets a new value for property {@link #getDescription description}.\n\nThe description of the group.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sDescription: String) -> sap.suite.ui.commons.UnifiedThingGroup","!category":"function","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"},"!static":false},"!category":"class","getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nThe title of the group.","!type":"fn() -> String","!category":"function","!static":false},"setDesign":{"!description":"Sets a new value for property {@link #getDesign design}.\n\nDefines how the control is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>ZeroIndent<\/code>.","!type":"fn(sDesign: sap.suite.ui.commons.ThingGroupDesign) -> sap.suite.ui.commons.UnifiedThingGroup","!category":"function","parameters":{"sDesign":"type: sap.suite.ui.commons.ThingGroupDesign, description: New value for property <code>design<\/code>"},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Deprecated. Object page should be used instead.<br>This control is used in UnifiedThingInspector to display the facet header information.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.UnifiedThingGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.suite.ui.commons.util.HtmlElement":{"addClass":{"!description":"Adds a class.","!type":"fn(sClass: String)","!category":"function","parameters":{"sClass":"type: string, description: CSS class to add."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.suite.ui.commons.util.HtmlElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates a HtmlElement which resembles one HTML tag.","addControlData":{"!description":"Adds all html relevant data from UI5 control. It sets ID, adds all custom data and adds custom style classes. This function should be called on the element which resembles the rendered control. It's usually the top element.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: Control to load data from. Usually the control which resembles this element."},"!static":false},"setAttribute":{"!description":"Sets an attribute.","!type":"fn(sKey: String, oValue: String | Number | Boolean, bEscape?: Boolean)","!category":"function","parameters":{"oValue":"type: string|number|boolean, description: Value of an attribute.","bEscape":"type: boolean, description: Tells if the value should be escaped using encodeHTML.","sKey":"type: string, description: Attribute name."},"!static":false},"!module":"sap/suite/ui/commons/util/HtmlElement","getRenderer":{"!description":"Returns a renderer for this tag.","!type":"fn() -> sap.suite.ui.commons.util.HtmlElementRenderer","!category":"function","!static":false},"!description":"HtmlElement A model class for holding information about one HTML tag.","addStyle":{"!description":"Adds a HTML style (eg. \"color:red\").","!type":"fn(sName: String, oValue: String | Number)","!category":"function","parameters":{"oValue":"type: string|number, description: Value of the style.","sName":"type: string, description: Name of the style (eg. margin, color)."},"!static":false},"!category":"class","addChild":{"!description":"Adds a child to the element. A child can be either text, another HtmlElement or a Control. Children will e rendered as a content of this element.","!type":"fn(oChild: String | sap.suite.ui.commons.util.HtmlElement | sap.ui.core.Control)","!category":"function","parameters":{"oChild":"type: string|sap.suite.ui.commons.util.HtmlElement|sap.ui.core.Control, description: Child to add."},"!static":false},"addChildEscaped":{"!description":"Adds a string child and escapes it using encodeHTML.","!type":"fn(sText: String, bConvertLineBreakToBr: Boolean)","!category":"function","parameters":{"sText":"type: string, description: Text to add.","bConvertLineBreakToBr":"type: boolean, description: If true, \\n will be converted to <br>."},"!static":false},"setId":{"!description":"Sets id attribute.","!type":"fn(sId: String, bAddSapUi?: Boolean)","!category":"function","parameters":{"bAddSapUi":"type: boolean, description: If true, data-sap-ui will be set to the Id as well.","sId":"type: string, description: Id to set."},"!static":false},"!helpDescription":"HtmlElement A model class for holding information about one HTML tag.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.suite.ui.commons.util.HtmlElement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}}},"!name":"sap.suite.ui.commons","!version":"1.20.0"}