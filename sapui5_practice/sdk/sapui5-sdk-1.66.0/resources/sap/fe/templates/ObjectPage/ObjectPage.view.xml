<core:View xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
		   xmlns:core="sap.ui.core"
		   xmlns:uxap="sap.uxap"
		   xmlns="sap.m"
		   xmlns:f="sap.f"
		   xmlns:fe="sap.fe"
		   xmlns:dt="sap.ui.dt"
		   xmlns:fl="sap.ui.fl"
		   controllerName="sap.fe.templates.ObjectPage.ObjectPageController"
		   template:require="sap.ui.model.odata.v4.AnnotationHelper sap.fe.core.AnnotationHelper sap.fe.templates.ObjectPage.AnnotationHelper">
	<template:alias name=".MODEL" value="sap.ui.model.odata.v4.AnnotationHelper">
		<template:alias name=".FE" value="sap.fe.core.AnnotationHelper">
			<template:alias name=".AH" value="sap.fe.templates.ObjectPage.AnnotationHelper">
				<template:if test="{= ${metaPath>/currentPath}.set(${entitySet>@sapui.name}) }" />
				<template:with path="entitySet>$Type" var="entityType">
					<!-- OPLayout binding contains explicit $select for SAP__Messages or the path from @Common.Messages until model provides an alternative.
						This is to enable side effects to request messages. -->
					<uxap:ObjectPageLayout id="fe::op" flexEnabled="true"
										fl:flexibility="sap/fe/flexibility/ObjectPage.flexibility"
										dt:designtime="sap/fe/designtime/ObjectPage.designtime"
										showHeaderContent="{= !(${ui>/editable} === 'Editable') }"
										showFooter="{= AH.hasDeterminingActions(${entitySet>$Type/@}) || '{= ${ui>/editable} === \'Editable\' }'}"
										busy="{ui>/busy}"
										upperCaseAnchorBar="false"
										binding="{= ${entityType>@com.sap.vocabularies.Common.v1.Messages}
											?	'{path:\'\', parameters:{$select:\'' + ${entityType>@com.sap.vocabularies.Common.v1.Messages/$Path} + '\', $$ownRequest:true,$$patchWithoutSideEffects:true},events : {dataRequested: \'.handlers.onDataRequested\', dataReceived : \'.handlers.onDataReceived\'}}'
											:	'{path:\'\', parameters:{$$ownRequest:true,$$patchWithoutSideEffects:true},events : {dataRequested: \'.handlers.onDataRequested\', dataReceived : \'.handlers.onDataReceived\'}}'
										}"
										enableLazyLoading="true"
										toggleHeaderOnTitleClick="{= (${ui>/editable} === 'Display') }">
						<uxap:headerTitle>
							<uxap:ObjectPageDynamicHeaderTitle
									primaryArea="Begin"
									binding="{path : ''}">

								<uxap:expandedHeading>
									<FlexBox>
										<FlexBox visible="{= (${ui>/editable} === 'Editable') }">
											<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderImage" type="XML"/>
										</FlexBox>
											<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.TitleAndSubtitle" type="XML"/>
									</FlexBox>
								</uxap:expandedHeading>

								<uxap:snappedHeading>
									<FlexBox>
										<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderImage" type="XML"/>
										<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.TitleAndSubtitle" type="XML"/>
									</FlexBox>
								</uxap:snappedHeading>

								<uxap:content>
									<template:if test="{entitySet>@com.sap.vocabularies.Common.v1.DraftRoot}">
										<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderExpandedAndSnappedContent" type="XML"/>
									</template:if>
								</uxap:content>

								<uxap:actions>
									<fe:Paginator id="fe::paginator"
										visible="{= !(${ui>/editable} === 'Editable') }"
										width="auto"
										navigate=".routing.navigateToContext(${$parameters>context} , { noHistoryEntry : true })">
									</fe:Paginator>

									<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.Actions" type="XML"/>
								</uxap:actions>
								<uxap:breadcrumbs>
									<!-- Breadcrumbs are not visible until we can handle the navigation without history.back -->
									<Breadcrumbs visible="false" modelContextChange=".routing.setBreadcrumbLinks(${$source>/getBindingContext}, ${$source>/getLinks})">
										<template:repeat list="{viewData>/links}" var="link">
											<template:with path="link>context" helper="sap.fe.templates.ObjectPage.AnnotationHelper.getLinkEntityType" var="linkEntityType">
												<Link text="{parts : [{path: 'linkEntityType>@com.sap.vocabularies.UI.v1.HeaderInfo/Title/Value'}, {path: 'linkEntityType>@com.sap.vocabularies.UI.v1.HeaderInfo/TypeName'}] , formatter: 'sap.fe.templates.ObjectPage.AnnotationHelper.formatTextForBreadcrumbs'}"/>
											</template:with>
										</template:repeat>
									</Breadcrumbs>
								</uxap:breadcrumbs>
							</uxap:ObjectPageDynamicHeaderTitle>
						</uxap:headerTitle>
						<uxap:headerContent>
							<FlexBox wrap="Wrap" fitContainer="true" alignItems="Stretch" >
								<template:if test="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl}">
									<template:then>
										<f:Avatar class="sapUiSmallMarginEnd sapUiSmallMarginBottom"
												src="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/ImageUrl@@.MODEL.value}"
												displayShape="Square"
												displaySize="XL"/>
									</template:then>
									<template:elseif
											test="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl}">
										<f:Avatar class="sapUiSmallMarginEnd sapUiSmallMarginBottom"
												src="{entityType>@com.sap.vocabularies.UI.v1.HeaderInfo/TypeImageUrl@@.MODEL.value}"
												displayShape="Square"
												displaySize="XL"/>
									</template:elseif>
								</template:if>
								<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.HeaderContent"
											type="XML"/>
							</FlexBox>
						</uxap:headerContent>
						<uxap:sections>
							<template:if test="{= ${metaPath>/currentPath}.set('/') }" />
							<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.Section" type="XML"/>
						</uxap:sections>
						<template:if test="{= ${path: 'entityType>@', formatter: 'sap.fe.templates.ObjectPage.AnnotationHelper.hasDeterminingActions'} || !(${entitySet>@Org.OData.Capabilities.V1.UpdateRestrictions/Updatable}===false)}">
							<uxap:footer>
								<core:Fragment fragmentName="sap.fe.templates.ObjectPage.view.fragments.FooterContent" type="XML"/>
							</uxap:footer>
						</template:if>
					</uxap:ObjectPageLayout>
				</template:with>
			</template:alias>
		</template:alias>
	</template:alias>
</core:View>
