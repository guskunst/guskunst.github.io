sap.ui.define(["./SceneStateContext","./Processor","./Commands","./Generator","./SceneState","./TotaraUtils","sap/ui/thirdparty/URI"],function(S,P,C,G,a,T,U){"use strict";var b=function(){var _=new a();var c=false;var d=false;var e=new P();var f=null;var g=this;_.loader=this;function s(r,t){if(!g._worker){return false;}var i=false;if(r){while(r.canGenerateCommand()){var n=r.generateRequestCommand(true,t);g._worker.postMessage(n);i=true;}}return i;}function h(){var i=false;var t;var v=_.contextMap.values();var j=v.next();while(!j.done){var k=j.value;j=v.next();if(s(k.requestCommandGenerator,k.token)){i=true;}t=k.token;}if(!i){s(_.requestCommandGenerator,t);}}this.getUrl=function(){return f;};this.init=function(j){f=j;function o(i){if(i){i.phase=S.Phase.FinishedHierarchy;}if(!c){var m=i.meshGroupListMap;var k=new Set(m.keys());i.requestCommandGenerator.pushMeshIds(k);if(k.size===0){if(i.retrievalType===S.RetrievalType.Initial){i.onInitialSceneFinishedCallbacks.execute();}if(i.retrievalType===S.RetrievalType.Partial){i.onPartialRetrievalFinishedCallbacks.execute();}i.onViewPartialRetrievalFinishedCallbacks.execute();if(i.isSceneCompleted()){i.onSceneCompletedCallbacks.execute();}}}var n=_.materialIdsToRequest;if(n&&n.size){n.forEach(function(p){_.materialIdsRequested.add(p);});_.requestCommandGenerator.pushMaterialIds(n);_.materialIdsToRequest.clear();}if(!d&&i.annotationNodeMap.size>0){i.requestCommandGenerator.pushAnnotationIds(Array.from(i.annotationNodeMap.keys()));}h();}e.setCommandCallback(C.notifyFinishedTree,function(i){if(i.error){return;}var k=i.context;o(k);});e.setCommandCallback(C.setMesh,function(k){if(k.error){return;}var m=_.materialIdsToRequest;if(m&&m.size){m.forEach(function(p){_.materialIdsRequested.add(p);});_.requestCommandGenerator.pushMaterialIds(m);_.materialIdsToRequest.clear();}_.requestCommandGenerator.pushGeometryIds(k.geometryIdMap);if(k.updatedContexts){for(var i=0;i<k.updatedContexts.length;i++){var n=k.updatedContexts[i];if(n.meshGroupListMap.size===0){n.phase=S.Phase.FinishedMesh;n.onMeshFinishedCallbacks.execute();if(n.retrievalType===S.RetrievalType.Initial){n.onInitialSceneFinishedCallbacks.execute();}else if(n.retrievalType===S.RetrievalType.Partial){n.onPartialRetrievalFinishedCallbacks.execute();}n.onViewPartialRetrievalFinishedCallbacks.execute();if(n.isSceneCompleted()){n.onSceneCompletedCallbacks.execute();}n.progressCount.geometry.total=n.boundingBoxNodeIdsListMap.size;var t=n.token;if(n.isSceneCompleted()){l(n,"sceneCompleted",t);}else{l(n,"meshFinished",t);}}}}h();});e.setCommandCallback(C.setGeometry,function(k){if(k.error){return;}_.onSetGeometryCallbacks.execute(k);if(k.updatedContexts){for(var i=0;i<k.updatedContexts.length;i++){var m=k.updatedContexts[i];if(m.isSceneCompleted()){m.onSceneCompletedCallbacks.execute();var t=m.token;if(m.isSceneCompleted()){l(m,"sceneCompleted",t);}else{l(m,"geometryFinished",t);}m.finishedTime=Date.now();}}}});e.setCommandCallback(C.setAnnotation,function(i){var m=_.materialIdsToRequest;if(m&&m.size){m.forEach(function(k){_.materialIdsRequested.add(k);});_.requestCommandGenerator.pushMaterialIds(m);_.materialIdsToRequest.clear();h();}});e.setCommandCallback(C.setTree,function(i){if(i.result&&i.result==="failure"&&i.context){_.contextMap.delete(i.context.sceneId);}});e.setCommandCallback(C.setViewGroup,function(r){if(r.context){r.context.requestCommandGenerator.pushViewIds(r.viewIdSet);_.requestCommandGenerator.pushImageIds(r.imageIdSet);h();}});e.setCommandCallback(C.notifyFinishedView,function(r){if(r.error){return;}var i=r.context;if(i){var m=_.materialIdsToRequest;if(m&&m.size){m.forEach(function(q){_.materialIdsRequested.add(q);});_.requestCommandGenerator.pushMaterialIds(m);_.materialIdsToRequest.clear();h();}if(_.highlightStyleIds.size){_.requestCommandGenerator.pushHighlightStyleIds(_.highlightStyleIds);h();}if(r.view){var n=[];i.updatedNodes.forEach(function(v){n.push(v);});r.view.updatedNodes=n;i.viewIds.delete(r.viewId);}if(i.viewIds.size===0){_.sceneBuilder.finalizeViewGroups(i.sceneId);_.onViewGroupUpdatedCallbacks.execute();if(_.sequenceIds.size===0){_.onViewGroupFinishedCallbacks.execute();}}if(i.meshGroupListMap.size===0){i.onViewFinishedCallbacks.execute(r.view);}else{var k=new Set(i.meshGroupListMap.keys());i.requestCommandGenerator.pushMeshIds(k);var p=function(){i.onViewPartialRetrievalFinishedCallbacks.detach(p);i.onViewFinishedCallbacks.execute(r.view);};i.onViewPartialRetrievalFinishedCallbacks.attach(p);l(i,"notifyFinishedView",i.token);h();}}h();});e.setCommandCallback(C.setMaterial,function(r){if(r.error){_.onMaterialFinishedCallbacks.execute();return;}r.forEach(function(v,k){_.requestCommandGenerator.pushImageIds(v);_.onMaterialFinishedCallbacks.execute(k);});h();});e.setCommandCallback(C.setImage,function(r){if(r.error){return;}if(_.texturesToUpdate.get(r.id)==null){_.onImageFinishedCallbacks.execute(r);}h();});e.setCommandCallback(C.setHighlighStyle,function(r){if(r.error){return;}if(_.highlightStyleIds.size>0){h();}else{_.sceneBuilder.finalizeHighlightsInViews();}});e.setCommandCallback(C.setView,function(r){if(r.error){return;}var i=r.context;var t=i?i.token:null;l(i,"setView",t);});e.setCommandCallback(C.setPlayback,function(r){if(r.error){return;}if(r.sequenceIdSet.size>0){_.hasAnimation=true;var i=_.viewIdSceneIdMap.get(r.viewId);var k=_.getContext(i);if(k){k.requestCommandGenerator.pushSequenceIds(r.sequenceIdSet);}h();}else{_.sceneBuilder.finalizeAnimation();_.sceneBuilder.finalizePlaybacks();_.sceneBuilder.finalizeHighlightsInViews();_.hasAnimation=false;}});e.setCommandCallback(C.setSequence,function(r){if(r.error){return;}if(_.sequenceIds.size>0){h();}if(r.trackIdSet.size>0){_.requestCommandGenerator.pushTrackIds(r.trackIdSet);h();}else{_.hasAnimation=false;_.onSetSequenceCallbacks.execute();var i=true;var v=_.contextMap.values();var n=v.next();while(!n.done){var k=n.value;if(k.viewIds.size>0){i=false;break;}n=v.next();}if(i){_.onViewGroupFinishedCallbacks.execute();}}});e.setCommandCallback(C.setTrack,function(r){if(r.error){return;}if(_.trackIds.size>0){s();}else{_.sceneBuilder.finalizeAnimation();_.sceneBuilder.finalizePlaybacks();_.sceneBuilder.finalizeHighlightsInViews();_.onSetTrackCallbacks.execute();var i=true;var v=_.contextMap.values();var n=v.next();while(!n.done){var k=n.value;if(k.viewIds.size>0){i=false;break;}n=v.next();}if(i){_.onViewGroupFinishedCallbacks.execute();}}});e.setCommandCallback(C.notifyError,function(r){_.onErrorCallbacks.execute(r);});var g=this;return new Promise(function(r){if(!g._worker){var u=new U(sap.ui.require.toUrl("sap/ui/vk/totara/TotaraLoaderWorker.js"));if(u.is("relative")){u=u.absoluteTo(new U(location.href));}var i="'"+u.toString()+"'";if(sap.ui.Device.browser.internet_explorer){var p=new U(sap.ui.require.toUrl("sap/ui/thirdparty/es6-promise.js"));var k=new U(sap.ui.require.toUrl("sap/ui/thirdparty/es6-string-methods.js"));if(p.is("relative")){p=p.absoluteTo(new U(location.href));k=k.absoluteTo(new U(location.href));}i="'"+p.toString()+"','"+k.toString()+"',"+i;}g._worker=new Worker((window.URL||window.webkitURL).createObjectURL(new Blob(["importScripts("+i+");"],{"type":"application/javascript"})));g._worker.onmessage=function(m){var n=m.data;if(n.ready){return;}if(n.name==="getAuthorization"){var q;if(n.sceneId){q=_.getContext(n.sceneId);}if(q&&q.authorizationHandler){q.authorizationHandler(n.jsonContent.url).then(function(v){g._worker.postMessage({"method":"setAuthorization","authorizationToken":v});}).catch(function(v){g._worker.postMessage({"method":"setAuthorization","authorizationToken":null,"error":v.toString()});});}else{g._worker.postMessage({"method":"setAuthorization","authorizationToken":null});}return;}var t={name:n.name,jsonContent:n.jsonContent};if(n.binaryContent){t.binaryContent=n.binaryContent;}e.process(_,t);};g._worker.onerror=function(m){};}});};this.enablePushMesh=function(i){c=i;};this.dispose=function(){e=null;if(_){if(_.contextMap){var v=_.contextMap.values();var i=v.next();while(!i.done){var j=i.value;i=v.next();j.dispose();}}_.dispose();_=null;}if(this._worker){this._worker.terminate();this._worker=undefined;}};function l(i,n,t){if(i&&i.progressLogger&&t&&n){i.progressLogger.logPerformance(n,t);}}this.request=function(i,j,k){if(!j.root){throw"context must include root where three js objects are attached to";}var m=_.createContext(i,j);_.currentSceneInfo.id=i;m.retrievalType=S.RetrievalType.Initial;m.authorizationHandler=k;m.initialRequestTime=Date.now();var t;if(m.enableLogger){var n=T.createLogger(i,m,this);if(n){t=T.generateToken();m.token=t;}}var o=j.includeHidden!==undefined?j.includeHidden:true;var p=j.includeAnimation!==undefined?j.includeAnimation:true;var q=j.$select!==undefined?j.$select:"name,transform,meshId,annotationId,materialId,contentType,visible,opacity,renderOrder";var r=j.pushViewGroups!==undefined?j.pushViewGroups:true;var u={pushMaterials:true,pushMeshes:c,includeHidden:o,includeAnimation:p,pushPMI:j.pushPMI||false,metadataFilter:j.metadataFilter,token:t,pushViewGroups:r,$select:q};if(j.activateView){u.activateView=j.activateView;}u.sceneId=i;u.context=i;var v=G.createGetTreeCommand(u);l(m,"modelRequested",t);this._worker.postMessage({method:"initializeConnection",url:f,useSecureConnection:j.useSecureConnection,token:m.token,command:v,sceneId:i});};this.postMessage=function(m){this._worker.postMessage(m);};this.update=function(i,j,v){var g=this;_.currentSceneInfo.id=i;return new Promise(function(r,k){var m=_.getContext(i);if(!m){k("no context for ${sceneVeId}.");}m.nodeSidsForPartialTree=new Set(j);m.retrievalType=S.RetrievalType.Partial;var n=m.includeHidden!==undefined?m.includeHidden:true;var o=m.includeAnimation!==undefined?m.includeAnimation:true;var p=m.$select!==undefined?m.$select:"name,transform,meshId,annotationId,materialId,contentType,visible,opacity,renderOrder";var q=m.pushViewGroups!==undefined?m.pushViewGroups:true;var t={pushMaterials:true,pushMeshes:c,filter:j.join(),includeAnimation:o,includeHidden:n,pushPMI:m.pushPMI||false,metadataFilter:m.metadataFilter,pushViewGroups:q,$select:p,breadcrumbs:true};var u;if(m.progressLogger){u=T.generateToken();m.token=u;}t.sceneId=i;t.context=i;if(v){t.activateView=v;}var w=G.createGetTreeCommand(t);var x=function(){m.onPartialRetrievalFinishedCallbacks.detach(x);l(m,"updateFinished(mesh)",u);var y=[];var z=[];m.replacedNodes.forEach(function(D,E){z.push(D);y.push(E);});var A=y;var B=z;r({sceneVeId:i,sids:j,replacedNodeRefs:A,replacementNodeRefs:B});};m.onPartialRetrievalFinishedCallbacks.attach(x);l(m,"updateRequested",u);g._worker.postMessage({method:"update",command:w});});};this.requestViewGroup=function(i,v){if(!v){return Promise.reject("invalid arg: viewGroupId undefined");}var j=_.getContext(i);if(!j){return Promise.reject("no scene exist for ${sceneVeId}");}var g=this;var p=new Promise(function(r,k){var m=_.sceneBuilder.getViewGroup(v,i);if(m&&m.length){r(m);return;}var t;if(j.progressLogger){t=T.generateToken();j.token=t;}var o={sceneId:i,id:v,token:t};var n=G.createGetViewGroupsCommand(o);var q=C.getViewGroups;var u=function(){_.onViewGroupFinishedCallbacks.detach(u);l(j,"onViewGroupFinished",t);var w=_.sceneBuilder.getViewGroup(v,i);if(w&&w.length){r(w);}else{k("no view ground data");}};_.onViewGroupFinishedCallbacks.attach(u);j.currentViewGroupId=v;g._worker.postMessage({method:q,command:n});});return p;};this.requestView=function(i,v,j,u){_.currentSceneInfo.id=i;if(v!=="static"&&v!=="dynamic"){return Promise.reject("invalid arg: supported type - static, dynamic");}if(!j){return Promise.reject("invalid arg: viewId undefined");}var k=_.getContext(i);if(!k){return Promise.reject("no scene exist for ${sceneVeId}");}_.viewIdSceneIdMap.set(j,i);var t;if(k.progressLogger){t=T.generateToken();k.token=t;}var m=k.includeHidden!==undefined?k.includeHidden:false;var n=k.includeAnimation!==undefined?k.includeAnimation:true;var o=k.$select!==undefined?k.$select:undefined;_.hasAnimation=false;var g=this;var p;var q=new Promise(function(r,w){if(u){var x=_.sceneBuilder.getView(j,i);if(x){r(x);return;}}var y="";var z;if(v==="static"){p={sceneId:i,id:j,token:t,includeHidden:m,includeAnimation:n,$select:o};y+=G.createGetViewCommand(p);z=C.getView;}else{p={sceneId:i,type:j,token:t};y+=G.createGetDynamicViewCommand(p);z=C.getDynamicView;}var A=function(E){k.onViewFinishedCallbacks.detach(A);l(k,"onViewFinished",t);if(!_.hasAnimation){if(E){r(E);}else{w("no view data");}}else{k.currentView=E;}};k.onViewFinishedCallbacks.attach(A);var B=function(){_.onSetSequenceCallbacks.detach(B);l(k,"onSetSequence",t);if(k.currentView){r(k.currentView);}else{w("no view data");}};_.onSetSequenceCallbacks.attach(B);var D=function(E){_.onSetTrackCallbacks.detach(D);l(k,"onSetTrack",t);if(k.currentView){r(k.currentView);}else{w("no view data");}};_.onSetTrackCallbacks.attach(D);l(k,"viewRequested",t);g._worker.postMessage({method:z,command:y});});return q;};this.requestMaterial=function(i){if(!i){return Promise.reject("invalid arg: materialId undefined");}var p=new Promise(function(r,j){var k=_.sceneBuilder.getMaterial(i);if(k){r(k);return;}_.requestCommandGenerator.pushMaterialIds([i]);_.materialIdsRequested.add(i);var n=function(q){var m=_.sceneBuilder.getMaterial(i);if(m&&m.userData&&m.userData.idsOfImagesToRead){if(!m.userData.idsOfImagesToRead.has(q.id)){return;}else{m.userData.idsOfImagesToRead.delete(q.id);}if(m.userData.idsOfImagesToRead.size){return;}else{r(m);}}else{j("no material data");}_.onImageFinishedCallbacks.detach(n);};var o=function(q){if(i!=q){return;}_.onMaterialFinishedCallbacks.detach(o);var m=_.sceneBuilder.getMaterial(i);if(m&&m.userData&&m.userData.idsOfImagesToRead&&m.userData.idsOfImagesToRead.size){return;}_.onImageFinishedCallbacks.detach(n);if(m!=null){r(m);}else{j("no material data");}};_.onMaterialFinishedCallbacks.attach(o);_.onImageFinishedCallbacks.attach(n);h();});return p;};this.getState=function(){return _;};this.decrementResourceCountersForDeletedTreeNode=function(i,j,n){i.sceneBuilder.decrementResourceCountersForDeletedTreeNode(n,j.sceneId);};this.printLogTokens=function(){if(!_||!_.contextMap){console.log("printLogTokens:no data to print");return;}var i=_.contextMap.entries();var j=i.next();while(!j.done){var k=j.key;var m=j.value;j=i.next();console.log("log tokens for scene => "+k);console.log("---------------------------------------");if(m.progressLogger){var n=m.progressLogger.getTokens();var o=n.keys();var p=o.next();while(!p.done){var t=p.value;o.next();console.log(t);}}console.log("---------------------------------------");}};this.getSceneBuilder=function(){if(_){return _.sceneBuilder;}return null;};};return b;});
